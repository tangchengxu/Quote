// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace QQServer {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Qqserver {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_QQServer_TokenReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.TokenReq, global::QQServer.TokenReq.Builder> internal__static_QQServer_TokenReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_TokenRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.TokenRsp, global::QQServer.TokenRsp.Builder> internal__static_QQServer_TokenRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_LoginReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.LoginReq, global::QQServer.LoginReq.Builder> internal__static_QQServer_LoginReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_LoginRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.LoginRsp, global::QQServer.LoginRsp.Builder> internal__static_QQServer_LoginRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_WriteIDCodeReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.WriteIDCodeReq, global::QQServer.WriteIDCodeReq.Builder> internal__static_QQServer_WriteIDCodeReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_WriteIDCodeRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.WriteIDCodeRsp, global::QQServer.WriteIDCodeRsp.Builder> internal__static_QQServer_WriteIDCodeRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_WriteSmsReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.WriteSmsReq, global::QQServer.WriteSmsReq.Builder> internal__static_QQServer_WriteSmsReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_WriteSmsRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.WriteSmsRsp, global::QQServer.WriteSmsRsp.Builder> internal__static_QQServer_WriteSmsRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_UserInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.UserInfo, global::QQServer.UserInfo.Builder> internal__static_QQServer_UserInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GroupInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GroupInfo, global::QQServer.GroupInfo.Builder> internal__static_QQServer_GroupInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_RoomInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.RoomInfo, global::QQServer.RoomInfo.Builder> internal__static_QQServer_RoomInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GetFriendListReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GetFriendListReq, global::QQServer.GetFriendListReq.Builder> internal__static_QQServer_GetFriendListReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GetFriendListRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GetFriendListRsp, global::QQServer.GetFriendListRsp.Builder> internal__static_QQServer_GetFriendListRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GetRoomListReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GetRoomListReq, global::QQServer.GetRoomListReq.Builder> internal__static_QQServer_GetRoomListReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GetRoomListRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GetRoomListRsp, global::QQServer.GetRoomListRsp.Builder> internal__static_QQServer_GetRoomListRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GetRoomMemberInfoReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GetRoomMemberInfoReq, global::QQServer.GetRoomMemberInfoReq.Builder> internal__static_QQServer_GetRoomMemberInfoReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GetRoomMemberInfoRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GetRoomMemberInfoRsp, global::QQServer.GetRoomMemberInfoRsp.Builder> internal__static_QQServer_GetRoomMemberInfoRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_QQMessage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.QQMessage, global::QQServer.QQMessage.Builder> internal__static_QQServer_QQMessage__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_SendMessageReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.SendMessageReq, global::QQServer.SendMessageReq.Builder> internal__static_QQServer_SendMessageReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_SendMessageRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.SendMessageRsp, global::QQServer.SendMessageRsp.Builder> internal__static_QQServer_SendMessageRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_PubReciveMessage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.PubReciveMessage, global::QQServer.PubReciveMessage.Builder> internal__static_QQServer_PubReciveMessage__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_PubConversation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.PubConversation, global::QQServer.PubConversation.Builder> internal__static_QQServer_PubConversation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_LogOutReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.LogOutReq, global::QQServer.LogOutReq.Builder> internal__static_QQServer_LogOutReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_LogOutRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.LogOutRsp, global::QQServer.LogOutRsp.Builder> internal__static_QQServer_LogOutRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_ReciveDataReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.ReciveDataReq, global::QQServer.ReciveDataReq.Builder> internal__static_QQServer_ReciveDataReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_ReciveDataRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.ReciveDataRsp, global::QQServer.ReciveDataRsp.Builder> internal__static_QQServer_ReciveDataRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_ReConnectReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.ReConnectReq, global::QQServer.ReConnectReq.Builder> internal__static_QQServer_ReConnectReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_ReConnectRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.ReConnectRsp, global::QQServer.ReConnectRsp.Builder> internal__static_QQServer_ReConnectRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_PubDisconnect__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.PubDisconnect, global::QQServer.PubDisconnect.Builder> internal__static_QQServer_PubDisconnect__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_AddFriendReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.AddFriendReq, global::QQServer.AddFriendReq.Builder> internal__static_QQServer_AddFriendReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_AddFriendRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.AddFriendRsp, global::QQServer.AddFriendRsp.Builder> internal__static_QQServer_AddFriendRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GetChatHistoryMsgReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GetChatHistoryMsgReq, global::QQServer.GetChatHistoryMsgReq.Builder> internal__static_QQServer_GetChatHistoryMsgReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GetChatHistoryMsgRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GetChatHistoryMsgRsp, global::QQServer.GetChatHistoryMsgRsp.Builder> internal__static_QQServer_GetChatHistoryMsgRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GetRoomHistoryMsgReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GetRoomHistoryMsgReq, global::QQServer.GetRoomHistoryMsgReq.Builder> internal__static_QQServer_GetRoomHistoryMsgReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GetRoomHistoryMsgRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GetRoomHistoryMsgRsp, global::QQServer.GetRoomHistoryMsgRsp.Builder> internal__static_QQServer_GetRoomHistoryMsgRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_SetChatMsgReadReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.SetChatMsgReadReq, global::QQServer.SetChatMsgReadReq.Builder> internal__static_QQServer_SetChatMsgReadReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_SetChatMsgReadRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.SetChatMsgReadRsp, global::QQServer.SetChatMsgReadRsp.Builder> internal__static_QQServer_SetChatMsgReadRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_SetRoomMsgReadReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.SetRoomMsgReadReq, global::QQServer.SetRoomMsgReadReq.Builder> internal__static_QQServer_SetRoomMsgReadReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_SetRoomMsgReadRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.SetRoomMsgReadRsp, global::QQServer.SetRoomMsgReadRsp.Builder> internal__static_QQServer_SetRoomMsgReadRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_ReSubscribeReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.ReSubscribeReq, global::QQServer.ReSubscribeReq.Builder> internal__static_QQServer_ReSubscribeReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_ReSubscribeRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.ReSubscribeRsp, global::QQServer.ReSubscribeRsp.Builder> internal__static_QQServer_ReSubscribeRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GetMyUserInfoReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GetMyUserInfoReq, global::QQServer.GetMyUserInfoReq.Builder> internal__static_QQServer_GetMyUserInfoReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GetMyUserInfoRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GetMyUserInfoRsp, global::QQServer.GetMyUserInfoRsp.Builder> internal__static_QQServer_GetMyUserInfoRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_ImageDesc__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.ImageDesc, global::QQServer.ImageDesc.Builder> internal__static_QQServer_ImageDesc__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GetChatImagAddrReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GetChatImagAddrReq, global::QQServer.GetChatImagAddrReq.Builder> internal__static_QQServer_GetChatImagAddrReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GetChatImagAddrRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GetChatImagAddrRsp, global::QQServer.GetChatImagAddrRsp.Builder> internal__static_QQServer_GetChatImagAddrRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GetRoomImagResourcReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GetRoomImagResourcReq, global::QQServer.GetRoomImagResourcReq.Builder> internal__static_QQServer_GetRoomImagResourcReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GetRoomImagResourcRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GetRoomImagResourcRsp, global::QQServer.GetRoomImagResourcRsp.Builder> internal__static_QQServer_GetRoomImagResourcRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GetChatImagResourcReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GetChatImagResourcReq, global::QQServer.GetChatImagResourcReq.Builder> internal__static_QQServer_GetChatImagResourcReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_GetChatImagResourcRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.GetChatImagResourcRsp, global::QQServer.GetChatImagResourcRsp.Builder> internal__static_QQServer_GetChatImagResourcRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_UploadChatImagReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.UploadChatImagReq, global::QQServer.UploadChatImagReq.Builder> internal__static_QQServer_UploadChatImagReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_UploadChatImagRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.UploadChatImagRsp, global::QQServer.UploadChatImagRsp.Builder> internal__static_QQServer_UploadChatImagRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_OnlineFriendReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.OnlineFriendReq, global::QQServer.OnlineFriendReq.Builder> internal__static_QQServer_OnlineFriendReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_OnlineFriendRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.OnlineFriendRsp, global::QQServer.OnlineFriendRsp.Builder> internal__static_QQServer_OnlineFriendRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_OnlineState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.OnlineState, global::QQServer.OnlineState.Builder> internal__static_QQServer_OnlineState__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_FriendInfoChangeNotify__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.FriendInfoChangeNotify, global::QQServer.FriendInfoChangeNotify.Builder> internal__static_QQServer_FriendInfoChangeNotify__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_CompareFriendChangeReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.CompareFriendChangeReq, global::QQServer.CompareFriendChangeReq.Builder> internal__static_QQServer_CompareFriendChangeReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_CompareFriendChangeRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.CompareFriendChangeRsp, global::QQServer.CompareFriendChangeRsp.Builder> internal__static_QQServer_CompareFriendChangeRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_FriendListInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.FriendListInfo, global::QQServer.FriendListInfo.Builder> internal__static_QQServer_FriendListInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_PubFriendListInfoChange__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.PubFriendListInfoChange, global::QQServer.PubFriendListInfoChange.Builder> internal__static_QQServer_PubFriendListInfoChange__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_QueryMessageContextReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.QueryMessageContextReq, global::QQServer.QueryMessageContextReq.Builder> internal__static_QQServer_QueryMessageContextReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QQServer_QueryMessageContextRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::QQServer.QueryMessageContextRsp, global::QQServer.QueryMessageContextRsp.Builder> internal__static_QQServer_QueryMessageContextRsp__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Qqserver() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5xcXNlcnZlci5wcm90bxIIUVFTZXJ2ZXIiHAoIVG9rZW5SZXESEAoIdXNl", 
            "ck5hbWUYASACKAkiGQoIVG9rZW5Sc3ASDQoFdG9rZW4YASACKAkihgEKCExv", 
            "Z2luUmVxEhAKCHVzZXJOYW1lGAEgAigJEhAKCHBhc3NXb3JkGAIgAigJEhEK", 
            "CWNvbm5lY3RJZBgDIAIoCRINCgV0b2tlbhgEIAIoCRINCgVwY01hYxgFIAEo", 
            "CRIRCglsb2dpblR5cGUYBiABKAUSEgoKc2VydmVyVHlwZRgHIAEoBSJICghM", 
            "b2dpblJzcBIRCgllcnJvckNvZGUYASACKAUSDQoFdG9rZW4YAiABKAkSDQoF", 
            "aW1hZ2UYAyABKAwSCwoDdWluGAQgASgJIi8KDldyaXRlSURDb2RlUmVxEg0K", 
            "BXRva2VuGAEgAigJEg4KBmlkQ29kZRgCIAIoCSIyCg5Xcml0ZUlEQ29kZVJz", 
            "cBIRCgllcnJvckNvZGUYASACKAUSDQoFaW1hZ2UYAiABKAwiLQoLV3JpdGVT", 
            "bXNSZXESDQoFdG9rZW4YASACKAkSDwoHc21zQ29kZRgCIAIoCSIgCgtXcml0", 
            "ZVNtc1JzcBIRCgllcnJvckNvZGUYASACKAUiWwoIVXNlckluZm8SEAoIdXNl", 
            "ck5hbWUYASACKAkSEAoIc2hvd05hbWUYAiABKAkSCwoDdWluGAMgASgJEgwK", 
            "BHR5cGUYBCABKAUSEAoIbmlja05hbWUYBSABKAkiVQoJR3JvdXBJbmZvEg8K", 
            "B2dyb3VwSWQYASACKAkSEQoJZ3JvdXBOYW1lGAIgAigJEiQKCHVzZXJJbmZv", 
            "GAMgAygLMhIuUVFTZXJ2ZXIuVXNlckluZm8iXQoIUm9vbUluZm8SCwoDdWlu", 
            "GAEgAigJEhAKCHJvb21OYW1lGAIgAigJEgwKBGNvZGUYAyACKAkSJAoIdXNl", 
            "ckluZm8YBCADKAsyEi5RUVNlcnZlci5Vc2VySW5mbyI0ChBHZXRGcmllbmRM", 
            "aXN0UmVxEg0KBXRva2VuGAEgAigJEhEKCWlzUmVmcmVzaBgCIAEoCCJJChBH", 
            "ZXRGcmllbmRMaXN0UnNwEhEKCWVycm9yQ29kZRgBIAIoBRIiCgVncm91cBgC", 
            "IAMoCzITLlFRU2VydmVyLkdyb3VwSW5mbyIfCg5HZXRSb29tTGlzdFJlcRIN", 
            "CgV0b2tlbhgBIAIoCSJFCg5HZXRSb29tTGlzdFJzcBIRCgllcnJvckNvZGUY", 
            "ASACKAUSIAoEcm9vbRgCIAMoCzISLlFRU2VydmVyLlJvb21JbmZvIkAKFEdl", 
            "dFJvb21NZW1iZXJJbmZvUmVxEg0KBXRva2VuGAEgAigJEgsKA3VpbhgCIAIo", 
            "CRIMCgRjb2RlGAMgAigJIjwKFEdldFJvb21NZW1iZXJJbmZvUnNwEiQKCHVz", 
            "ZXJJbmZvGAEgAygLMhIuUVFTZXJ2ZXIuVXNlckluZm8iLQoJUVFNZXNzYWdl", 
            "Eg8KB21zZ1R5cGUYASACKAUSDwoHY29udGVudBgCIAIoDCJqCg5TZW5kTWVz", 
            "c2FnZVJlcRINCgV0b2tlbhgBIAIoCRILCgN1aW4YAiACKAkSDAoEdHlwZRgD", 
            "IAIoBRIgCgNtc2cYBCADKAsyEy5RUVNlcnZlci5RUU1lc3NhZ2USDAoEY29k", 
            "ZRgFIAEoCSIxCg5TZW5kTWVzc2FnZVJzcBIRCgllcnJvckNvZGUYASACKAUS", 
            "DAoEdGltZRgCIAEoAyKoAQoQUHViUmVjaXZlTWVzc2FnZRIPCgdmcm9tVWlu", 
            "GAEgAigJEhAKCGZyb21OYW1lGAIgASgJEg0KBXRvVWluGAMgASgJEgwKBHR5", 
            "cGUYBCABKAUSDAoEdGltZRgFIAIoAxIgCgNtc2cYBiADKAsyEy5RUVNlcnZl", 
            "ci5RUU1lc3NhZ2USFAoMbGFzdFJlYWRUaW1lGAcgASgDEg4KBnNlck51bRgI", 
            "IAEoAyKOAQoPUHViQ29udmVyc2F0aW9uEgwKBHR5cGUYASACKAUSCwoDdWlu", 
            "GAIgAigJEisKB21zZ0xpc3QYAyADKAsyGi5RUVNlcnZlci5QdWJSZWNpdmVN", 
            "ZXNzYWdlEhEKCW5ld01zZ051bRgEIAIoBRIQCghzdGFydE51bRgFIAEoAxIO", 
            "CgZlbmROdW0YBiABKAMiGgoJTG9nT3V0UmVxEg0KBXRva2VuGAEgAigJIgsK", 
            "CUxvZ091dFJzcCI9Cg1SZWNpdmVEYXRhUmVxEg0KBXRva2VuGAEgAigJEgwK", 
            "BGRhdGEYAiACKAwSDwoHY2hhbm5lbBgDIAEoBSIiCg1SZWNpdmVEYXRhUnNw", 
            "EhEKCWVycm9yQ29kZRgBIAIoBSIdCgxSZUNvbm5lY3RSZXESDQoFdG9rZW4Y", 
            "ASACKAkiIQoMUmVDb25uZWN0UnNwEhEKCWVycm9yQ29kZRgBIAIoBSIPCg1Q", 
            "dWJEaXNjb25uZWN0Ij4KDEFkZEZyaWVuZFJlcRINCgV0b2tlbhgBIAIoCRIO", 
            "CgZudW1iZXIYAiACKAkSDwoHbWVzc2FnZRgDIAEoCSIhCgxBZGRGcmllbmRS", 
            "c3ASEQoJZXJyb3JDb2RlGAEgAigFImMKFEdldENoYXRIaXN0b3J5TXNnUmVx", 
            "Eg0KBXRva2VuGAEgAigJEgsKA3VpbhgCIAIoCRIQCghsYXN0VGltZRgDIAIo", 
            "AxINCgVsaW1pdBgEIAIoBRIOCgZyYW5kb20YBSACKAMiZgoUR2V0Q2hhdEhp", 
            "c3RvcnlNc2dSc3ASEQoJZXJyb3JDb2RlGAEgAigFEisKB21zZ0xpc3QYAiAD", 
            "KAsyGi5RUVNlcnZlci5QdWJSZWNpdmVNZXNzYWdlEg4KBnJhbmRvbRgDIAEo", 
            "AyJWChRHZXRSb29tSGlzdG9yeU1zZ1JlcRINCgV0b2tlbhgBIAIoCRIQCghy", 
            "b29tQ29kZRgCIAIoCRIOCgZlbmROdW0YAyACKAMSDQoFbGltaXQYBCACKAUi", 
            "eAoUR2V0Um9vbUhpc3RvcnlNc2dSc3ASEQoJZXJyb3JDb2RlGAEgAigFEisK", 
            "B21zZ0xpc3QYAiADKAsyGi5RUVNlcnZlci5QdWJSZWNpdmVNZXNzYWdlEhAK", 
            "CHN0YXJ0TnVtGAUgASgDEg4KBmVuZE51bRgGIAEoAyJHChFTZXRDaGF0TXNn", 
            "UmVhZFJlcRINCgV0b2tlbhgBIAIoCRINCgV0b1VpbhgCIAIoCRIUCgxsYXN0", 
            "UmVhZFRpbWUYAyACKAMiJgoRU2V0Q2hhdE1zZ1JlYWRSc3ASEQoJZXJyb3JD", 
            "b2RlGAEgAigFIkQKEVNldFJvb21Nc2dSZWFkUmVxEg0KBXRva2VuGAEgAigJ", 
            "EhAKCHJvb21Db2RlGAIgAigJEg4KBnNlck51bRgDIAIoAyImChFTZXRSb29t", 
            "TXNnUmVhZFJzcBIRCgllcnJvckNvZGUYASACKAUiHwoOUmVTdWJzY3JpYmVS", 
            "ZXESDQoFdG9rZW4YASACKAkiIwoOUmVTdWJzY3JpYmVSc3ASEQoJZXJyb3JD", 
            "b2RlGAEgAigFIiEKEEdldE15VXNlckluZm9SZXESDQoFdG9rZW4YASACKAki", 
            "RwoQR2V0TXlVc2VySW5mb1JzcBIRCgllcnJvckNvZGUYASACKAUSIAoEaW5m", 
            "bxgCIAEoCzISLlFRU2VydmVyLlVzZXJJbmZvIrUBCglJbWFnZURlc2MSEQoJ", 
            "dGh1bWJfdXJsGAEgASgJEhAKCG9yaWdfdXJsGAIgASgJEhEKCWltZ193aWR0", 
            "aBgDIAEoBRISCgppbWdfaGVpZ2h0GAQgASgFEgwKBHV1aWQYBSABKAkSEAoI", 
            "ZmlsZV9sZW4YBiABKAUSDwoHaW1nX21kNRgHIAEoDBINCgVyZXNJZBgIIAEo", 
            "DBIOCgZmaWxlSWQYCSABKAMSDAoEdHlwZRgKIAEoBSIUChJHZXRDaGF0SW1h", 
            "Z0FkZHJSZXEiQQoSR2V0Q2hhdEltYWdBZGRyUnNwEhEKCWVycm9yQ29kZRgB", 
            "IAIoBRIKCgJpcBgCIAEoCRIMCgRwb3J0GAMgASgFIoQBChVHZXRSb29tSW1h", 
            "Z1Jlc291cmNSZXESDQoFdG9rZW4YASACKAkSDwoHcm9vbVVpbhgCIAIoCRIR", 
            "Cgl0b3RhbFNpemUYAyACKAUSCwoDbWQ1GAQgAigJEg0KBXdpZHRoGAUgAigF", 
            "Eg4KBmhlaWdodBgGIAIoBRIMCgR0eXBlGAcgAigFImgKFUdldFJvb21JbWFn", 
            "UmVzb3VyY1JzcBIRCgllcnJvckNvZGUYASACKAUSDwoHaHR0cFVybBgCIAEo", 
            "CRIMCgR1dWlkGAMgASgJEg0KBXJlc0lkGAQgASgMEg4KBmZpbGVJZBgFIAEo", 
            "AyKCAQoVR2V0Q2hhdEltYWdSZXNvdXJjUmVxEg0KBXRva2VuGAEgAigJEg0K", 
            "BXRvVWluGAIgAigJEhEKCXRvdGFsU2l6ZRgDIAIoBRILCgNtZDUYBCACKAkS", 
            "DQoFd2lkdGgYBSACKAUSDgoGaGVpZ2h0GAYgAigFEgwKBHR5cGUYByACKAUi", 
            "ewoVR2V0Q2hhdEltYWdSZXNvdXJjUnNwEhEKCWVycm9yQ29kZRgBIAIoBRIM", 
            "CgR1dWlkGAIgASgJEg0KBXJlc0lkGAMgASgMEg4KBmZpbGVJZBgEIAEoAxIR", 
            "CglibG9ja1NpemUYBSABKAUSDwoHdGlja2V0cxgGIAEoDCKVAQoRVXBsb2Fk", 
            "Q2hhdEltYWdSZXESDQoFdG9rZW4YASACKAkSDAoEdXVpZBgCIAEoCRINCgVy", 
            "ZXNJZBgDIAEoDBIOCgZmaWxlSWQYBCABKAMSEAoIc3RhcnRPZmYYBSABKAUS", 
            "DwoHY29udGVudBgGIAEoDBIPCgd0aWNrZXRzGAcgASgMEhAKCGZpbGVTaXpl", 
            "GAggASgDIiYKEVVwbG9hZENoYXRJbWFnUnNwEhEKCWVycm9yQ29kZRgBIAIo", 
            "BSIgCg9PbmxpbmVGcmllbmRSZXESDQoFdG9rZW4YASACKAkiOAoPT25saW5l", 
            "RnJpZW5kUnNwEiUKBnN0YXRlcxgBIAMoCzIVLlFRU2VydmVyLk9ubGluZVN0", 
            "YXRlIikKC09ubGluZVN0YXRlEgsKA3VpbhgBIAEoCRINCgVzdGF0ZRgCIAEo", 
            "BSJtChZGcmllbmRJbmZvQ2hhbmdlTm90aWZ5EhAKCGJyb2tlclFRGAEgAigJ", 
            "EhAKCGZyaWVuZFFRGAIgAigJEgwKBHRpbWUYAyACKAkSDQoFaXNBZGQYBCAC", 
            "KAgSEgoKcmVtYXJrSW5mbxgFIAEoCSJxChZDb21wYXJlRnJpZW5kQ2hhbmdl", 
            "UmVxEgsKA3VpbhgBIAIoCRIkCghvbGRVc2VycxgCIAMoCzISLlFRU2VydmVy", 
            "LlVzZXJJbmZvEiQKCG5ld1VzZXJzGAMgAygLMhIuUVFTZXJ2ZXIuVXNlcklu", 
            "Zm8iKwoWQ29tcGFyZUZyaWVuZENoYW5nZVJzcBIRCgllcnJvckNvZGUYASAC", 
            "KAUiMwoORnJpZW5kTGlzdEluZm8SIQoFdXNlcnMYASADKAsyEi5RUVNlcnZl", 
            "ci5Vc2VySW5mbyJMChdQdWJGcmllbmRMaXN0SW5mb0NoYW5nZRIxCgdub3Rp", 
            "ZnlzGAEgAygLMiAuUVFTZXJ2ZXIuRnJpZW5kSW5mb0NoYW5nZU5vdGlmeSJK", 
            "ChZRdWVyeU1lc3NhZ2VDb250ZXh0UmVxEhEKCWRpcmVjdGlvbhgBIAIoBRIO", 
            "CgZudW1iZXIYAiACKAUSDQoFbXNnSWQYAyACKAkiQgoWUXVlcnlNZXNzYWdl", 
            "Q29udGV4dFJzcBIoCgRtc2dzGAEgAygLMhouUVFTZXJ2ZXIuUHViUmVjaXZl", 
          "TWVzc2FnZUIYCgxjb20ucHJvdG9idWZCCFFRU2VydmVy"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_QQServer_TokenReq__Descriptor = Descriptor.MessageTypes[0];
        internal__static_QQServer_TokenReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.TokenReq, global::QQServer.TokenReq.Builder>(internal__static_QQServer_TokenReq__Descriptor,
                new string[] { "UserName", });
        internal__static_QQServer_TokenRsp__Descriptor = Descriptor.MessageTypes[1];
        internal__static_QQServer_TokenRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.TokenRsp, global::QQServer.TokenRsp.Builder>(internal__static_QQServer_TokenRsp__Descriptor,
                new string[] { "Token", });
        internal__static_QQServer_LoginReq__Descriptor = Descriptor.MessageTypes[2];
        internal__static_QQServer_LoginReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.LoginReq, global::QQServer.LoginReq.Builder>(internal__static_QQServer_LoginReq__Descriptor,
                new string[] { "UserName", "PassWord", "ConnectId", "Token", "PcMac", "LoginType", "ServerType", });
        internal__static_QQServer_LoginRsp__Descriptor = Descriptor.MessageTypes[3];
        internal__static_QQServer_LoginRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.LoginRsp, global::QQServer.LoginRsp.Builder>(internal__static_QQServer_LoginRsp__Descriptor,
                new string[] { "ErrorCode", "Token", "Image", "Uin", });
        internal__static_QQServer_WriteIDCodeReq__Descriptor = Descriptor.MessageTypes[4];
        internal__static_QQServer_WriteIDCodeReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.WriteIDCodeReq, global::QQServer.WriteIDCodeReq.Builder>(internal__static_QQServer_WriteIDCodeReq__Descriptor,
                new string[] { "Token", "IdCode", });
        internal__static_QQServer_WriteIDCodeRsp__Descriptor = Descriptor.MessageTypes[5];
        internal__static_QQServer_WriteIDCodeRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.WriteIDCodeRsp, global::QQServer.WriteIDCodeRsp.Builder>(internal__static_QQServer_WriteIDCodeRsp__Descriptor,
                new string[] { "ErrorCode", "Image", });
        internal__static_QQServer_WriteSmsReq__Descriptor = Descriptor.MessageTypes[6];
        internal__static_QQServer_WriteSmsReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.WriteSmsReq, global::QQServer.WriteSmsReq.Builder>(internal__static_QQServer_WriteSmsReq__Descriptor,
                new string[] { "Token", "SmsCode", });
        internal__static_QQServer_WriteSmsRsp__Descriptor = Descriptor.MessageTypes[7];
        internal__static_QQServer_WriteSmsRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.WriteSmsRsp, global::QQServer.WriteSmsRsp.Builder>(internal__static_QQServer_WriteSmsRsp__Descriptor,
                new string[] { "ErrorCode", });
        internal__static_QQServer_UserInfo__Descriptor = Descriptor.MessageTypes[8];
        internal__static_QQServer_UserInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.UserInfo, global::QQServer.UserInfo.Builder>(internal__static_QQServer_UserInfo__Descriptor,
                new string[] { "UserName", "ShowName", "Uin", "Type", "NickName", });
        internal__static_QQServer_GroupInfo__Descriptor = Descriptor.MessageTypes[9];
        internal__static_QQServer_GroupInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GroupInfo, global::QQServer.GroupInfo.Builder>(internal__static_QQServer_GroupInfo__Descriptor,
                new string[] { "GroupId", "GroupName", "UserInfo", });
        internal__static_QQServer_RoomInfo__Descriptor = Descriptor.MessageTypes[10];
        internal__static_QQServer_RoomInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.RoomInfo, global::QQServer.RoomInfo.Builder>(internal__static_QQServer_RoomInfo__Descriptor,
                new string[] { "Uin", "RoomName", "Code", "UserInfo", });
        internal__static_QQServer_GetFriendListReq__Descriptor = Descriptor.MessageTypes[11];
        internal__static_QQServer_GetFriendListReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GetFriendListReq, global::QQServer.GetFriendListReq.Builder>(internal__static_QQServer_GetFriendListReq__Descriptor,
                new string[] { "Token", "IsRefresh", });
        internal__static_QQServer_GetFriendListRsp__Descriptor = Descriptor.MessageTypes[12];
        internal__static_QQServer_GetFriendListRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GetFriendListRsp, global::QQServer.GetFriendListRsp.Builder>(internal__static_QQServer_GetFriendListRsp__Descriptor,
                new string[] { "ErrorCode", "Group", });
        internal__static_QQServer_GetRoomListReq__Descriptor = Descriptor.MessageTypes[13];
        internal__static_QQServer_GetRoomListReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GetRoomListReq, global::QQServer.GetRoomListReq.Builder>(internal__static_QQServer_GetRoomListReq__Descriptor,
                new string[] { "Token", });
        internal__static_QQServer_GetRoomListRsp__Descriptor = Descriptor.MessageTypes[14];
        internal__static_QQServer_GetRoomListRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GetRoomListRsp, global::QQServer.GetRoomListRsp.Builder>(internal__static_QQServer_GetRoomListRsp__Descriptor,
                new string[] { "ErrorCode", "Room", });
        internal__static_QQServer_GetRoomMemberInfoReq__Descriptor = Descriptor.MessageTypes[15];
        internal__static_QQServer_GetRoomMemberInfoReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GetRoomMemberInfoReq, global::QQServer.GetRoomMemberInfoReq.Builder>(internal__static_QQServer_GetRoomMemberInfoReq__Descriptor,
                new string[] { "Token", "Uin", "Code", });
        internal__static_QQServer_GetRoomMemberInfoRsp__Descriptor = Descriptor.MessageTypes[16];
        internal__static_QQServer_GetRoomMemberInfoRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GetRoomMemberInfoRsp, global::QQServer.GetRoomMemberInfoRsp.Builder>(internal__static_QQServer_GetRoomMemberInfoRsp__Descriptor,
                new string[] { "UserInfo", });
        internal__static_QQServer_QQMessage__Descriptor = Descriptor.MessageTypes[17];
        internal__static_QQServer_QQMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.QQMessage, global::QQServer.QQMessage.Builder>(internal__static_QQServer_QQMessage__Descriptor,
                new string[] { "MsgType", "Content", });
        internal__static_QQServer_SendMessageReq__Descriptor = Descriptor.MessageTypes[18];
        internal__static_QQServer_SendMessageReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.SendMessageReq, global::QQServer.SendMessageReq.Builder>(internal__static_QQServer_SendMessageReq__Descriptor,
                new string[] { "Token", "Uin", "Type", "Msg", "Code", });
        internal__static_QQServer_SendMessageRsp__Descriptor = Descriptor.MessageTypes[19];
        internal__static_QQServer_SendMessageRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.SendMessageRsp, global::QQServer.SendMessageRsp.Builder>(internal__static_QQServer_SendMessageRsp__Descriptor,
                new string[] { "ErrorCode", "Time", });
        internal__static_QQServer_PubReciveMessage__Descriptor = Descriptor.MessageTypes[20];
        internal__static_QQServer_PubReciveMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.PubReciveMessage, global::QQServer.PubReciveMessage.Builder>(internal__static_QQServer_PubReciveMessage__Descriptor,
                new string[] { "FromUin", "FromName", "ToUin", "Type", "Time", "Msg", "LastReadTime", "SerNum", });
        internal__static_QQServer_PubConversation__Descriptor = Descriptor.MessageTypes[21];
        internal__static_QQServer_PubConversation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.PubConversation, global::QQServer.PubConversation.Builder>(internal__static_QQServer_PubConversation__Descriptor,
                new string[] { "Type", "Uin", "MsgList", "NewMsgNum", "StartNum", "EndNum", });
        internal__static_QQServer_LogOutReq__Descriptor = Descriptor.MessageTypes[22];
        internal__static_QQServer_LogOutReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.LogOutReq, global::QQServer.LogOutReq.Builder>(internal__static_QQServer_LogOutReq__Descriptor,
                new string[] { "Token", });
        internal__static_QQServer_LogOutRsp__Descriptor = Descriptor.MessageTypes[23];
        internal__static_QQServer_LogOutRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.LogOutRsp, global::QQServer.LogOutRsp.Builder>(internal__static_QQServer_LogOutRsp__Descriptor,
                new string[] { });
        internal__static_QQServer_ReciveDataReq__Descriptor = Descriptor.MessageTypes[24];
        internal__static_QQServer_ReciveDataReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.ReciveDataReq, global::QQServer.ReciveDataReq.Builder>(internal__static_QQServer_ReciveDataReq__Descriptor,
                new string[] { "Token", "Data", "Channel", });
        internal__static_QQServer_ReciveDataRsp__Descriptor = Descriptor.MessageTypes[25];
        internal__static_QQServer_ReciveDataRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.ReciveDataRsp, global::QQServer.ReciveDataRsp.Builder>(internal__static_QQServer_ReciveDataRsp__Descriptor,
                new string[] { "ErrorCode", });
        internal__static_QQServer_ReConnectReq__Descriptor = Descriptor.MessageTypes[26];
        internal__static_QQServer_ReConnectReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.ReConnectReq, global::QQServer.ReConnectReq.Builder>(internal__static_QQServer_ReConnectReq__Descriptor,
                new string[] { "Token", });
        internal__static_QQServer_ReConnectRsp__Descriptor = Descriptor.MessageTypes[27];
        internal__static_QQServer_ReConnectRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.ReConnectRsp, global::QQServer.ReConnectRsp.Builder>(internal__static_QQServer_ReConnectRsp__Descriptor,
                new string[] { "ErrorCode", });
        internal__static_QQServer_PubDisconnect__Descriptor = Descriptor.MessageTypes[28];
        internal__static_QQServer_PubDisconnect__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.PubDisconnect, global::QQServer.PubDisconnect.Builder>(internal__static_QQServer_PubDisconnect__Descriptor,
                new string[] { });
        internal__static_QQServer_AddFriendReq__Descriptor = Descriptor.MessageTypes[29];
        internal__static_QQServer_AddFriendReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.AddFriendReq, global::QQServer.AddFriendReq.Builder>(internal__static_QQServer_AddFriendReq__Descriptor,
                new string[] { "Token", "Number", "Message", });
        internal__static_QQServer_AddFriendRsp__Descriptor = Descriptor.MessageTypes[30];
        internal__static_QQServer_AddFriendRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.AddFriendRsp, global::QQServer.AddFriendRsp.Builder>(internal__static_QQServer_AddFriendRsp__Descriptor,
                new string[] { "ErrorCode", });
        internal__static_QQServer_GetChatHistoryMsgReq__Descriptor = Descriptor.MessageTypes[31];
        internal__static_QQServer_GetChatHistoryMsgReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GetChatHistoryMsgReq, global::QQServer.GetChatHistoryMsgReq.Builder>(internal__static_QQServer_GetChatHistoryMsgReq__Descriptor,
                new string[] { "Token", "Uin", "LastTime", "Limit", "Random", });
        internal__static_QQServer_GetChatHistoryMsgRsp__Descriptor = Descriptor.MessageTypes[32];
        internal__static_QQServer_GetChatHistoryMsgRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GetChatHistoryMsgRsp, global::QQServer.GetChatHistoryMsgRsp.Builder>(internal__static_QQServer_GetChatHistoryMsgRsp__Descriptor,
                new string[] { "ErrorCode", "MsgList", "Random", });
        internal__static_QQServer_GetRoomHistoryMsgReq__Descriptor = Descriptor.MessageTypes[33];
        internal__static_QQServer_GetRoomHistoryMsgReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GetRoomHistoryMsgReq, global::QQServer.GetRoomHistoryMsgReq.Builder>(internal__static_QQServer_GetRoomHistoryMsgReq__Descriptor,
                new string[] { "Token", "RoomCode", "EndNum", "Limit", });
        internal__static_QQServer_GetRoomHistoryMsgRsp__Descriptor = Descriptor.MessageTypes[34];
        internal__static_QQServer_GetRoomHistoryMsgRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GetRoomHistoryMsgRsp, global::QQServer.GetRoomHistoryMsgRsp.Builder>(internal__static_QQServer_GetRoomHistoryMsgRsp__Descriptor,
                new string[] { "ErrorCode", "MsgList", "StartNum", "EndNum", });
        internal__static_QQServer_SetChatMsgReadReq__Descriptor = Descriptor.MessageTypes[35];
        internal__static_QQServer_SetChatMsgReadReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.SetChatMsgReadReq, global::QQServer.SetChatMsgReadReq.Builder>(internal__static_QQServer_SetChatMsgReadReq__Descriptor,
                new string[] { "Token", "ToUin", "LastReadTime", });
        internal__static_QQServer_SetChatMsgReadRsp__Descriptor = Descriptor.MessageTypes[36];
        internal__static_QQServer_SetChatMsgReadRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.SetChatMsgReadRsp, global::QQServer.SetChatMsgReadRsp.Builder>(internal__static_QQServer_SetChatMsgReadRsp__Descriptor,
                new string[] { "ErrorCode", });
        internal__static_QQServer_SetRoomMsgReadReq__Descriptor = Descriptor.MessageTypes[37];
        internal__static_QQServer_SetRoomMsgReadReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.SetRoomMsgReadReq, global::QQServer.SetRoomMsgReadReq.Builder>(internal__static_QQServer_SetRoomMsgReadReq__Descriptor,
                new string[] { "Token", "RoomCode", "SerNum", });
        internal__static_QQServer_SetRoomMsgReadRsp__Descriptor = Descriptor.MessageTypes[38];
        internal__static_QQServer_SetRoomMsgReadRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.SetRoomMsgReadRsp, global::QQServer.SetRoomMsgReadRsp.Builder>(internal__static_QQServer_SetRoomMsgReadRsp__Descriptor,
                new string[] { "ErrorCode", });
        internal__static_QQServer_ReSubscribeReq__Descriptor = Descriptor.MessageTypes[39];
        internal__static_QQServer_ReSubscribeReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.ReSubscribeReq, global::QQServer.ReSubscribeReq.Builder>(internal__static_QQServer_ReSubscribeReq__Descriptor,
                new string[] { "Token", });
        internal__static_QQServer_ReSubscribeRsp__Descriptor = Descriptor.MessageTypes[40];
        internal__static_QQServer_ReSubscribeRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.ReSubscribeRsp, global::QQServer.ReSubscribeRsp.Builder>(internal__static_QQServer_ReSubscribeRsp__Descriptor,
                new string[] { "ErrorCode", });
        internal__static_QQServer_GetMyUserInfoReq__Descriptor = Descriptor.MessageTypes[41];
        internal__static_QQServer_GetMyUserInfoReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GetMyUserInfoReq, global::QQServer.GetMyUserInfoReq.Builder>(internal__static_QQServer_GetMyUserInfoReq__Descriptor,
                new string[] { "Token", });
        internal__static_QQServer_GetMyUserInfoRsp__Descriptor = Descriptor.MessageTypes[42];
        internal__static_QQServer_GetMyUserInfoRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GetMyUserInfoRsp, global::QQServer.GetMyUserInfoRsp.Builder>(internal__static_QQServer_GetMyUserInfoRsp__Descriptor,
                new string[] { "ErrorCode", "Info", });
        internal__static_QQServer_ImageDesc__Descriptor = Descriptor.MessageTypes[43];
        internal__static_QQServer_ImageDesc__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.ImageDesc, global::QQServer.ImageDesc.Builder>(internal__static_QQServer_ImageDesc__Descriptor,
                new string[] { "ThumbUrl", "OrigUrl", "ImgWidth", "ImgHeight", "Uuid", "FileLen", "ImgMd5", "ResId", "FileId", "Type", });
        internal__static_QQServer_GetChatImagAddrReq__Descriptor = Descriptor.MessageTypes[44];
        internal__static_QQServer_GetChatImagAddrReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GetChatImagAddrReq, global::QQServer.GetChatImagAddrReq.Builder>(internal__static_QQServer_GetChatImagAddrReq__Descriptor,
                new string[] { });
        internal__static_QQServer_GetChatImagAddrRsp__Descriptor = Descriptor.MessageTypes[45];
        internal__static_QQServer_GetChatImagAddrRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GetChatImagAddrRsp, global::QQServer.GetChatImagAddrRsp.Builder>(internal__static_QQServer_GetChatImagAddrRsp__Descriptor,
                new string[] { "ErrorCode", "Ip", "Port", });
        internal__static_QQServer_GetRoomImagResourcReq__Descriptor = Descriptor.MessageTypes[46];
        internal__static_QQServer_GetRoomImagResourcReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GetRoomImagResourcReq, global::QQServer.GetRoomImagResourcReq.Builder>(internal__static_QQServer_GetRoomImagResourcReq__Descriptor,
                new string[] { "Token", "RoomUin", "TotalSize", "Md5", "Width", "Height", "Type", });
        internal__static_QQServer_GetRoomImagResourcRsp__Descriptor = Descriptor.MessageTypes[47];
        internal__static_QQServer_GetRoomImagResourcRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GetRoomImagResourcRsp, global::QQServer.GetRoomImagResourcRsp.Builder>(internal__static_QQServer_GetRoomImagResourcRsp__Descriptor,
                new string[] { "ErrorCode", "HttpUrl", "Uuid", "ResId", "FileId", });
        internal__static_QQServer_GetChatImagResourcReq__Descriptor = Descriptor.MessageTypes[48];
        internal__static_QQServer_GetChatImagResourcReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GetChatImagResourcReq, global::QQServer.GetChatImagResourcReq.Builder>(internal__static_QQServer_GetChatImagResourcReq__Descriptor,
                new string[] { "Token", "ToUin", "TotalSize", "Md5", "Width", "Height", "Type", });
        internal__static_QQServer_GetChatImagResourcRsp__Descriptor = Descriptor.MessageTypes[49];
        internal__static_QQServer_GetChatImagResourcRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.GetChatImagResourcRsp, global::QQServer.GetChatImagResourcRsp.Builder>(internal__static_QQServer_GetChatImagResourcRsp__Descriptor,
                new string[] { "ErrorCode", "Uuid", "ResId", "FileId", "BlockSize", "Tickets", });
        internal__static_QQServer_UploadChatImagReq__Descriptor = Descriptor.MessageTypes[50];
        internal__static_QQServer_UploadChatImagReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.UploadChatImagReq, global::QQServer.UploadChatImagReq.Builder>(internal__static_QQServer_UploadChatImagReq__Descriptor,
                new string[] { "Token", "Uuid", "ResId", "FileId", "StartOff", "Content", "Tickets", "FileSize", });
        internal__static_QQServer_UploadChatImagRsp__Descriptor = Descriptor.MessageTypes[51];
        internal__static_QQServer_UploadChatImagRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.UploadChatImagRsp, global::QQServer.UploadChatImagRsp.Builder>(internal__static_QQServer_UploadChatImagRsp__Descriptor,
                new string[] { "ErrorCode", });
        internal__static_QQServer_OnlineFriendReq__Descriptor = Descriptor.MessageTypes[52];
        internal__static_QQServer_OnlineFriendReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.OnlineFriendReq, global::QQServer.OnlineFriendReq.Builder>(internal__static_QQServer_OnlineFriendReq__Descriptor,
                new string[] { "Token", });
        internal__static_QQServer_OnlineFriendRsp__Descriptor = Descriptor.MessageTypes[53];
        internal__static_QQServer_OnlineFriendRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.OnlineFriendRsp, global::QQServer.OnlineFriendRsp.Builder>(internal__static_QQServer_OnlineFriendRsp__Descriptor,
                new string[] { "States", });
        internal__static_QQServer_OnlineState__Descriptor = Descriptor.MessageTypes[54];
        internal__static_QQServer_OnlineState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.OnlineState, global::QQServer.OnlineState.Builder>(internal__static_QQServer_OnlineState__Descriptor,
                new string[] { "Uin", "State", });
        internal__static_QQServer_FriendInfoChangeNotify__Descriptor = Descriptor.MessageTypes[55];
        internal__static_QQServer_FriendInfoChangeNotify__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.FriendInfoChangeNotify, global::QQServer.FriendInfoChangeNotify.Builder>(internal__static_QQServer_FriendInfoChangeNotify__Descriptor,
                new string[] { "BrokerQQ", "FriendQQ", "Time", "IsAdd", "RemarkInfo", });
        internal__static_QQServer_CompareFriendChangeReq__Descriptor = Descriptor.MessageTypes[56];
        internal__static_QQServer_CompareFriendChangeReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.CompareFriendChangeReq, global::QQServer.CompareFriendChangeReq.Builder>(internal__static_QQServer_CompareFriendChangeReq__Descriptor,
                new string[] { "Uin", "OldUsers", "NewUsers", });
        internal__static_QQServer_CompareFriendChangeRsp__Descriptor = Descriptor.MessageTypes[57];
        internal__static_QQServer_CompareFriendChangeRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.CompareFriendChangeRsp, global::QQServer.CompareFriendChangeRsp.Builder>(internal__static_QQServer_CompareFriendChangeRsp__Descriptor,
                new string[] { "ErrorCode", });
        internal__static_QQServer_FriendListInfo__Descriptor = Descriptor.MessageTypes[58];
        internal__static_QQServer_FriendListInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.FriendListInfo, global::QQServer.FriendListInfo.Builder>(internal__static_QQServer_FriendListInfo__Descriptor,
                new string[] { "Users", });
        internal__static_QQServer_PubFriendListInfoChange__Descriptor = Descriptor.MessageTypes[59];
        internal__static_QQServer_PubFriendListInfoChange__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.PubFriendListInfoChange, global::QQServer.PubFriendListInfoChange.Builder>(internal__static_QQServer_PubFriendListInfoChange__Descriptor,
                new string[] { "Notifys", });
        internal__static_QQServer_QueryMessageContextReq__Descriptor = Descriptor.MessageTypes[60];
        internal__static_QQServer_QueryMessageContextReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.QueryMessageContextReq, global::QQServer.QueryMessageContextReq.Builder>(internal__static_QQServer_QueryMessageContextReq__Descriptor,
                new string[] { "Direction", "Number", "MsgId", });
        internal__static_QQServer_QueryMessageContextRsp__Descriptor = Descriptor.MessageTypes[61];
        internal__static_QQServer_QueryMessageContextRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::QQServer.QueryMessageContextRsp, global::QQServer.QueryMessageContextRsp.Builder>(internal__static_QQServer_QueryMessageContextRsp__Descriptor,
                new string[] { "Msgs", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TokenReq : pb::GeneratedMessage<TokenReq, TokenReq.Builder> {
    private TokenReq() { }
    private static readonly TokenReq defaultInstance = new TokenReq().MakeReadOnly();
    private static readonly string[] _tokenReqFieldNames = new string[] { "userName" };
    private static readonly uint[] _tokenReqFieldTags = new uint[] { 10 };
    public static TokenReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TokenReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TokenReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_TokenReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TokenReq, TokenReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_TokenReq__FieldAccessorTable; }
    }
    
    public const int UserNameFieldNumber = 1;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tokenReqFieldNames;
      if (hasUserName) {
        output.WriteString(1, field_names[0], UserName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, UserName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TokenReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TokenReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TokenReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TokenReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TokenReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TokenReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TokenReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TokenReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TokenReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TokenReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TokenReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TokenReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TokenReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TokenReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TokenReq result;
      
      private TokenReq PrepareBuilder() {
        if (resultIsReadOnly) {
          TokenReq original = result;
          result = new TokenReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TokenReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.TokenReq.Descriptor; }
      }
      
      public override TokenReq DefaultInstanceForType {
        get { return global::QQServer.TokenReq.DefaultInstance; }
      }
      
      public override TokenReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TokenReq) {
          return MergeFrom((TokenReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TokenReq other) {
        if (other == global::QQServer.TokenReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tokenReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tokenReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserName = input.ReadString(ref result.userName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserName {
        get { return result.hasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        PrepareBuilder();
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
    }
    static TokenReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TokenRsp : pb::GeneratedMessage<TokenRsp, TokenRsp.Builder> {
    private TokenRsp() { }
    private static readonly TokenRsp defaultInstance = new TokenRsp().MakeReadOnly();
    private static readonly string[] _tokenRspFieldNames = new string[] { "token" };
    private static readonly uint[] _tokenRspFieldTags = new uint[] { 10 };
    public static TokenRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TokenRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TokenRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_TokenRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TokenRsp, TokenRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_TokenRsp__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tokenRspFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[0], Token);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TokenRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TokenRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TokenRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TokenRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TokenRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TokenRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TokenRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TokenRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TokenRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TokenRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TokenRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TokenRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TokenRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TokenRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TokenRsp result;
      
      private TokenRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          TokenRsp original = result;
          result = new TokenRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TokenRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.TokenRsp.Descriptor; }
      }
      
      public override TokenRsp DefaultInstanceForType {
        get { return global::QQServer.TokenRsp.DefaultInstance; }
      }
      
      public override TokenRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TokenRsp) {
          return MergeFrom((TokenRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TokenRsp other) {
        if (other == global::QQServer.TokenRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tokenRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tokenRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
    }
    static TokenRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LoginReq : pb::GeneratedMessage<LoginReq, LoginReq.Builder> {
    private LoginReq() { }
    private static readonly LoginReq defaultInstance = new LoginReq().MakeReadOnly();
    private static readonly string[] _loginReqFieldNames = new string[] { "connectId", "loginType", "passWord", "pcMac", "serverType", "token", "userName" };
    private static readonly uint[] _loginReqFieldTags = new uint[] { 26, 48, 18, 42, 56, 34, 10 };
    public static LoginReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoginReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_LoginReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoginReq, LoginReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_LoginReq__FieldAccessorTable; }
    }
    
    public const int UserNameFieldNumber = 1;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    public const int PassWordFieldNumber = 2;
    private bool hasPassWord;
    private string passWord_ = "";
    public bool HasPassWord {
      get { return hasPassWord; }
    }
    public string PassWord {
      get { return passWord_; }
    }
    
    public const int ConnectIdFieldNumber = 3;
    private bool hasConnectId;
    private string connectId_ = "";
    public bool HasConnectId {
      get { return hasConnectId; }
    }
    public string ConnectId {
      get { return connectId_; }
    }
    
    public const int TokenFieldNumber = 4;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public const int PcMacFieldNumber = 5;
    private bool hasPcMac;
    private string pcMac_ = "";
    public bool HasPcMac {
      get { return hasPcMac; }
    }
    public string PcMac {
      get { return pcMac_; }
    }
    
    public const int LoginTypeFieldNumber = 6;
    private bool hasLoginType;
    private int loginType_;
    public bool HasLoginType {
      get { return hasLoginType; }
    }
    public int LoginType {
      get { return loginType_; }
    }
    
    public const int ServerTypeFieldNumber = 7;
    private bool hasServerType;
    private int serverType_;
    public bool HasServerType {
      get { return hasServerType; }
    }
    public int ServerType {
      get { return serverType_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserName) return false;
        if (!hasPassWord) return false;
        if (!hasConnectId) return false;
        if (!hasToken) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _loginReqFieldNames;
      if (hasUserName) {
        output.WriteString(1, field_names[6], UserName);
      }
      if (hasPassWord) {
        output.WriteString(2, field_names[2], PassWord);
      }
      if (hasConnectId) {
        output.WriteString(3, field_names[0], ConnectId);
      }
      if (hasToken) {
        output.WriteString(4, field_names[5], Token);
      }
      if (hasPcMac) {
        output.WriteString(5, field_names[3], PcMac);
      }
      if (hasLoginType) {
        output.WriteInt32(6, field_names[1], LoginType);
      }
      if (hasServerType) {
        output.WriteInt32(7, field_names[4], ServerType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, UserName);
      }
      if (hasPassWord) {
        size += pb::CodedOutputStream.ComputeStringSize(2, PassWord);
      }
      if (hasConnectId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, ConnectId);
      }
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Token);
      }
      if (hasPcMac) {
        size += pb::CodedOutputStream.ComputeStringSize(5, PcMac);
      }
      if (hasLoginType) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, LoginType);
      }
      if (hasServerType) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, ServerType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LoginReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoginReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoginReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoginReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoginReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LoginReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginReq result;
      
      private LoginReq PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginReq original = result;
          result = new LoginReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.LoginReq.Descriptor; }
      }
      
      public override LoginReq DefaultInstanceForType {
        get { return global::QQServer.LoginReq.DefaultInstance; }
      }
      
      public override LoginReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoginReq) {
          return MergeFrom((LoginReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginReq other) {
        if (other == global::QQServer.LoginReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        if (other.HasPassWord) {
          PassWord = other.PassWord;
        }
        if (other.HasConnectId) {
          ConnectId = other.ConnectId;
        }
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasPcMac) {
          PcMac = other.PcMac;
        }
        if (other.HasLoginType) {
          LoginType = other.LoginType;
        }
        if (other.HasServerType) {
          ServerType = other.ServerType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserName = input.ReadString(ref result.userName_);
              break;
            }
            case 18: {
              result.hasPassWord = input.ReadString(ref result.passWord_);
              break;
            }
            case 26: {
              result.hasConnectId = input.ReadString(ref result.connectId_);
              break;
            }
            case 34: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
            case 42: {
              result.hasPcMac = input.ReadString(ref result.pcMac_);
              break;
            }
            case 48: {
              result.hasLoginType = input.ReadInt32(ref result.loginType_);
              break;
            }
            case 56: {
              result.hasServerType = input.ReadInt32(ref result.serverType_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserName {
        get { return result.hasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        PrepareBuilder();
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
      
      public bool HasPassWord {
        get { return result.hasPassWord; }
      }
      public string PassWord {
        get { return result.PassWord; }
        set { SetPassWord(value); }
      }
      public Builder SetPassWord(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassWord = true;
        result.passWord_ = value;
        return this;
      }
      public Builder ClearPassWord() {
        PrepareBuilder();
        result.hasPassWord = false;
        result.passWord_ = "";
        return this;
      }
      
      public bool HasConnectId {
        get { return result.hasConnectId; }
      }
      public string ConnectId {
        get { return result.ConnectId; }
        set { SetConnectId(value); }
      }
      public Builder SetConnectId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConnectId = true;
        result.connectId_ = value;
        return this;
      }
      public Builder ClearConnectId() {
        PrepareBuilder();
        result.hasConnectId = false;
        result.connectId_ = "";
        return this;
      }
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
      
      public bool HasPcMac {
        get { return result.hasPcMac; }
      }
      public string PcMac {
        get { return result.PcMac; }
        set { SetPcMac(value); }
      }
      public Builder SetPcMac(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPcMac = true;
        result.pcMac_ = value;
        return this;
      }
      public Builder ClearPcMac() {
        PrepareBuilder();
        result.hasPcMac = false;
        result.pcMac_ = "";
        return this;
      }
      
      public bool HasLoginType {
        get { return result.hasLoginType; }
      }
      public int LoginType {
        get { return result.LoginType; }
        set { SetLoginType(value); }
      }
      public Builder SetLoginType(int value) {
        PrepareBuilder();
        result.hasLoginType = true;
        result.loginType_ = value;
        return this;
      }
      public Builder ClearLoginType() {
        PrepareBuilder();
        result.hasLoginType = false;
        result.loginType_ = 0;
        return this;
      }
      
      public bool HasServerType {
        get { return result.hasServerType; }
      }
      public int ServerType {
        get { return result.ServerType; }
        set { SetServerType(value); }
      }
      public Builder SetServerType(int value) {
        PrepareBuilder();
        result.hasServerType = true;
        result.serverType_ = value;
        return this;
      }
      public Builder ClearServerType() {
        PrepareBuilder();
        result.hasServerType = false;
        result.serverType_ = 0;
        return this;
      }
    }
    static LoginReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LoginRsp : pb::GeneratedMessage<LoginRsp, LoginRsp.Builder> {
    private LoginRsp() { }
    private static readonly LoginRsp defaultInstance = new LoginRsp().MakeReadOnly();
    private static readonly string[] _loginRspFieldNames = new string[] { "errorCode", "image", "token", "uin" };
    private static readonly uint[] _loginRspFieldTags = new uint[] { 8, 26, 18, 34 };
    public static LoginRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoginRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_LoginRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoginRsp, LoginRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_LoginRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public const int TokenFieldNumber = 2;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public const int ImageFieldNumber = 3;
    private bool hasImage;
    private pb::ByteString image_ = pb::ByteString.Empty;
    public bool HasImage {
      get { return hasImage; }
    }
    public pb::ByteString Image {
      get { return image_; }
    }
    
    public const int UinFieldNumber = 4;
    private bool hasUin;
    private string uin_ = "";
    public bool HasUin {
      get { return hasUin; }
    }
    public string Uin {
      get { return uin_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _loginRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      if (hasToken) {
        output.WriteString(2, field_names[2], Token);
      }
      if (hasImage) {
        output.WriteBytes(3, field_names[1], Image);
      }
      if (hasUin) {
        output.WriteString(4, field_names[3], Uin);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Token);
      }
      if (hasImage) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, Image);
      }
      if (hasUin) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Uin);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LoginRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoginRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoginRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoginRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoginRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LoginRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginRsp result;
      
      private LoginRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginRsp original = result;
          result = new LoginRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.LoginRsp.Descriptor; }
      }
      
      public override LoginRsp DefaultInstanceForType {
        get { return global::QQServer.LoginRsp.DefaultInstance; }
      }
      
      public override LoginRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoginRsp) {
          return MergeFrom((LoginRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginRsp other) {
        if (other == global::QQServer.LoginRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasImage) {
          Image = other.Image;
        }
        if (other.HasUin) {
          Uin = other.Uin;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
            case 18: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
            case 26: {
              result.hasImage = input.ReadBytes(ref result.image_);
              break;
            }
            case 34: {
              result.hasUin = input.ReadString(ref result.uin_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
      
      public bool HasImage {
        get { return result.hasImage; }
      }
      public pb::ByteString Image {
        get { return result.Image; }
        set { SetImage(value); }
      }
      public Builder SetImage(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasImage = true;
        result.image_ = value;
        return this;
      }
      public Builder ClearImage() {
        PrepareBuilder();
        result.hasImage = false;
        result.image_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasUin {
        get { return result.hasUin; }
      }
      public string Uin {
        get { return result.Uin; }
        set { SetUin(value); }
      }
      public Builder SetUin(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUin = true;
        result.uin_ = value;
        return this;
      }
      public Builder ClearUin() {
        PrepareBuilder();
        result.hasUin = false;
        result.uin_ = "";
        return this;
      }
    }
    static LoginRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class WriteIDCodeReq : pb::GeneratedMessage<WriteIDCodeReq, WriteIDCodeReq.Builder> {
    private WriteIDCodeReq() { }
    private static readonly WriteIDCodeReq defaultInstance = new WriteIDCodeReq().MakeReadOnly();
    private static readonly string[] _writeIDCodeReqFieldNames = new string[] { "idCode", "token" };
    private static readonly uint[] _writeIDCodeReqFieldTags = new uint[] { 18, 10 };
    public static WriteIDCodeReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override WriteIDCodeReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override WriteIDCodeReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_WriteIDCodeReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<WriteIDCodeReq, WriteIDCodeReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_WriteIDCodeReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public const int IdCodeFieldNumber = 2;
    private bool hasIdCode;
    private string idCode_ = "";
    public bool HasIdCode {
      get { return hasIdCode; }
    }
    public string IdCode {
      get { return idCode_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        if (!hasIdCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _writeIDCodeReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[1], Token);
      }
      if (hasIdCode) {
        output.WriteString(2, field_names[0], IdCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      if (hasIdCode) {
        size += pb::CodedOutputStream.ComputeStringSize(2, IdCode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static WriteIDCodeReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static WriteIDCodeReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static WriteIDCodeReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static WriteIDCodeReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static WriteIDCodeReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static WriteIDCodeReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static WriteIDCodeReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static WriteIDCodeReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static WriteIDCodeReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static WriteIDCodeReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private WriteIDCodeReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(WriteIDCodeReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<WriteIDCodeReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(WriteIDCodeReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private WriteIDCodeReq result;
      
      private WriteIDCodeReq PrepareBuilder() {
        if (resultIsReadOnly) {
          WriteIDCodeReq original = result;
          result = new WriteIDCodeReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override WriteIDCodeReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.WriteIDCodeReq.Descriptor; }
      }
      
      public override WriteIDCodeReq DefaultInstanceForType {
        get { return global::QQServer.WriteIDCodeReq.DefaultInstance; }
      }
      
      public override WriteIDCodeReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is WriteIDCodeReq) {
          return MergeFrom((WriteIDCodeReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(WriteIDCodeReq other) {
        if (other == global::QQServer.WriteIDCodeReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasIdCode) {
          IdCode = other.IdCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_writeIDCodeReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _writeIDCodeReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
            case 18: {
              result.hasIdCode = input.ReadString(ref result.idCode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
      
      public bool HasIdCode {
        get { return result.hasIdCode; }
      }
      public string IdCode {
        get { return result.IdCode; }
        set { SetIdCode(value); }
      }
      public Builder SetIdCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIdCode = true;
        result.idCode_ = value;
        return this;
      }
      public Builder ClearIdCode() {
        PrepareBuilder();
        result.hasIdCode = false;
        result.idCode_ = "";
        return this;
      }
    }
    static WriteIDCodeReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class WriteIDCodeRsp : pb::GeneratedMessage<WriteIDCodeRsp, WriteIDCodeRsp.Builder> {
    private WriteIDCodeRsp() { }
    private static readonly WriteIDCodeRsp defaultInstance = new WriteIDCodeRsp().MakeReadOnly();
    private static readonly string[] _writeIDCodeRspFieldNames = new string[] { "errorCode", "image" };
    private static readonly uint[] _writeIDCodeRspFieldTags = new uint[] { 8, 18 };
    public static WriteIDCodeRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override WriteIDCodeRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override WriteIDCodeRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_WriteIDCodeRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<WriteIDCodeRsp, WriteIDCodeRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_WriteIDCodeRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public const int ImageFieldNumber = 2;
    private bool hasImage;
    private pb::ByteString image_ = pb::ByteString.Empty;
    public bool HasImage {
      get { return hasImage; }
    }
    public pb::ByteString Image {
      get { return image_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _writeIDCodeRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      if (hasImage) {
        output.WriteBytes(2, field_names[1], Image);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      if (hasImage) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Image);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static WriteIDCodeRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static WriteIDCodeRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static WriteIDCodeRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static WriteIDCodeRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static WriteIDCodeRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static WriteIDCodeRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static WriteIDCodeRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static WriteIDCodeRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static WriteIDCodeRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static WriteIDCodeRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private WriteIDCodeRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(WriteIDCodeRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<WriteIDCodeRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(WriteIDCodeRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private WriteIDCodeRsp result;
      
      private WriteIDCodeRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          WriteIDCodeRsp original = result;
          result = new WriteIDCodeRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override WriteIDCodeRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.WriteIDCodeRsp.Descriptor; }
      }
      
      public override WriteIDCodeRsp DefaultInstanceForType {
        get { return global::QQServer.WriteIDCodeRsp.DefaultInstance; }
      }
      
      public override WriteIDCodeRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is WriteIDCodeRsp) {
          return MergeFrom((WriteIDCodeRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(WriteIDCodeRsp other) {
        if (other == global::QQServer.WriteIDCodeRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        if (other.HasImage) {
          Image = other.Image;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_writeIDCodeRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _writeIDCodeRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
            case 18: {
              result.hasImage = input.ReadBytes(ref result.image_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      public bool HasImage {
        get { return result.hasImage; }
      }
      public pb::ByteString Image {
        get { return result.Image; }
        set { SetImage(value); }
      }
      public Builder SetImage(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasImage = true;
        result.image_ = value;
        return this;
      }
      public Builder ClearImage() {
        PrepareBuilder();
        result.hasImage = false;
        result.image_ = pb::ByteString.Empty;
        return this;
      }
    }
    static WriteIDCodeRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class WriteSmsReq : pb::GeneratedMessage<WriteSmsReq, WriteSmsReq.Builder> {
    private WriteSmsReq() { }
    private static readonly WriteSmsReq defaultInstance = new WriteSmsReq().MakeReadOnly();
    private static readonly string[] _writeSmsReqFieldNames = new string[] { "smsCode", "token" };
    private static readonly uint[] _writeSmsReqFieldTags = new uint[] { 18, 10 };
    public static WriteSmsReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override WriteSmsReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override WriteSmsReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_WriteSmsReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<WriteSmsReq, WriteSmsReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_WriteSmsReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public const int SmsCodeFieldNumber = 2;
    private bool hasSmsCode;
    private string smsCode_ = "";
    public bool HasSmsCode {
      get { return hasSmsCode; }
    }
    public string SmsCode {
      get { return smsCode_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        if (!hasSmsCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _writeSmsReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[1], Token);
      }
      if (hasSmsCode) {
        output.WriteString(2, field_names[0], SmsCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      if (hasSmsCode) {
        size += pb::CodedOutputStream.ComputeStringSize(2, SmsCode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static WriteSmsReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static WriteSmsReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static WriteSmsReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static WriteSmsReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static WriteSmsReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static WriteSmsReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static WriteSmsReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static WriteSmsReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static WriteSmsReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static WriteSmsReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private WriteSmsReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(WriteSmsReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<WriteSmsReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(WriteSmsReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private WriteSmsReq result;
      
      private WriteSmsReq PrepareBuilder() {
        if (resultIsReadOnly) {
          WriteSmsReq original = result;
          result = new WriteSmsReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override WriteSmsReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.WriteSmsReq.Descriptor; }
      }
      
      public override WriteSmsReq DefaultInstanceForType {
        get { return global::QQServer.WriteSmsReq.DefaultInstance; }
      }
      
      public override WriteSmsReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is WriteSmsReq) {
          return MergeFrom((WriteSmsReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(WriteSmsReq other) {
        if (other == global::QQServer.WriteSmsReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasSmsCode) {
          SmsCode = other.SmsCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_writeSmsReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _writeSmsReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
            case 18: {
              result.hasSmsCode = input.ReadString(ref result.smsCode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
      
      public bool HasSmsCode {
        get { return result.hasSmsCode; }
      }
      public string SmsCode {
        get { return result.SmsCode; }
        set { SetSmsCode(value); }
      }
      public Builder SetSmsCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSmsCode = true;
        result.smsCode_ = value;
        return this;
      }
      public Builder ClearSmsCode() {
        PrepareBuilder();
        result.hasSmsCode = false;
        result.smsCode_ = "";
        return this;
      }
    }
    static WriteSmsReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class WriteSmsRsp : pb::GeneratedMessage<WriteSmsRsp, WriteSmsRsp.Builder> {
    private WriteSmsRsp() { }
    private static readonly WriteSmsRsp defaultInstance = new WriteSmsRsp().MakeReadOnly();
    private static readonly string[] _writeSmsRspFieldNames = new string[] { "errorCode" };
    private static readonly uint[] _writeSmsRspFieldTags = new uint[] { 8 };
    public static WriteSmsRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override WriteSmsRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override WriteSmsRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_WriteSmsRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<WriteSmsRsp, WriteSmsRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_WriteSmsRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _writeSmsRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static WriteSmsRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static WriteSmsRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static WriteSmsRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static WriteSmsRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static WriteSmsRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static WriteSmsRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static WriteSmsRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static WriteSmsRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static WriteSmsRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static WriteSmsRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private WriteSmsRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(WriteSmsRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<WriteSmsRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(WriteSmsRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private WriteSmsRsp result;
      
      private WriteSmsRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          WriteSmsRsp original = result;
          result = new WriteSmsRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override WriteSmsRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.WriteSmsRsp.Descriptor; }
      }
      
      public override WriteSmsRsp DefaultInstanceForType {
        get { return global::QQServer.WriteSmsRsp.DefaultInstance; }
      }
      
      public override WriteSmsRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is WriteSmsRsp) {
          return MergeFrom((WriteSmsRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(WriteSmsRsp other) {
        if (other == global::QQServer.WriteSmsRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_writeSmsRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _writeSmsRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
    }
    static WriteSmsRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserInfo : pb::GeneratedMessage<UserInfo, UserInfo.Builder> {
    private UserInfo() { }
    private static readonly UserInfo defaultInstance = new UserInfo().MakeReadOnly();
    private static readonly string[] _userInfoFieldNames = new string[] { "nickName", "showName", "type", "uin", "userName" };
    private static readonly uint[] _userInfoFieldTags = new uint[] { 42, 18, 32, 26, 10 };
    public static UserInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_UserInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserInfo, UserInfo.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_UserInfo__FieldAccessorTable; }
    }
    
    public const int UserNameFieldNumber = 1;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    public const int ShowNameFieldNumber = 2;
    private bool hasShowName;
    private string showName_ = "";
    public bool HasShowName {
      get { return hasShowName; }
    }
    public string ShowName {
      get { return showName_; }
    }
    
    public const int UinFieldNumber = 3;
    private bool hasUin;
    private string uin_ = "";
    public bool HasUin {
      get { return hasUin; }
    }
    public string Uin {
      get { return uin_; }
    }
    
    public const int TypeFieldNumber = 4;
    private bool hasType;
    private int type_;
    public bool HasType {
      get { return hasType; }
    }
    public int Type {
      get { return type_; }
    }
    
    public const int NickNameFieldNumber = 5;
    private bool hasNickName;
    private string nickName_ = "";
    public bool HasNickName {
      get { return hasNickName; }
    }
    public string NickName {
      get { return nickName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userInfoFieldNames;
      if (hasUserName) {
        output.WriteString(1, field_names[4], UserName);
      }
      if (hasShowName) {
        output.WriteString(2, field_names[1], ShowName);
      }
      if (hasUin) {
        output.WriteString(3, field_names[3], Uin);
      }
      if (hasType) {
        output.WriteInt32(4, field_names[2], Type);
      }
      if (hasNickName) {
        output.WriteString(5, field_names[0], NickName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, UserName);
      }
      if (hasShowName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ShowName);
      }
      if (hasUin) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Uin);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, Type);
      }
      if (hasNickName) {
        size += pb::CodedOutputStream.ComputeStringSize(5, NickName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserInfo result;
      
      private UserInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          UserInfo original = result;
          result = new UserInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.UserInfo.Descriptor; }
      }
      
      public override UserInfo DefaultInstanceForType {
        get { return global::QQServer.UserInfo.DefaultInstance; }
      }
      
      public override UserInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserInfo) {
          return MergeFrom((UserInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserInfo other) {
        if (other == global::QQServer.UserInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        if (other.HasShowName) {
          ShowName = other.ShowName;
        }
        if (other.HasUin) {
          Uin = other.Uin;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasNickName) {
          NickName = other.NickName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserName = input.ReadString(ref result.userName_);
              break;
            }
            case 18: {
              result.hasShowName = input.ReadString(ref result.showName_);
              break;
            }
            case 26: {
              result.hasUin = input.ReadString(ref result.uin_);
              break;
            }
            case 32: {
              result.hasType = input.ReadInt32(ref result.type_);
              break;
            }
            case 42: {
              result.hasNickName = input.ReadString(ref result.nickName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserName {
        get { return result.hasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        PrepareBuilder();
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
      
      public bool HasShowName {
        get { return result.hasShowName; }
      }
      public string ShowName {
        get { return result.ShowName; }
        set { SetShowName(value); }
      }
      public Builder SetShowName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShowName = true;
        result.showName_ = value;
        return this;
      }
      public Builder ClearShowName() {
        PrepareBuilder();
        result.hasShowName = false;
        result.showName_ = "";
        return this;
      }
      
      public bool HasUin {
        get { return result.hasUin; }
      }
      public string Uin {
        get { return result.Uin; }
        set { SetUin(value); }
      }
      public Builder SetUin(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUin = true;
        result.uin_ = value;
        return this;
      }
      public Builder ClearUin() {
        PrepareBuilder();
        result.hasUin = false;
        result.uin_ = "";
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      public int Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(int value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      public bool HasNickName {
        get { return result.hasNickName; }
      }
      public string NickName {
        get { return result.NickName; }
        set { SetNickName(value); }
      }
      public Builder SetNickName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickName = true;
        result.nickName_ = value;
        return this;
      }
      public Builder ClearNickName() {
        PrepareBuilder();
        result.hasNickName = false;
        result.nickName_ = "";
        return this;
      }
    }
    static UserInfo() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupInfo : pb::GeneratedMessage<GroupInfo, GroupInfo.Builder> {
    private GroupInfo() { }
    private static readonly GroupInfo defaultInstance = new GroupInfo().MakeReadOnly();
    private static readonly string[] _groupInfoFieldNames = new string[] { "groupId", "groupName", "userInfo" };
    private static readonly uint[] _groupInfoFieldTags = new uint[] { 10, 18, 26 };
    public static GroupInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GroupInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupInfo, GroupInfo.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GroupInfo__FieldAccessorTable; }
    }
    
    public const int GroupIdFieldNumber = 1;
    private bool hasGroupId;
    private string groupId_ = "";
    public bool HasGroupId {
      get { return hasGroupId; }
    }
    public string GroupId {
      get { return groupId_; }
    }
    
    public const int GroupNameFieldNumber = 2;
    private bool hasGroupName;
    private string groupName_ = "";
    public bool HasGroupName {
      get { return hasGroupName; }
    }
    public string GroupName {
      get { return groupName_; }
    }
    
    public const int UserInfoFieldNumber = 3;
    private pbc::PopsicleList<global::QQServer.UserInfo> userInfo_ = new pbc::PopsicleList<global::QQServer.UserInfo>();
    public scg::IList<global::QQServer.UserInfo> UserInfoList {
      get { return userInfo_; }
    }
    public int UserInfoCount {
      get { return userInfo_.Count; }
    }
    public global::QQServer.UserInfo GetUserInfo(int index) {
      return userInfo_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGroupId) return false;
        if (!hasGroupName) return false;
        foreach (global::QQServer.UserInfo element in UserInfoList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupInfoFieldNames;
      if (hasGroupId) {
        output.WriteString(1, field_names[0], GroupId);
      }
      if (hasGroupName) {
        output.WriteString(2, field_names[1], GroupName);
      }
      if (userInfo_.Count > 0) {
        output.WriteMessageArray(3, field_names[2], userInfo_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasGroupId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, GroupId);
      }
      if (hasGroupName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, GroupName);
      }
      foreach (global::QQServer.UserInfo element in UserInfoList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupInfo MakeReadOnly() {
      userInfo_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupInfo result;
      
      private GroupInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupInfo original = result;
          result = new GroupInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GroupInfo.Descriptor; }
      }
      
      public override GroupInfo DefaultInstanceForType {
        get { return global::QQServer.GroupInfo.DefaultInstance; }
      }
      
      public override GroupInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupInfo) {
          return MergeFrom((GroupInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupInfo other) {
        if (other == global::QQServer.GroupInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGroupId) {
          GroupId = other.GroupId;
        }
        if (other.HasGroupName) {
          GroupName = other.GroupName;
        }
        if (other.userInfo_.Count != 0) {
          result.userInfo_.Add(other.userInfo_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGroupId = input.ReadString(ref result.groupId_);
              break;
            }
            case 18: {
              result.hasGroupName = input.ReadString(ref result.groupName_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.userInfo_, global::QQServer.UserInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGroupId {
        get { return result.hasGroupId; }
      }
      public string GroupId {
        get { return result.GroupId; }
        set { SetGroupId(value); }
      }
      public Builder SetGroupId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGroupId = true;
        result.groupId_ = value;
        return this;
      }
      public Builder ClearGroupId() {
        PrepareBuilder();
        result.hasGroupId = false;
        result.groupId_ = "";
        return this;
      }
      
      public bool HasGroupName {
        get { return result.hasGroupName; }
      }
      public string GroupName {
        get { return result.GroupName; }
        set { SetGroupName(value); }
      }
      public Builder SetGroupName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGroupName = true;
        result.groupName_ = value;
        return this;
      }
      public Builder ClearGroupName() {
        PrepareBuilder();
        result.hasGroupName = false;
        result.groupName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::QQServer.UserInfo> UserInfoList {
        get { return PrepareBuilder().userInfo_; }
      }
      public int UserInfoCount {
        get { return result.UserInfoCount; }
      }
      public global::QQServer.UserInfo GetUserInfo(int index) {
        return result.GetUserInfo(index);
      }
      public Builder SetUserInfo(int index, global::QQServer.UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.userInfo_[index] = value;
        return this;
      }
      public Builder SetUserInfo(int index, global::QQServer.UserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.userInfo_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUserInfo(global::QQServer.UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.userInfo_.Add(value);
        return this;
      }
      public Builder AddUserInfo(global::QQServer.UserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.userInfo_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUserInfo(scg::IEnumerable<global::QQServer.UserInfo> values) {
        PrepareBuilder();
        result.userInfo_.Add(values);
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.userInfo_.Clear();
        return this;
      }
    }
    static GroupInfo() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RoomInfo : pb::GeneratedMessage<RoomInfo, RoomInfo.Builder> {
    private RoomInfo() { }
    private static readonly RoomInfo defaultInstance = new RoomInfo().MakeReadOnly();
    private static readonly string[] _roomInfoFieldNames = new string[] { "code", "roomName", "uin", "userInfo" };
    private static readonly uint[] _roomInfoFieldTags = new uint[] { 26, 18, 10, 34 };
    public static RoomInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RoomInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RoomInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_RoomInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RoomInfo, RoomInfo.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_RoomInfo__FieldAccessorTable; }
    }
    
    public const int UinFieldNumber = 1;
    private bool hasUin;
    private string uin_ = "";
    public bool HasUin {
      get { return hasUin; }
    }
    public string Uin {
      get { return uin_; }
    }
    
    public const int RoomNameFieldNumber = 2;
    private bool hasRoomName;
    private string roomName_ = "";
    public bool HasRoomName {
      get { return hasRoomName; }
    }
    public string RoomName {
      get { return roomName_; }
    }
    
    public const int CodeFieldNumber = 3;
    private bool hasCode;
    private string code_ = "";
    public bool HasCode {
      get { return hasCode; }
    }
    public string Code {
      get { return code_; }
    }
    
    public const int UserInfoFieldNumber = 4;
    private pbc::PopsicleList<global::QQServer.UserInfo> userInfo_ = new pbc::PopsicleList<global::QQServer.UserInfo>();
    public scg::IList<global::QQServer.UserInfo> UserInfoList {
      get { return userInfo_; }
    }
    public int UserInfoCount {
      get { return userInfo_.Count; }
    }
    public global::QQServer.UserInfo GetUserInfo(int index) {
      return userInfo_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUin) return false;
        if (!hasRoomName) return false;
        if (!hasCode) return false;
        foreach (global::QQServer.UserInfo element in UserInfoList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _roomInfoFieldNames;
      if (hasUin) {
        output.WriteString(1, field_names[2], Uin);
      }
      if (hasRoomName) {
        output.WriteString(2, field_names[1], RoomName);
      }
      if (hasCode) {
        output.WriteString(3, field_names[0], Code);
      }
      if (userInfo_.Count > 0) {
        output.WriteMessageArray(4, field_names[3], userInfo_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUin) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Uin);
      }
      if (hasRoomName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, RoomName);
      }
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Code);
      }
      foreach (global::QQServer.UserInfo element in UserInfoList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RoomInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoomInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoomInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoomInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoomInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoomInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RoomInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RoomInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RoomInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoomInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RoomInfo MakeReadOnly() {
      userInfo_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RoomInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RoomInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RoomInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RoomInfo result;
      
      private RoomInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          RoomInfo original = result;
          result = new RoomInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RoomInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.RoomInfo.Descriptor; }
      }
      
      public override RoomInfo DefaultInstanceForType {
        get { return global::QQServer.RoomInfo.DefaultInstance; }
      }
      
      public override RoomInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RoomInfo) {
          return MergeFrom((RoomInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RoomInfo other) {
        if (other == global::QQServer.RoomInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUin) {
          Uin = other.Uin;
        }
        if (other.HasRoomName) {
          RoomName = other.RoomName;
        }
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.userInfo_.Count != 0) {
          result.userInfo_.Add(other.userInfo_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_roomInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _roomInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUin = input.ReadString(ref result.uin_);
              break;
            }
            case 18: {
              result.hasRoomName = input.ReadString(ref result.roomName_);
              break;
            }
            case 26: {
              result.hasCode = input.ReadString(ref result.code_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.userInfo_, global::QQServer.UserInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUin {
        get { return result.hasUin; }
      }
      public string Uin {
        get { return result.Uin; }
        set { SetUin(value); }
      }
      public Builder SetUin(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUin = true;
        result.uin_ = value;
        return this;
      }
      public Builder ClearUin() {
        PrepareBuilder();
        result.hasUin = false;
        result.uin_ = "";
        return this;
      }
      
      public bool HasRoomName {
        get { return result.hasRoomName; }
      }
      public string RoomName {
        get { return result.RoomName; }
        set { SetRoomName(value); }
      }
      public Builder SetRoomName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRoomName = true;
        result.roomName_ = value;
        return this;
      }
      public Builder ClearRoomName() {
        PrepareBuilder();
        result.hasRoomName = false;
        result.roomName_ = "";
        return this;
      }
      
      public bool HasCode {
        get { return result.hasCode; }
      }
      public string Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::QQServer.UserInfo> UserInfoList {
        get { return PrepareBuilder().userInfo_; }
      }
      public int UserInfoCount {
        get { return result.UserInfoCount; }
      }
      public global::QQServer.UserInfo GetUserInfo(int index) {
        return result.GetUserInfo(index);
      }
      public Builder SetUserInfo(int index, global::QQServer.UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.userInfo_[index] = value;
        return this;
      }
      public Builder SetUserInfo(int index, global::QQServer.UserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.userInfo_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUserInfo(global::QQServer.UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.userInfo_.Add(value);
        return this;
      }
      public Builder AddUserInfo(global::QQServer.UserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.userInfo_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUserInfo(scg::IEnumerable<global::QQServer.UserInfo> values) {
        PrepareBuilder();
        result.userInfo_.Add(values);
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.userInfo_.Clear();
        return this;
      }
    }
    static RoomInfo() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetFriendListReq : pb::GeneratedMessage<GetFriendListReq, GetFriendListReq.Builder> {
    private GetFriendListReq() { }
    private static readonly GetFriendListReq defaultInstance = new GetFriendListReq().MakeReadOnly();
    private static readonly string[] _getFriendListReqFieldNames = new string[] { "isRefresh", "token" };
    private static readonly uint[] _getFriendListReqFieldTags = new uint[] { 16, 10 };
    public static GetFriendListReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetFriendListReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetFriendListReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetFriendListReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetFriendListReq, GetFriendListReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetFriendListReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public const int IsRefreshFieldNumber = 2;
    private bool hasIsRefresh;
    private bool isRefresh_;
    public bool HasIsRefresh {
      get { return hasIsRefresh; }
    }
    public bool IsRefresh {
      get { return isRefresh_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getFriendListReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[1], Token);
      }
      if (hasIsRefresh) {
        output.WriteBool(2, field_names[0], IsRefresh);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      if (hasIsRefresh) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, IsRefresh);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetFriendListReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFriendListReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFriendListReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFriendListReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFriendListReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFriendListReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetFriendListReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetFriendListReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetFriendListReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFriendListReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetFriendListReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetFriendListReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetFriendListReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetFriendListReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetFriendListReq result;
      
      private GetFriendListReq PrepareBuilder() {
        if (resultIsReadOnly) {
          GetFriendListReq original = result;
          result = new GetFriendListReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetFriendListReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GetFriendListReq.Descriptor; }
      }
      
      public override GetFriendListReq DefaultInstanceForType {
        get { return global::QQServer.GetFriendListReq.DefaultInstance; }
      }
      
      public override GetFriendListReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetFriendListReq) {
          return MergeFrom((GetFriendListReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetFriendListReq other) {
        if (other == global::QQServer.GetFriendListReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasIsRefresh) {
          IsRefresh = other.IsRefresh;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getFriendListReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getFriendListReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
            case 16: {
              result.hasIsRefresh = input.ReadBool(ref result.isRefresh_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
      
      public bool HasIsRefresh {
        get { return result.hasIsRefresh; }
      }
      public bool IsRefresh {
        get { return result.IsRefresh; }
        set { SetIsRefresh(value); }
      }
      public Builder SetIsRefresh(bool value) {
        PrepareBuilder();
        result.hasIsRefresh = true;
        result.isRefresh_ = value;
        return this;
      }
      public Builder ClearIsRefresh() {
        PrepareBuilder();
        result.hasIsRefresh = false;
        result.isRefresh_ = false;
        return this;
      }
    }
    static GetFriendListReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetFriendListRsp : pb::GeneratedMessage<GetFriendListRsp, GetFriendListRsp.Builder> {
    private GetFriendListRsp() { }
    private static readonly GetFriendListRsp defaultInstance = new GetFriendListRsp().MakeReadOnly();
    private static readonly string[] _getFriendListRspFieldNames = new string[] { "errorCode", "group" };
    private static readonly uint[] _getFriendListRspFieldTags = new uint[] { 8, 18 };
    public static GetFriendListRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetFriendListRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetFriendListRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetFriendListRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetFriendListRsp, GetFriendListRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetFriendListRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public const int GroupFieldNumber = 2;
    private pbc::PopsicleList<global::QQServer.GroupInfo> group_ = new pbc::PopsicleList<global::QQServer.GroupInfo>();
    public scg::IList<global::QQServer.GroupInfo> GroupList {
      get { return group_; }
    }
    public int GroupCount {
      get { return group_.Count; }
    }
    public global::QQServer.GroupInfo GetGroup(int index) {
      return group_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        foreach (global::QQServer.GroupInfo element in GroupList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getFriendListRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      if (group_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], group_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      foreach (global::QQServer.GroupInfo element in GroupList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetFriendListRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFriendListRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFriendListRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFriendListRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFriendListRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFriendListRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetFriendListRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetFriendListRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetFriendListRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFriendListRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetFriendListRsp MakeReadOnly() {
      group_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetFriendListRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetFriendListRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetFriendListRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetFriendListRsp result;
      
      private GetFriendListRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          GetFriendListRsp original = result;
          result = new GetFriendListRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetFriendListRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GetFriendListRsp.Descriptor; }
      }
      
      public override GetFriendListRsp DefaultInstanceForType {
        get { return global::QQServer.GetFriendListRsp.DefaultInstance; }
      }
      
      public override GetFriendListRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetFriendListRsp) {
          return MergeFrom((GetFriendListRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetFriendListRsp other) {
        if (other == global::QQServer.GetFriendListRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        if (other.group_.Count != 0) {
          result.group_.Add(other.group_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getFriendListRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getFriendListRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.group_, global::QQServer.GroupInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::QQServer.GroupInfo> GroupList {
        get { return PrepareBuilder().group_; }
      }
      public int GroupCount {
        get { return result.GroupCount; }
      }
      public global::QQServer.GroupInfo GetGroup(int index) {
        return result.GetGroup(index);
      }
      public Builder SetGroup(int index, global::QQServer.GroupInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.group_[index] = value;
        return this;
      }
      public Builder SetGroup(int index, global::QQServer.GroupInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.group_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGroup(global::QQServer.GroupInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.group_.Add(value);
        return this;
      }
      public Builder AddGroup(global::QQServer.GroupInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.group_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGroup(scg::IEnumerable<global::QQServer.GroupInfo> values) {
        PrepareBuilder();
        result.group_.Add(values);
        return this;
      }
      public Builder ClearGroup() {
        PrepareBuilder();
        result.group_.Clear();
        return this;
      }
    }
    static GetFriendListRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetRoomListReq : pb::GeneratedMessage<GetRoomListReq, GetRoomListReq.Builder> {
    private GetRoomListReq() { }
    private static readonly GetRoomListReq defaultInstance = new GetRoomListReq().MakeReadOnly();
    private static readonly string[] _getRoomListReqFieldNames = new string[] { "token" };
    private static readonly uint[] _getRoomListReqFieldTags = new uint[] { 10 };
    public static GetRoomListReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetRoomListReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetRoomListReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetRoomListReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetRoomListReq, GetRoomListReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetRoomListReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getRoomListReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[0], Token);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetRoomListReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRoomListReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRoomListReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRoomListReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRoomListReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRoomListReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetRoomListReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetRoomListReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetRoomListReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRoomListReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetRoomListReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetRoomListReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetRoomListReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetRoomListReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetRoomListReq result;
      
      private GetRoomListReq PrepareBuilder() {
        if (resultIsReadOnly) {
          GetRoomListReq original = result;
          result = new GetRoomListReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetRoomListReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GetRoomListReq.Descriptor; }
      }
      
      public override GetRoomListReq DefaultInstanceForType {
        get { return global::QQServer.GetRoomListReq.DefaultInstance; }
      }
      
      public override GetRoomListReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetRoomListReq) {
          return MergeFrom((GetRoomListReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetRoomListReq other) {
        if (other == global::QQServer.GetRoomListReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getRoomListReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getRoomListReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
    }
    static GetRoomListReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetRoomListRsp : pb::GeneratedMessage<GetRoomListRsp, GetRoomListRsp.Builder> {
    private GetRoomListRsp() { }
    private static readonly GetRoomListRsp defaultInstance = new GetRoomListRsp().MakeReadOnly();
    private static readonly string[] _getRoomListRspFieldNames = new string[] { "errorCode", "room" };
    private static readonly uint[] _getRoomListRspFieldTags = new uint[] { 8, 18 };
    public static GetRoomListRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetRoomListRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetRoomListRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetRoomListRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetRoomListRsp, GetRoomListRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetRoomListRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public const int RoomFieldNumber = 2;
    private pbc::PopsicleList<global::QQServer.RoomInfo> room_ = new pbc::PopsicleList<global::QQServer.RoomInfo>();
    public scg::IList<global::QQServer.RoomInfo> RoomList {
      get { return room_; }
    }
    public int RoomCount {
      get { return room_.Count; }
    }
    public global::QQServer.RoomInfo GetRoom(int index) {
      return room_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        foreach (global::QQServer.RoomInfo element in RoomList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getRoomListRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      if (room_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], room_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      foreach (global::QQServer.RoomInfo element in RoomList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetRoomListRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRoomListRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRoomListRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRoomListRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRoomListRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRoomListRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetRoomListRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetRoomListRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetRoomListRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRoomListRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetRoomListRsp MakeReadOnly() {
      room_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetRoomListRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetRoomListRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetRoomListRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetRoomListRsp result;
      
      private GetRoomListRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          GetRoomListRsp original = result;
          result = new GetRoomListRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetRoomListRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GetRoomListRsp.Descriptor; }
      }
      
      public override GetRoomListRsp DefaultInstanceForType {
        get { return global::QQServer.GetRoomListRsp.DefaultInstance; }
      }
      
      public override GetRoomListRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetRoomListRsp) {
          return MergeFrom((GetRoomListRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetRoomListRsp other) {
        if (other == global::QQServer.GetRoomListRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        if (other.room_.Count != 0) {
          result.room_.Add(other.room_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getRoomListRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getRoomListRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.room_, global::QQServer.RoomInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::QQServer.RoomInfo> RoomList {
        get { return PrepareBuilder().room_; }
      }
      public int RoomCount {
        get { return result.RoomCount; }
      }
      public global::QQServer.RoomInfo GetRoom(int index) {
        return result.GetRoom(index);
      }
      public Builder SetRoom(int index, global::QQServer.RoomInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.room_[index] = value;
        return this;
      }
      public Builder SetRoom(int index, global::QQServer.RoomInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.room_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRoom(global::QQServer.RoomInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.room_.Add(value);
        return this;
      }
      public Builder AddRoom(global::QQServer.RoomInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.room_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRoom(scg::IEnumerable<global::QQServer.RoomInfo> values) {
        PrepareBuilder();
        result.room_.Add(values);
        return this;
      }
      public Builder ClearRoom() {
        PrepareBuilder();
        result.room_.Clear();
        return this;
      }
    }
    static GetRoomListRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetRoomMemberInfoReq : pb::GeneratedMessage<GetRoomMemberInfoReq, GetRoomMemberInfoReq.Builder> {
    private GetRoomMemberInfoReq() { }
    private static readonly GetRoomMemberInfoReq defaultInstance = new GetRoomMemberInfoReq().MakeReadOnly();
    private static readonly string[] _getRoomMemberInfoReqFieldNames = new string[] { "code", "token", "uin" };
    private static readonly uint[] _getRoomMemberInfoReqFieldTags = new uint[] { 26, 10, 18 };
    public static GetRoomMemberInfoReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetRoomMemberInfoReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetRoomMemberInfoReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetRoomMemberInfoReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetRoomMemberInfoReq, GetRoomMemberInfoReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetRoomMemberInfoReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public const int UinFieldNumber = 2;
    private bool hasUin;
    private string uin_ = "";
    public bool HasUin {
      get { return hasUin; }
    }
    public string Uin {
      get { return uin_; }
    }
    
    public const int CodeFieldNumber = 3;
    private bool hasCode;
    private string code_ = "";
    public bool HasCode {
      get { return hasCode; }
    }
    public string Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        if (!hasUin) return false;
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getRoomMemberInfoReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[1], Token);
      }
      if (hasUin) {
        output.WriteString(2, field_names[2], Uin);
      }
      if (hasCode) {
        output.WriteString(3, field_names[0], Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      if (hasUin) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Uin);
      }
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Code);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetRoomMemberInfoReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRoomMemberInfoReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRoomMemberInfoReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRoomMemberInfoReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRoomMemberInfoReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRoomMemberInfoReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetRoomMemberInfoReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetRoomMemberInfoReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetRoomMemberInfoReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRoomMemberInfoReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetRoomMemberInfoReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetRoomMemberInfoReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetRoomMemberInfoReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetRoomMemberInfoReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetRoomMemberInfoReq result;
      
      private GetRoomMemberInfoReq PrepareBuilder() {
        if (resultIsReadOnly) {
          GetRoomMemberInfoReq original = result;
          result = new GetRoomMemberInfoReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetRoomMemberInfoReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GetRoomMemberInfoReq.Descriptor; }
      }
      
      public override GetRoomMemberInfoReq DefaultInstanceForType {
        get { return global::QQServer.GetRoomMemberInfoReq.DefaultInstance; }
      }
      
      public override GetRoomMemberInfoReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetRoomMemberInfoReq) {
          return MergeFrom((GetRoomMemberInfoReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetRoomMemberInfoReq other) {
        if (other == global::QQServer.GetRoomMemberInfoReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasUin) {
          Uin = other.Uin;
        }
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getRoomMemberInfoReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getRoomMemberInfoReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
            case 18: {
              result.hasUin = input.ReadString(ref result.uin_);
              break;
            }
            case 26: {
              result.hasCode = input.ReadString(ref result.code_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
      
      public bool HasUin {
        get { return result.hasUin; }
      }
      public string Uin {
        get { return result.Uin; }
        set { SetUin(value); }
      }
      public Builder SetUin(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUin = true;
        result.uin_ = value;
        return this;
      }
      public Builder ClearUin() {
        PrepareBuilder();
        result.hasUin = false;
        result.uin_ = "";
        return this;
      }
      
      public bool HasCode {
        get { return result.hasCode; }
      }
      public string Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = "";
        return this;
      }
    }
    static GetRoomMemberInfoReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetRoomMemberInfoRsp : pb::GeneratedMessage<GetRoomMemberInfoRsp, GetRoomMemberInfoRsp.Builder> {
    private GetRoomMemberInfoRsp() { }
    private static readonly GetRoomMemberInfoRsp defaultInstance = new GetRoomMemberInfoRsp().MakeReadOnly();
    private static readonly string[] _getRoomMemberInfoRspFieldNames = new string[] { "userInfo" };
    private static readonly uint[] _getRoomMemberInfoRspFieldTags = new uint[] { 10 };
    public static GetRoomMemberInfoRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetRoomMemberInfoRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetRoomMemberInfoRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetRoomMemberInfoRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetRoomMemberInfoRsp, GetRoomMemberInfoRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetRoomMemberInfoRsp__FieldAccessorTable; }
    }
    
    public const int UserInfoFieldNumber = 1;
    private pbc::PopsicleList<global::QQServer.UserInfo> userInfo_ = new pbc::PopsicleList<global::QQServer.UserInfo>();
    public scg::IList<global::QQServer.UserInfo> UserInfoList {
      get { return userInfo_; }
    }
    public int UserInfoCount {
      get { return userInfo_.Count; }
    }
    public global::QQServer.UserInfo GetUserInfo(int index) {
      return userInfo_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::QQServer.UserInfo element in UserInfoList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getRoomMemberInfoRspFieldNames;
      if (userInfo_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], userInfo_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::QQServer.UserInfo element in UserInfoList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetRoomMemberInfoRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRoomMemberInfoRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRoomMemberInfoRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRoomMemberInfoRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRoomMemberInfoRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRoomMemberInfoRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetRoomMemberInfoRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetRoomMemberInfoRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetRoomMemberInfoRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRoomMemberInfoRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetRoomMemberInfoRsp MakeReadOnly() {
      userInfo_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetRoomMemberInfoRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetRoomMemberInfoRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetRoomMemberInfoRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetRoomMemberInfoRsp result;
      
      private GetRoomMemberInfoRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          GetRoomMemberInfoRsp original = result;
          result = new GetRoomMemberInfoRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetRoomMemberInfoRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GetRoomMemberInfoRsp.Descriptor; }
      }
      
      public override GetRoomMemberInfoRsp DefaultInstanceForType {
        get { return global::QQServer.GetRoomMemberInfoRsp.DefaultInstance; }
      }
      
      public override GetRoomMemberInfoRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetRoomMemberInfoRsp) {
          return MergeFrom((GetRoomMemberInfoRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetRoomMemberInfoRsp other) {
        if (other == global::QQServer.GetRoomMemberInfoRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.userInfo_.Count != 0) {
          result.userInfo_.Add(other.userInfo_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getRoomMemberInfoRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getRoomMemberInfoRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.userInfo_, global::QQServer.UserInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::QQServer.UserInfo> UserInfoList {
        get { return PrepareBuilder().userInfo_; }
      }
      public int UserInfoCount {
        get { return result.UserInfoCount; }
      }
      public global::QQServer.UserInfo GetUserInfo(int index) {
        return result.GetUserInfo(index);
      }
      public Builder SetUserInfo(int index, global::QQServer.UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.userInfo_[index] = value;
        return this;
      }
      public Builder SetUserInfo(int index, global::QQServer.UserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.userInfo_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUserInfo(global::QQServer.UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.userInfo_.Add(value);
        return this;
      }
      public Builder AddUserInfo(global::QQServer.UserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.userInfo_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUserInfo(scg::IEnumerable<global::QQServer.UserInfo> values) {
        PrepareBuilder();
        result.userInfo_.Add(values);
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.userInfo_.Clear();
        return this;
      }
    }
    static GetRoomMemberInfoRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class QQMessage : pb::GeneratedMessage<QQMessage, QQMessage.Builder> {
    private QQMessage() { }
    private static readonly QQMessage defaultInstance = new QQMessage().MakeReadOnly();
    private static readonly string[] _qQMessageFieldNames = new string[] { "content", "msgType" };
    private static readonly uint[] _qQMessageFieldTags = new uint[] { 18, 8 };
    public static QQMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QQMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QQMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_QQMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QQMessage, QQMessage.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_QQMessage__FieldAccessorTable; }
    }
    
    public const int MsgTypeFieldNumber = 1;
    private bool hasMsgType;
    private int msgType_;
    public bool HasMsgType {
      get { return hasMsgType; }
    }
    public int MsgType {
      get { return msgType_; }
    }
    
    public const int ContentFieldNumber = 2;
    private bool hasContent;
    private pb::ByteString content_ = pb::ByteString.Empty;
    public bool HasContent {
      get { return hasContent; }
    }
    public pb::ByteString Content {
      get { return content_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMsgType) return false;
        if (!hasContent) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _qQMessageFieldNames;
      if (hasMsgType) {
        output.WriteInt32(1, field_names[1], MsgType);
      }
      if (hasContent) {
        output.WriteBytes(2, field_names[0], Content);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMsgType) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, MsgType);
      }
      if (hasContent) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Content);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static QQMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QQMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QQMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QQMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QQMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QQMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QQMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QQMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QQMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QQMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QQMessage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QQMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<QQMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QQMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QQMessage result;
      
      private QQMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          QQMessage original = result;
          result = new QQMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QQMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.QQMessage.Descriptor; }
      }
      
      public override QQMessage DefaultInstanceForType {
        get { return global::QQServer.QQMessage.DefaultInstance; }
      }
      
      public override QQMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QQMessage) {
          return MergeFrom((QQMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QQMessage other) {
        if (other == global::QQServer.QQMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMsgType) {
          MsgType = other.MsgType;
        }
        if (other.HasContent) {
          Content = other.Content;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_qQMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _qQMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMsgType = input.ReadInt32(ref result.msgType_);
              break;
            }
            case 18: {
              result.hasContent = input.ReadBytes(ref result.content_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMsgType {
        get { return result.hasMsgType; }
      }
      public int MsgType {
        get { return result.MsgType; }
        set { SetMsgType(value); }
      }
      public Builder SetMsgType(int value) {
        PrepareBuilder();
        result.hasMsgType = true;
        result.msgType_ = value;
        return this;
      }
      public Builder ClearMsgType() {
        PrepareBuilder();
        result.hasMsgType = false;
        result.msgType_ = 0;
        return this;
      }
      
      public bool HasContent {
        get { return result.hasContent; }
      }
      public pb::ByteString Content {
        get { return result.Content; }
        set { SetContent(value); }
      }
      public Builder SetContent(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContent = true;
        result.content_ = value;
        return this;
      }
      public Builder ClearContent() {
        PrepareBuilder();
        result.hasContent = false;
        result.content_ = pb::ByteString.Empty;
        return this;
      }
    }
    static QQMessage() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SendMessageReq : pb::GeneratedMessage<SendMessageReq, SendMessageReq.Builder> {
    private SendMessageReq() { }
    private static readonly SendMessageReq defaultInstance = new SendMessageReq().MakeReadOnly();
    private static readonly string[] _sendMessageReqFieldNames = new string[] { "code", "msg", "token", "type", "uin" };
    private static readonly uint[] _sendMessageReqFieldTags = new uint[] { 42, 34, 10, 24, 18 };
    public static SendMessageReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendMessageReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendMessageReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_SendMessageReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendMessageReq, SendMessageReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_SendMessageReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public const int UinFieldNumber = 2;
    private bool hasUin;
    private string uin_ = "";
    public bool HasUin {
      get { return hasUin; }
    }
    public string Uin {
      get { return uin_; }
    }
    
    public const int TypeFieldNumber = 3;
    private bool hasType;
    private int type_;
    public bool HasType {
      get { return hasType; }
    }
    public int Type {
      get { return type_; }
    }
    
    public const int MsgFieldNumber = 4;
    private pbc::PopsicleList<global::QQServer.QQMessage> msg_ = new pbc::PopsicleList<global::QQServer.QQMessage>();
    public scg::IList<global::QQServer.QQMessage> MsgList {
      get { return msg_; }
    }
    public int MsgCount {
      get { return msg_.Count; }
    }
    public global::QQServer.QQMessage GetMsg(int index) {
      return msg_[index];
    }
    
    public const int CodeFieldNumber = 5;
    private bool hasCode;
    private string code_ = "";
    public bool HasCode {
      get { return hasCode; }
    }
    public string Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        if (!hasUin) return false;
        if (!hasType) return false;
        foreach (global::QQServer.QQMessage element in MsgList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _sendMessageReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[2], Token);
      }
      if (hasUin) {
        output.WriteString(2, field_names[4], Uin);
      }
      if (hasType) {
        output.WriteInt32(3, field_names[3], Type);
      }
      if (msg_.Count > 0) {
        output.WriteMessageArray(4, field_names[1], msg_);
      }
      if (hasCode) {
        output.WriteString(5, field_names[0], Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      if (hasUin) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Uin);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Type);
      }
      foreach (global::QQServer.QQMessage element in MsgList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeStringSize(5, Code);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SendMessageReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendMessageReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendMessageReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendMessageReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendMessageReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendMessageReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendMessageReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendMessageReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendMessageReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendMessageReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendMessageReq MakeReadOnly() {
      msg_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendMessageReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SendMessageReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendMessageReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendMessageReq result;
      
      private SendMessageReq PrepareBuilder() {
        if (resultIsReadOnly) {
          SendMessageReq original = result;
          result = new SendMessageReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendMessageReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.SendMessageReq.Descriptor; }
      }
      
      public override SendMessageReq DefaultInstanceForType {
        get { return global::QQServer.SendMessageReq.DefaultInstance; }
      }
      
      public override SendMessageReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendMessageReq) {
          return MergeFrom((SendMessageReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendMessageReq other) {
        if (other == global::QQServer.SendMessageReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasUin) {
          Uin = other.Uin;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.msg_.Count != 0) {
          result.msg_.Add(other.msg_);
        }
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendMessageReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendMessageReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
            case 18: {
              result.hasUin = input.ReadString(ref result.uin_);
              break;
            }
            case 24: {
              result.hasType = input.ReadInt32(ref result.type_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.msg_, global::QQServer.QQMessage.DefaultInstance, extensionRegistry);
              break;
            }
            case 42: {
              result.hasCode = input.ReadString(ref result.code_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
      
      public bool HasUin {
        get { return result.hasUin; }
      }
      public string Uin {
        get { return result.Uin; }
        set { SetUin(value); }
      }
      public Builder SetUin(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUin = true;
        result.uin_ = value;
        return this;
      }
      public Builder ClearUin() {
        PrepareBuilder();
        result.hasUin = false;
        result.uin_ = "";
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      public int Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(int value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::QQServer.QQMessage> MsgList {
        get { return PrepareBuilder().msg_; }
      }
      public int MsgCount {
        get { return result.MsgCount; }
      }
      public global::QQServer.QQMessage GetMsg(int index) {
        return result.GetMsg(index);
      }
      public Builder SetMsg(int index, global::QQServer.QQMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.msg_[index] = value;
        return this;
      }
      public Builder SetMsg(int index, global::QQServer.QQMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.msg_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMsg(global::QQServer.QQMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.msg_.Add(value);
        return this;
      }
      public Builder AddMsg(global::QQServer.QQMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.msg_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMsg(scg::IEnumerable<global::QQServer.QQMessage> values) {
        PrepareBuilder();
        result.msg_.Add(values);
        return this;
      }
      public Builder ClearMsg() {
        PrepareBuilder();
        result.msg_.Clear();
        return this;
      }
      
      public bool HasCode {
        get { return result.hasCode; }
      }
      public string Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = "";
        return this;
      }
    }
    static SendMessageReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SendMessageRsp : pb::GeneratedMessage<SendMessageRsp, SendMessageRsp.Builder> {
    private SendMessageRsp() { }
    private static readonly SendMessageRsp defaultInstance = new SendMessageRsp().MakeReadOnly();
    private static readonly string[] _sendMessageRspFieldNames = new string[] { "errorCode", "time" };
    private static readonly uint[] _sendMessageRspFieldTags = new uint[] { 8, 16 };
    public static SendMessageRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendMessageRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendMessageRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_SendMessageRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendMessageRsp, SendMessageRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_SendMessageRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public const int TimeFieldNumber = 2;
    private bool hasTime;
    private long time_;
    public bool HasTime {
      get { return hasTime; }
    }
    public long Time {
      get { return time_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _sendMessageRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      if (hasTime) {
        output.WriteInt64(2, field_names[1], Time);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      if (hasTime) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, Time);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SendMessageRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendMessageRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendMessageRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendMessageRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendMessageRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendMessageRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendMessageRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendMessageRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendMessageRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendMessageRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendMessageRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendMessageRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SendMessageRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendMessageRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendMessageRsp result;
      
      private SendMessageRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          SendMessageRsp original = result;
          result = new SendMessageRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendMessageRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.SendMessageRsp.Descriptor; }
      }
      
      public override SendMessageRsp DefaultInstanceForType {
        get { return global::QQServer.SendMessageRsp.DefaultInstance; }
      }
      
      public override SendMessageRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendMessageRsp) {
          return MergeFrom((SendMessageRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendMessageRsp other) {
        if (other == global::QQServer.SendMessageRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        if (other.HasTime) {
          Time = other.Time;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendMessageRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendMessageRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
            case 16: {
              result.hasTime = input.ReadInt64(ref result.time_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      public bool HasTime {
        get { return result.hasTime; }
      }
      public long Time {
        get { return result.Time; }
        set { SetTime(value); }
      }
      public Builder SetTime(long value) {
        PrepareBuilder();
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder ClearTime() {
        PrepareBuilder();
        result.hasTime = false;
        result.time_ = 0L;
        return this;
      }
    }
    static SendMessageRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PubReciveMessage : pb::GeneratedMessage<PubReciveMessage, PubReciveMessage.Builder> {
    private PubReciveMessage() { }
    private static readonly PubReciveMessage defaultInstance = new PubReciveMessage().MakeReadOnly();
    private static readonly string[] _pubReciveMessageFieldNames = new string[] { "fromName", "fromUin", "lastReadTime", "msg", "serNum", "time", "toUin", "type" };
    private static readonly uint[] _pubReciveMessageFieldTags = new uint[] { 18, 10, 56, 50, 64, 40, 26, 32 };
    public static PubReciveMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PubReciveMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PubReciveMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_PubReciveMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PubReciveMessage, PubReciveMessage.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_PubReciveMessage__FieldAccessorTable; }
    }
    
    public const int FromUinFieldNumber = 1;
    private bool hasFromUin;
    private string fromUin_ = "";
    public bool HasFromUin {
      get { return hasFromUin; }
    }
    public string FromUin {
      get { return fromUin_; }
    }
    
    public const int FromNameFieldNumber = 2;
    private bool hasFromName;
    private string fromName_ = "";
    public bool HasFromName {
      get { return hasFromName; }
    }
    public string FromName {
      get { return fromName_; }
    }
    
    public const int ToUinFieldNumber = 3;
    private bool hasToUin;
    private string toUin_ = "";
    public bool HasToUin {
      get { return hasToUin; }
    }
    public string ToUin {
      get { return toUin_; }
    }
    
    public const int TypeFieldNumber = 4;
    private bool hasType;
    private int type_;
    public bool HasType {
      get { return hasType; }
    }
    public int Type {
      get { return type_; }
    }
    
    public const int TimeFieldNumber = 5;
    private bool hasTime;
    private long time_;
    public bool HasTime {
      get { return hasTime; }
    }
    public long Time {
      get { return time_; }
    }
    
    public const int MsgFieldNumber = 6;
    private pbc::PopsicleList<global::QQServer.QQMessage> msg_ = new pbc::PopsicleList<global::QQServer.QQMessage>();
    public scg::IList<global::QQServer.QQMessage> MsgList {
      get { return msg_; }
    }
    public int MsgCount {
      get { return msg_.Count; }
    }
    public global::QQServer.QQMessage GetMsg(int index) {
      return msg_[index];
    }
    
    public const int LastReadTimeFieldNumber = 7;
    private bool hasLastReadTime;
    private long lastReadTime_;
    public bool HasLastReadTime {
      get { return hasLastReadTime; }
    }
    public long LastReadTime {
      get { return lastReadTime_; }
    }
    
    public const int SerNumFieldNumber = 8;
    private bool hasSerNum;
    private long serNum_;
    public bool HasSerNum {
      get { return hasSerNum; }
    }
    public long SerNum {
      get { return serNum_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFromUin) return false;
        if (!hasTime) return false;
        foreach (global::QQServer.QQMessage element in MsgList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _pubReciveMessageFieldNames;
      if (hasFromUin) {
        output.WriteString(1, field_names[1], FromUin);
      }
      if (hasFromName) {
        output.WriteString(2, field_names[0], FromName);
      }
      if (hasToUin) {
        output.WriteString(3, field_names[6], ToUin);
      }
      if (hasType) {
        output.WriteInt32(4, field_names[7], Type);
      }
      if (hasTime) {
        output.WriteInt64(5, field_names[5], Time);
      }
      if (msg_.Count > 0) {
        output.WriteMessageArray(6, field_names[3], msg_);
      }
      if (hasLastReadTime) {
        output.WriteInt64(7, field_names[2], LastReadTime);
      }
      if (hasSerNum) {
        output.WriteInt64(8, field_names[4], SerNum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFromUin) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FromUin);
      }
      if (hasFromName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, FromName);
      }
      if (hasToUin) {
        size += pb::CodedOutputStream.ComputeStringSize(3, ToUin);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, Type);
      }
      if (hasTime) {
        size += pb::CodedOutputStream.ComputeInt64Size(5, Time);
      }
      foreach (global::QQServer.QQMessage element in MsgList) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, element);
      }
      if (hasLastReadTime) {
        size += pb::CodedOutputStream.ComputeInt64Size(7, LastReadTime);
      }
      if (hasSerNum) {
        size += pb::CodedOutputStream.ComputeInt64Size(8, SerNum);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PubReciveMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PubReciveMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PubReciveMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PubReciveMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PubReciveMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PubReciveMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PubReciveMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PubReciveMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PubReciveMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PubReciveMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PubReciveMessage MakeReadOnly() {
      msg_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PubReciveMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PubReciveMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PubReciveMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PubReciveMessage result;
      
      private PubReciveMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          PubReciveMessage original = result;
          result = new PubReciveMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PubReciveMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.PubReciveMessage.Descriptor; }
      }
      
      public override PubReciveMessage DefaultInstanceForType {
        get { return global::QQServer.PubReciveMessage.DefaultInstance; }
      }
      
      public override PubReciveMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PubReciveMessage) {
          return MergeFrom((PubReciveMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PubReciveMessage other) {
        if (other == global::QQServer.PubReciveMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFromUin) {
          FromUin = other.FromUin;
        }
        if (other.HasFromName) {
          FromName = other.FromName;
        }
        if (other.HasToUin) {
          ToUin = other.ToUin;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasTime) {
          Time = other.Time;
        }
        if (other.msg_.Count != 0) {
          result.msg_.Add(other.msg_);
        }
        if (other.HasLastReadTime) {
          LastReadTime = other.LastReadTime;
        }
        if (other.HasSerNum) {
          SerNum = other.SerNum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pubReciveMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pubReciveMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFromUin = input.ReadString(ref result.fromUin_);
              break;
            }
            case 18: {
              result.hasFromName = input.ReadString(ref result.fromName_);
              break;
            }
            case 26: {
              result.hasToUin = input.ReadString(ref result.toUin_);
              break;
            }
            case 32: {
              result.hasType = input.ReadInt32(ref result.type_);
              break;
            }
            case 40: {
              result.hasTime = input.ReadInt64(ref result.time_);
              break;
            }
            case 50: {
              input.ReadMessageArray(tag, field_name, result.msg_, global::QQServer.QQMessage.DefaultInstance, extensionRegistry);
              break;
            }
            case 56: {
              result.hasLastReadTime = input.ReadInt64(ref result.lastReadTime_);
              break;
            }
            case 64: {
              result.hasSerNum = input.ReadInt64(ref result.serNum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFromUin {
        get { return result.hasFromUin; }
      }
      public string FromUin {
        get { return result.FromUin; }
        set { SetFromUin(value); }
      }
      public Builder SetFromUin(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFromUin = true;
        result.fromUin_ = value;
        return this;
      }
      public Builder ClearFromUin() {
        PrepareBuilder();
        result.hasFromUin = false;
        result.fromUin_ = "";
        return this;
      }
      
      public bool HasFromName {
        get { return result.hasFromName; }
      }
      public string FromName {
        get { return result.FromName; }
        set { SetFromName(value); }
      }
      public Builder SetFromName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFromName = true;
        result.fromName_ = value;
        return this;
      }
      public Builder ClearFromName() {
        PrepareBuilder();
        result.hasFromName = false;
        result.fromName_ = "";
        return this;
      }
      
      public bool HasToUin {
        get { return result.hasToUin; }
      }
      public string ToUin {
        get { return result.ToUin; }
        set { SetToUin(value); }
      }
      public Builder SetToUin(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToUin = true;
        result.toUin_ = value;
        return this;
      }
      public Builder ClearToUin() {
        PrepareBuilder();
        result.hasToUin = false;
        result.toUin_ = "";
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      public int Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(int value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      public bool HasTime {
        get { return result.hasTime; }
      }
      public long Time {
        get { return result.Time; }
        set { SetTime(value); }
      }
      public Builder SetTime(long value) {
        PrepareBuilder();
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder ClearTime() {
        PrepareBuilder();
        result.hasTime = false;
        result.time_ = 0L;
        return this;
      }
      
      public pbc::IPopsicleList<global::QQServer.QQMessage> MsgList {
        get { return PrepareBuilder().msg_; }
      }
      public int MsgCount {
        get { return result.MsgCount; }
      }
      public global::QQServer.QQMessage GetMsg(int index) {
        return result.GetMsg(index);
      }
      public Builder SetMsg(int index, global::QQServer.QQMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.msg_[index] = value;
        return this;
      }
      public Builder SetMsg(int index, global::QQServer.QQMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.msg_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMsg(global::QQServer.QQMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.msg_.Add(value);
        return this;
      }
      public Builder AddMsg(global::QQServer.QQMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.msg_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMsg(scg::IEnumerable<global::QQServer.QQMessage> values) {
        PrepareBuilder();
        result.msg_.Add(values);
        return this;
      }
      public Builder ClearMsg() {
        PrepareBuilder();
        result.msg_.Clear();
        return this;
      }
      
      public bool HasLastReadTime {
        get { return result.hasLastReadTime; }
      }
      public long LastReadTime {
        get { return result.LastReadTime; }
        set { SetLastReadTime(value); }
      }
      public Builder SetLastReadTime(long value) {
        PrepareBuilder();
        result.hasLastReadTime = true;
        result.lastReadTime_ = value;
        return this;
      }
      public Builder ClearLastReadTime() {
        PrepareBuilder();
        result.hasLastReadTime = false;
        result.lastReadTime_ = 0L;
        return this;
      }
      
      public bool HasSerNum {
        get { return result.hasSerNum; }
      }
      public long SerNum {
        get { return result.SerNum; }
        set { SetSerNum(value); }
      }
      public Builder SetSerNum(long value) {
        PrepareBuilder();
        result.hasSerNum = true;
        result.serNum_ = value;
        return this;
      }
      public Builder ClearSerNum() {
        PrepareBuilder();
        result.hasSerNum = false;
        result.serNum_ = 0L;
        return this;
      }
    }
    static PubReciveMessage() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PubConversation : pb::GeneratedMessage<PubConversation, PubConversation.Builder> {
    private PubConversation() { }
    private static readonly PubConversation defaultInstance = new PubConversation().MakeReadOnly();
    private static readonly string[] _pubConversationFieldNames = new string[] { "endNum", "msgList", "newMsgNum", "startNum", "type", "uin" };
    private static readonly uint[] _pubConversationFieldTags = new uint[] { 48, 26, 32, 40, 8, 18 };
    public static PubConversation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PubConversation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PubConversation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_PubConversation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PubConversation, PubConversation.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_PubConversation__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private int type_;
    public bool HasType {
      get { return hasType; }
    }
    public int Type {
      get { return type_; }
    }
    
    public const int UinFieldNumber = 2;
    private bool hasUin;
    private string uin_ = "";
    public bool HasUin {
      get { return hasUin; }
    }
    public string Uin {
      get { return uin_; }
    }
    
    public const int MsgListFieldNumber = 3;
    private pbc::PopsicleList<global::QQServer.PubReciveMessage> msgList_ = new pbc::PopsicleList<global::QQServer.PubReciveMessage>();
    public scg::IList<global::QQServer.PubReciveMessage> MsgListList {
      get { return msgList_; }
    }
    public int MsgListCount {
      get { return msgList_.Count; }
    }
    public global::QQServer.PubReciveMessage GetMsgList(int index) {
      return msgList_[index];
    }
    
    public const int NewMsgNumFieldNumber = 4;
    private bool hasNewMsgNum;
    private int newMsgNum_;
    public bool HasNewMsgNum {
      get { return hasNewMsgNum; }
    }
    public int NewMsgNum {
      get { return newMsgNum_; }
    }
    
    public const int StartNumFieldNumber = 5;
    private bool hasStartNum;
    private long startNum_;
    public bool HasStartNum {
      get { return hasStartNum; }
    }
    public long StartNum {
      get { return startNum_; }
    }
    
    public const int EndNumFieldNumber = 6;
    private bool hasEndNum;
    private long endNum_;
    public bool HasEndNum {
      get { return hasEndNum; }
    }
    public long EndNum {
      get { return endNum_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        if (!hasUin) return false;
        if (!hasNewMsgNum) return false;
        foreach (global::QQServer.PubReciveMessage element in MsgListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _pubConversationFieldNames;
      if (hasType) {
        output.WriteInt32(1, field_names[4], Type);
      }
      if (hasUin) {
        output.WriteString(2, field_names[5], Uin);
      }
      if (msgList_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], msgList_);
      }
      if (hasNewMsgNum) {
        output.WriteInt32(4, field_names[2], NewMsgNum);
      }
      if (hasStartNum) {
        output.WriteInt64(5, field_names[3], StartNum);
      }
      if (hasEndNum) {
        output.WriteInt64(6, field_names[0], EndNum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Type);
      }
      if (hasUin) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Uin);
      }
      foreach (global::QQServer.PubReciveMessage element in MsgListList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      if (hasNewMsgNum) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, NewMsgNum);
      }
      if (hasStartNum) {
        size += pb::CodedOutputStream.ComputeInt64Size(5, StartNum);
      }
      if (hasEndNum) {
        size += pb::CodedOutputStream.ComputeInt64Size(6, EndNum);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PubConversation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PubConversation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PubConversation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PubConversation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PubConversation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PubConversation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PubConversation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PubConversation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PubConversation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PubConversation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PubConversation MakeReadOnly() {
      msgList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PubConversation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PubConversation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PubConversation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PubConversation result;
      
      private PubConversation PrepareBuilder() {
        if (resultIsReadOnly) {
          PubConversation original = result;
          result = new PubConversation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PubConversation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.PubConversation.Descriptor; }
      }
      
      public override PubConversation DefaultInstanceForType {
        get { return global::QQServer.PubConversation.DefaultInstance; }
      }
      
      public override PubConversation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PubConversation) {
          return MergeFrom((PubConversation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PubConversation other) {
        if (other == global::QQServer.PubConversation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasUin) {
          Uin = other.Uin;
        }
        if (other.msgList_.Count != 0) {
          result.msgList_.Add(other.msgList_);
        }
        if (other.HasNewMsgNum) {
          NewMsgNum = other.NewMsgNum;
        }
        if (other.HasStartNum) {
          StartNum = other.StartNum;
        }
        if (other.HasEndNum) {
          EndNum = other.EndNum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pubConversationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pubConversationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasType = input.ReadInt32(ref result.type_);
              break;
            }
            case 18: {
              result.hasUin = input.ReadString(ref result.uin_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.msgList_, global::QQServer.PubReciveMessage.DefaultInstance, extensionRegistry);
              break;
            }
            case 32: {
              result.hasNewMsgNum = input.ReadInt32(ref result.newMsgNum_);
              break;
            }
            case 40: {
              result.hasStartNum = input.ReadInt64(ref result.startNum_);
              break;
            }
            case 48: {
              result.hasEndNum = input.ReadInt64(ref result.endNum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
        get { return result.hasType; }
      }
      public int Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(int value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      public bool HasUin {
        get { return result.hasUin; }
      }
      public string Uin {
        get { return result.Uin; }
        set { SetUin(value); }
      }
      public Builder SetUin(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUin = true;
        result.uin_ = value;
        return this;
      }
      public Builder ClearUin() {
        PrepareBuilder();
        result.hasUin = false;
        result.uin_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::QQServer.PubReciveMessage> MsgListList {
        get { return PrepareBuilder().msgList_; }
      }
      public int MsgListCount {
        get { return result.MsgListCount; }
      }
      public global::QQServer.PubReciveMessage GetMsgList(int index) {
        return result.GetMsgList(index);
      }
      public Builder SetMsgList(int index, global::QQServer.PubReciveMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.msgList_[index] = value;
        return this;
      }
      public Builder SetMsgList(int index, global::QQServer.PubReciveMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.msgList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMsgList(global::QQServer.PubReciveMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.msgList_.Add(value);
        return this;
      }
      public Builder AddMsgList(global::QQServer.PubReciveMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.msgList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMsgList(scg::IEnumerable<global::QQServer.PubReciveMessage> values) {
        PrepareBuilder();
        result.msgList_.Add(values);
        return this;
      }
      public Builder ClearMsgList() {
        PrepareBuilder();
        result.msgList_.Clear();
        return this;
      }
      
      public bool HasNewMsgNum {
        get { return result.hasNewMsgNum; }
      }
      public int NewMsgNum {
        get { return result.NewMsgNum; }
        set { SetNewMsgNum(value); }
      }
      public Builder SetNewMsgNum(int value) {
        PrepareBuilder();
        result.hasNewMsgNum = true;
        result.newMsgNum_ = value;
        return this;
      }
      public Builder ClearNewMsgNum() {
        PrepareBuilder();
        result.hasNewMsgNum = false;
        result.newMsgNum_ = 0;
        return this;
      }
      
      public bool HasStartNum {
        get { return result.hasStartNum; }
      }
      public long StartNum {
        get { return result.StartNum; }
        set { SetStartNum(value); }
      }
      public Builder SetStartNum(long value) {
        PrepareBuilder();
        result.hasStartNum = true;
        result.startNum_ = value;
        return this;
      }
      public Builder ClearStartNum() {
        PrepareBuilder();
        result.hasStartNum = false;
        result.startNum_ = 0L;
        return this;
      }
      
      public bool HasEndNum {
        get { return result.hasEndNum; }
      }
      public long EndNum {
        get { return result.EndNum; }
        set { SetEndNum(value); }
      }
      public Builder SetEndNum(long value) {
        PrepareBuilder();
        result.hasEndNum = true;
        result.endNum_ = value;
        return this;
      }
      public Builder ClearEndNum() {
        PrepareBuilder();
        result.hasEndNum = false;
        result.endNum_ = 0L;
        return this;
      }
    }
    static PubConversation() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LogOutReq : pb::GeneratedMessage<LogOutReq, LogOutReq.Builder> {
    private LogOutReq() { }
    private static readonly LogOutReq defaultInstance = new LogOutReq().MakeReadOnly();
    private static readonly string[] _logOutReqFieldNames = new string[] { "token" };
    private static readonly uint[] _logOutReqFieldTags = new uint[] { 10 };
    public static LogOutReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LogOutReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LogOutReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_LogOutReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LogOutReq, LogOutReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_LogOutReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _logOutReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[0], Token);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LogOutReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogOutReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogOutReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogOutReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogOutReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogOutReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LogOutReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LogOutReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LogOutReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogOutReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LogOutReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LogOutReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LogOutReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LogOutReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LogOutReq result;
      
      private LogOutReq PrepareBuilder() {
        if (resultIsReadOnly) {
          LogOutReq original = result;
          result = new LogOutReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LogOutReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.LogOutReq.Descriptor; }
      }
      
      public override LogOutReq DefaultInstanceForType {
        get { return global::QQServer.LogOutReq.DefaultInstance; }
      }
      
      public override LogOutReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LogOutReq) {
          return MergeFrom((LogOutReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LogOutReq other) {
        if (other == global::QQServer.LogOutReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_logOutReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _logOutReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
    }
    static LogOutReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LogOutRsp : pb::GeneratedMessage<LogOutRsp, LogOutRsp.Builder> {
    private LogOutRsp() { }
    private static readonly LogOutRsp defaultInstance = new LogOutRsp().MakeReadOnly();
    private static readonly string[] _logOutRspFieldNames = new string[] {  };
    private static readonly uint[] _logOutRspFieldTags = new uint[] {  };
    public static LogOutRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LogOutRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LogOutRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_LogOutRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LogOutRsp, LogOutRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_LogOutRsp__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _logOutRspFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LogOutRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogOutRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogOutRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogOutRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogOutRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogOutRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LogOutRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LogOutRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LogOutRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogOutRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LogOutRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LogOutRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LogOutRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LogOutRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LogOutRsp result;
      
      private LogOutRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          LogOutRsp original = result;
          result = new LogOutRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LogOutRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.LogOutRsp.Descriptor; }
      }
      
      public override LogOutRsp DefaultInstanceForType {
        get { return global::QQServer.LogOutRsp.DefaultInstance; }
      }
      
      public override LogOutRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LogOutRsp) {
          return MergeFrom((LogOutRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LogOutRsp other) {
        if (other == global::QQServer.LogOutRsp.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_logOutRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _logOutRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static LogOutRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ReciveDataReq : pb::GeneratedMessage<ReciveDataReq, ReciveDataReq.Builder> {
    private ReciveDataReq() { }
    private static readonly ReciveDataReq defaultInstance = new ReciveDataReq().MakeReadOnly();
    private static readonly string[] _reciveDataReqFieldNames = new string[] { "channel", "data", "token" };
    private static readonly uint[] _reciveDataReqFieldTags = new uint[] { 24, 18, 10 };
    public static ReciveDataReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReciveDataReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReciveDataReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_ReciveDataReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReciveDataReq, ReciveDataReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_ReciveDataReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public const int DataFieldNumber = 2;
    private bool hasData;
    private pb::ByteString data_ = pb::ByteString.Empty;
    public bool HasData {
      get { return hasData; }
    }
    public pb::ByteString Data {
      get { return data_; }
    }
    
    public const int ChannelFieldNumber = 3;
    private bool hasChannel;
    private int channel_;
    public bool HasChannel {
      get { return hasChannel; }
    }
    public int Channel {
      get { return channel_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        if (!hasData) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _reciveDataReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[2], Token);
      }
      if (hasData) {
        output.WriteBytes(2, field_names[1], Data);
      }
      if (hasChannel) {
        output.WriteInt32(3, field_names[0], Channel);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      if (hasData) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Data);
      }
      if (hasChannel) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Channel);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ReciveDataReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReciveDataReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReciveDataReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReciveDataReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReciveDataReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReciveDataReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReciveDataReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReciveDataReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReciveDataReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReciveDataReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReciveDataReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReciveDataReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ReciveDataReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReciveDataReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReciveDataReq result;
      
      private ReciveDataReq PrepareBuilder() {
        if (resultIsReadOnly) {
          ReciveDataReq original = result;
          result = new ReciveDataReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReciveDataReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.ReciveDataReq.Descriptor; }
      }
      
      public override ReciveDataReq DefaultInstanceForType {
        get { return global::QQServer.ReciveDataReq.DefaultInstance; }
      }
      
      public override ReciveDataReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReciveDataReq) {
          return MergeFrom((ReciveDataReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReciveDataReq other) {
        if (other == global::QQServer.ReciveDataReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasData) {
          Data = other.Data;
        }
        if (other.HasChannel) {
          Channel = other.Channel;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reciveDataReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reciveDataReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
            case 18: {
              result.hasData = input.ReadBytes(ref result.data_);
              break;
            }
            case 24: {
              result.hasChannel = input.ReadInt32(ref result.channel_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
      
      public bool HasData {
        get { return result.hasData; }
      }
      public pb::ByteString Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder ClearData() {
        PrepareBuilder();
        result.hasData = false;
        result.data_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasChannel {
        get { return result.hasChannel; }
      }
      public int Channel {
        get { return result.Channel; }
        set { SetChannel(value); }
      }
      public Builder SetChannel(int value) {
        PrepareBuilder();
        result.hasChannel = true;
        result.channel_ = value;
        return this;
      }
      public Builder ClearChannel() {
        PrepareBuilder();
        result.hasChannel = false;
        result.channel_ = 0;
        return this;
      }
    }
    static ReciveDataReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ReciveDataRsp : pb::GeneratedMessage<ReciveDataRsp, ReciveDataRsp.Builder> {
    private ReciveDataRsp() { }
    private static readonly ReciveDataRsp defaultInstance = new ReciveDataRsp().MakeReadOnly();
    private static readonly string[] _reciveDataRspFieldNames = new string[] { "errorCode" };
    private static readonly uint[] _reciveDataRspFieldTags = new uint[] { 8 };
    public static ReciveDataRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReciveDataRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReciveDataRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_ReciveDataRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReciveDataRsp, ReciveDataRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_ReciveDataRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _reciveDataRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ReciveDataRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReciveDataRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReciveDataRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReciveDataRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReciveDataRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReciveDataRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReciveDataRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReciveDataRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReciveDataRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReciveDataRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReciveDataRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReciveDataRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ReciveDataRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReciveDataRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReciveDataRsp result;
      
      private ReciveDataRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          ReciveDataRsp original = result;
          result = new ReciveDataRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReciveDataRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.ReciveDataRsp.Descriptor; }
      }
      
      public override ReciveDataRsp DefaultInstanceForType {
        get { return global::QQServer.ReciveDataRsp.DefaultInstance; }
      }
      
      public override ReciveDataRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReciveDataRsp) {
          return MergeFrom((ReciveDataRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReciveDataRsp other) {
        if (other == global::QQServer.ReciveDataRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reciveDataRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reciveDataRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
    }
    static ReciveDataRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ReConnectReq : pb::GeneratedMessage<ReConnectReq, ReConnectReq.Builder> {
    private ReConnectReq() { }
    private static readonly ReConnectReq defaultInstance = new ReConnectReq().MakeReadOnly();
    private static readonly string[] _reConnectReqFieldNames = new string[] { "token" };
    private static readonly uint[] _reConnectReqFieldTags = new uint[] { 10 };
    public static ReConnectReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReConnectReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReConnectReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_ReConnectReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReConnectReq, ReConnectReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_ReConnectReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _reConnectReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[0], Token);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ReConnectReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReConnectReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReConnectReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReConnectReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReConnectReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReConnectReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReConnectReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReConnectReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReConnectReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReConnectReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReConnectReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReConnectReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ReConnectReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReConnectReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReConnectReq result;
      
      private ReConnectReq PrepareBuilder() {
        if (resultIsReadOnly) {
          ReConnectReq original = result;
          result = new ReConnectReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReConnectReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.ReConnectReq.Descriptor; }
      }
      
      public override ReConnectReq DefaultInstanceForType {
        get { return global::QQServer.ReConnectReq.DefaultInstance; }
      }
      
      public override ReConnectReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReConnectReq) {
          return MergeFrom((ReConnectReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReConnectReq other) {
        if (other == global::QQServer.ReConnectReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reConnectReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reConnectReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
    }
    static ReConnectReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ReConnectRsp : pb::GeneratedMessage<ReConnectRsp, ReConnectRsp.Builder> {
    private ReConnectRsp() { }
    private static readonly ReConnectRsp defaultInstance = new ReConnectRsp().MakeReadOnly();
    private static readonly string[] _reConnectRspFieldNames = new string[] { "errorCode" };
    private static readonly uint[] _reConnectRspFieldTags = new uint[] { 8 };
    public static ReConnectRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReConnectRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReConnectRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_ReConnectRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReConnectRsp, ReConnectRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_ReConnectRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _reConnectRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ReConnectRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReConnectRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReConnectRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReConnectRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReConnectRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReConnectRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReConnectRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReConnectRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReConnectRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReConnectRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReConnectRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReConnectRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ReConnectRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReConnectRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReConnectRsp result;
      
      private ReConnectRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          ReConnectRsp original = result;
          result = new ReConnectRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReConnectRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.ReConnectRsp.Descriptor; }
      }
      
      public override ReConnectRsp DefaultInstanceForType {
        get { return global::QQServer.ReConnectRsp.DefaultInstance; }
      }
      
      public override ReConnectRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReConnectRsp) {
          return MergeFrom((ReConnectRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReConnectRsp other) {
        if (other == global::QQServer.ReConnectRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reConnectRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reConnectRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
    }
    static ReConnectRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PubDisconnect : pb::GeneratedMessage<PubDisconnect, PubDisconnect.Builder> {
    private PubDisconnect() { }
    private static readonly PubDisconnect defaultInstance = new PubDisconnect().MakeReadOnly();
    private static readonly string[] _pubDisconnectFieldNames = new string[] {  };
    private static readonly uint[] _pubDisconnectFieldTags = new uint[] {  };
    public static PubDisconnect DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PubDisconnect DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PubDisconnect ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_PubDisconnect__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PubDisconnect, PubDisconnect.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_PubDisconnect__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _pubDisconnectFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PubDisconnect ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PubDisconnect ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PubDisconnect ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PubDisconnect ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PubDisconnect ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PubDisconnect ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PubDisconnect ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PubDisconnect ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PubDisconnect ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PubDisconnect ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PubDisconnect MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PubDisconnect prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PubDisconnect, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PubDisconnect cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PubDisconnect result;
      
      private PubDisconnect PrepareBuilder() {
        if (resultIsReadOnly) {
          PubDisconnect original = result;
          result = new PubDisconnect();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PubDisconnect MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.PubDisconnect.Descriptor; }
      }
      
      public override PubDisconnect DefaultInstanceForType {
        get { return global::QQServer.PubDisconnect.DefaultInstance; }
      }
      
      public override PubDisconnect BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PubDisconnect) {
          return MergeFrom((PubDisconnect) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PubDisconnect other) {
        if (other == global::QQServer.PubDisconnect.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pubDisconnectFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pubDisconnectFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static PubDisconnect() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AddFriendReq : pb::GeneratedMessage<AddFriendReq, AddFriendReq.Builder> {
    private AddFriendReq() { }
    private static readonly AddFriendReq defaultInstance = new AddFriendReq().MakeReadOnly();
    private static readonly string[] _addFriendReqFieldNames = new string[] { "message", "number", "token" };
    private static readonly uint[] _addFriendReqFieldTags = new uint[] { 26, 18, 10 };
    public static AddFriendReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddFriendReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AddFriendReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_AddFriendReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddFriendReq, AddFriendReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_AddFriendReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public const int NumberFieldNumber = 2;
    private bool hasNumber;
    private string number_ = "";
    public bool HasNumber {
      get { return hasNumber; }
    }
    public string Number {
      get { return number_; }
    }
    
    public const int MessageFieldNumber = 3;
    private bool hasMessage;
    private string message_ = "";
    public bool HasMessage {
      get { return hasMessage; }
    }
    public string Message {
      get { return message_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        if (!hasNumber) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _addFriendReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[2], Token);
      }
      if (hasNumber) {
        output.WriteString(2, field_names[1], Number);
      }
      if (hasMessage) {
        output.WriteString(3, field_names[0], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      if (hasNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Number);
      }
      if (hasMessage) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Message);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AddFriendReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddFriendReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddFriendReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddFriendReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddFriendReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddFriendReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddFriendReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddFriendReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddFriendReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddFriendReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AddFriendReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddFriendReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AddFriendReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AddFriendReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AddFriendReq result;
      
      private AddFriendReq PrepareBuilder() {
        if (resultIsReadOnly) {
          AddFriendReq original = result;
          result = new AddFriendReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AddFriendReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.AddFriendReq.Descriptor; }
      }
      
      public override AddFriendReq DefaultInstanceForType {
        get { return global::QQServer.AddFriendReq.DefaultInstance; }
      }
      
      public override AddFriendReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddFriendReq) {
          return MergeFrom((AddFriendReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddFriendReq other) {
        if (other == global::QQServer.AddFriendReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasNumber) {
          Number = other.Number;
        }
        if (other.HasMessage) {
          Message = other.Message;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addFriendReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addFriendReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
            case 18: {
              result.hasNumber = input.ReadString(ref result.number_);
              break;
            }
            case 26: {
              result.hasMessage = input.ReadString(ref result.message_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
      
      public bool HasNumber {
        get { return result.hasNumber; }
      }
      public string Number {
        get { return result.Number; }
        set { SetNumber(value); }
      }
      public Builder SetNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNumber = true;
        result.number_ = value;
        return this;
      }
      public Builder ClearNumber() {
        PrepareBuilder();
        result.hasNumber = false;
        result.number_ = "";
        return this;
      }
      
      public bool HasMessage {
        get { return result.hasMessage; }
      }
      public string Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = "";
        return this;
      }
    }
    static AddFriendReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AddFriendRsp : pb::GeneratedMessage<AddFriendRsp, AddFriendRsp.Builder> {
    private AddFriendRsp() { }
    private static readonly AddFriendRsp defaultInstance = new AddFriendRsp().MakeReadOnly();
    private static readonly string[] _addFriendRspFieldNames = new string[] { "errorCode" };
    private static readonly uint[] _addFriendRspFieldTags = new uint[] { 8 };
    public static AddFriendRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddFriendRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AddFriendRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_AddFriendRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddFriendRsp, AddFriendRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_AddFriendRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _addFriendRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AddFriendRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddFriendRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddFriendRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddFriendRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddFriendRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddFriendRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddFriendRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddFriendRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddFriendRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddFriendRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AddFriendRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddFriendRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AddFriendRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AddFriendRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AddFriendRsp result;
      
      private AddFriendRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          AddFriendRsp original = result;
          result = new AddFriendRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AddFriendRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.AddFriendRsp.Descriptor; }
      }
      
      public override AddFriendRsp DefaultInstanceForType {
        get { return global::QQServer.AddFriendRsp.DefaultInstance; }
      }
      
      public override AddFriendRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddFriendRsp) {
          return MergeFrom((AddFriendRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddFriendRsp other) {
        if (other == global::QQServer.AddFriendRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addFriendRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addFriendRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
    }
    static AddFriendRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetChatHistoryMsgReq : pb::GeneratedMessage<GetChatHistoryMsgReq, GetChatHistoryMsgReq.Builder> {
    private GetChatHistoryMsgReq() { }
    private static readonly GetChatHistoryMsgReq defaultInstance = new GetChatHistoryMsgReq().MakeReadOnly();
    private static readonly string[] _getChatHistoryMsgReqFieldNames = new string[] { "lastTime", "limit", "random", "token", "uin" };
    private static readonly uint[] _getChatHistoryMsgReqFieldTags = new uint[] { 24, 32, 40, 10, 18 };
    public static GetChatHistoryMsgReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetChatHistoryMsgReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetChatHistoryMsgReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetChatHistoryMsgReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetChatHistoryMsgReq, GetChatHistoryMsgReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetChatHistoryMsgReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public const int UinFieldNumber = 2;
    private bool hasUin;
    private string uin_ = "";
    public bool HasUin {
      get { return hasUin; }
    }
    public string Uin {
      get { return uin_; }
    }
    
    public const int LastTimeFieldNumber = 3;
    private bool hasLastTime;
    private long lastTime_;
    public bool HasLastTime {
      get { return hasLastTime; }
    }
    public long LastTime {
      get { return lastTime_; }
    }
    
    public const int LimitFieldNumber = 4;
    private bool hasLimit;
    private int limit_;
    public bool HasLimit {
      get { return hasLimit; }
    }
    public int Limit {
      get { return limit_; }
    }
    
    public const int RandomFieldNumber = 5;
    private bool hasRandom;
    private long random_;
    public bool HasRandom {
      get { return hasRandom; }
    }
    public long Random {
      get { return random_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        if (!hasUin) return false;
        if (!hasLastTime) return false;
        if (!hasLimit) return false;
        if (!hasRandom) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getChatHistoryMsgReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[3], Token);
      }
      if (hasUin) {
        output.WriteString(2, field_names[4], Uin);
      }
      if (hasLastTime) {
        output.WriteInt64(3, field_names[0], LastTime);
      }
      if (hasLimit) {
        output.WriteInt32(4, field_names[1], Limit);
      }
      if (hasRandom) {
        output.WriteInt64(5, field_names[2], Random);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      if (hasUin) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Uin);
      }
      if (hasLastTime) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, LastTime);
      }
      if (hasLimit) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, Limit);
      }
      if (hasRandom) {
        size += pb::CodedOutputStream.ComputeInt64Size(5, Random);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetChatHistoryMsgReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChatHistoryMsgReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChatHistoryMsgReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChatHistoryMsgReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChatHistoryMsgReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChatHistoryMsgReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetChatHistoryMsgReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetChatHistoryMsgReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetChatHistoryMsgReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChatHistoryMsgReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetChatHistoryMsgReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetChatHistoryMsgReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetChatHistoryMsgReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetChatHistoryMsgReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetChatHistoryMsgReq result;
      
      private GetChatHistoryMsgReq PrepareBuilder() {
        if (resultIsReadOnly) {
          GetChatHistoryMsgReq original = result;
          result = new GetChatHistoryMsgReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetChatHistoryMsgReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GetChatHistoryMsgReq.Descriptor; }
      }
      
      public override GetChatHistoryMsgReq DefaultInstanceForType {
        get { return global::QQServer.GetChatHistoryMsgReq.DefaultInstance; }
      }
      
      public override GetChatHistoryMsgReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetChatHistoryMsgReq) {
          return MergeFrom((GetChatHistoryMsgReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetChatHistoryMsgReq other) {
        if (other == global::QQServer.GetChatHistoryMsgReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasUin) {
          Uin = other.Uin;
        }
        if (other.HasLastTime) {
          LastTime = other.LastTime;
        }
        if (other.HasLimit) {
          Limit = other.Limit;
        }
        if (other.HasRandom) {
          Random = other.Random;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getChatHistoryMsgReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getChatHistoryMsgReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
            case 18: {
              result.hasUin = input.ReadString(ref result.uin_);
              break;
            }
            case 24: {
              result.hasLastTime = input.ReadInt64(ref result.lastTime_);
              break;
            }
            case 32: {
              result.hasLimit = input.ReadInt32(ref result.limit_);
              break;
            }
            case 40: {
              result.hasRandom = input.ReadInt64(ref result.random_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
      
      public bool HasUin {
        get { return result.hasUin; }
      }
      public string Uin {
        get { return result.Uin; }
        set { SetUin(value); }
      }
      public Builder SetUin(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUin = true;
        result.uin_ = value;
        return this;
      }
      public Builder ClearUin() {
        PrepareBuilder();
        result.hasUin = false;
        result.uin_ = "";
        return this;
      }
      
      public bool HasLastTime {
        get { return result.hasLastTime; }
      }
      public long LastTime {
        get { return result.LastTime; }
        set { SetLastTime(value); }
      }
      public Builder SetLastTime(long value) {
        PrepareBuilder();
        result.hasLastTime = true;
        result.lastTime_ = value;
        return this;
      }
      public Builder ClearLastTime() {
        PrepareBuilder();
        result.hasLastTime = false;
        result.lastTime_ = 0L;
        return this;
      }
      
      public bool HasLimit {
        get { return result.hasLimit; }
      }
      public int Limit {
        get { return result.Limit; }
        set { SetLimit(value); }
      }
      public Builder SetLimit(int value) {
        PrepareBuilder();
        result.hasLimit = true;
        result.limit_ = value;
        return this;
      }
      public Builder ClearLimit() {
        PrepareBuilder();
        result.hasLimit = false;
        result.limit_ = 0;
        return this;
      }
      
      public bool HasRandom {
        get { return result.hasRandom; }
      }
      public long Random {
        get { return result.Random; }
        set { SetRandom(value); }
      }
      public Builder SetRandom(long value) {
        PrepareBuilder();
        result.hasRandom = true;
        result.random_ = value;
        return this;
      }
      public Builder ClearRandom() {
        PrepareBuilder();
        result.hasRandom = false;
        result.random_ = 0L;
        return this;
      }
    }
    static GetChatHistoryMsgReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetChatHistoryMsgRsp : pb::GeneratedMessage<GetChatHistoryMsgRsp, GetChatHistoryMsgRsp.Builder> {
    private GetChatHistoryMsgRsp() { }
    private static readonly GetChatHistoryMsgRsp defaultInstance = new GetChatHistoryMsgRsp().MakeReadOnly();
    private static readonly string[] _getChatHistoryMsgRspFieldNames = new string[] { "errorCode", "msgList", "random" };
    private static readonly uint[] _getChatHistoryMsgRspFieldTags = new uint[] { 8, 18, 24 };
    public static GetChatHistoryMsgRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetChatHistoryMsgRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetChatHistoryMsgRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetChatHistoryMsgRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetChatHistoryMsgRsp, GetChatHistoryMsgRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetChatHistoryMsgRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public const int MsgListFieldNumber = 2;
    private pbc::PopsicleList<global::QQServer.PubReciveMessage> msgList_ = new pbc::PopsicleList<global::QQServer.PubReciveMessage>();
    public scg::IList<global::QQServer.PubReciveMessage> MsgListList {
      get { return msgList_; }
    }
    public int MsgListCount {
      get { return msgList_.Count; }
    }
    public global::QQServer.PubReciveMessage GetMsgList(int index) {
      return msgList_[index];
    }
    
    public const int RandomFieldNumber = 3;
    private bool hasRandom;
    private long random_;
    public bool HasRandom {
      get { return hasRandom; }
    }
    public long Random {
      get { return random_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        foreach (global::QQServer.PubReciveMessage element in MsgListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getChatHistoryMsgRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      if (msgList_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], msgList_);
      }
      if (hasRandom) {
        output.WriteInt64(3, field_names[2], Random);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      foreach (global::QQServer.PubReciveMessage element in MsgListList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      if (hasRandom) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, Random);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetChatHistoryMsgRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChatHistoryMsgRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChatHistoryMsgRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChatHistoryMsgRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChatHistoryMsgRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChatHistoryMsgRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetChatHistoryMsgRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetChatHistoryMsgRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetChatHistoryMsgRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChatHistoryMsgRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetChatHistoryMsgRsp MakeReadOnly() {
      msgList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetChatHistoryMsgRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetChatHistoryMsgRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetChatHistoryMsgRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetChatHistoryMsgRsp result;
      
      private GetChatHistoryMsgRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          GetChatHistoryMsgRsp original = result;
          result = new GetChatHistoryMsgRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetChatHistoryMsgRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GetChatHistoryMsgRsp.Descriptor; }
      }
      
      public override GetChatHistoryMsgRsp DefaultInstanceForType {
        get { return global::QQServer.GetChatHistoryMsgRsp.DefaultInstance; }
      }
      
      public override GetChatHistoryMsgRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetChatHistoryMsgRsp) {
          return MergeFrom((GetChatHistoryMsgRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetChatHistoryMsgRsp other) {
        if (other == global::QQServer.GetChatHistoryMsgRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        if (other.msgList_.Count != 0) {
          result.msgList_.Add(other.msgList_);
        }
        if (other.HasRandom) {
          Random = other.Random;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getChatHistoryMsgRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getChatHistoryMsgRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.msgList_, global::QQServer.PubReciveMessage.DefaultInstance, extensionRegistry);
              break;
            }
            case 24: {
              result.hasRandom = input.ReadInt64(ref result.random_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::QQServer.PubReciveMessage> MsgListList {
        get { return PrepareBuilder().msgList_; }
      }
      public int MsgListCount {
        get { return result.MsgListCount; }
      }
      public global::QQServer.PubReciveMessage GetMsgList(int index) {
        return result.GetMsgList(index);
      }
      public Builder SetMsgList(int index, global::QQServer.PubReciveMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.msgList_[index] = value;
        return this;
      }
      public Builder SetMsgList(int index, global::QQServer.PubReciveMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.msgList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMsgList(global::QQServer.PubReciveMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.msgList_.Add(value);
        return this;
      }
      public Builder AddMsgList(global::QQServer.PubReciveMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.msgList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMsgList(scg::IEnumerable<global::QQServer.PubReciveMessage> values) {
        PrepareBuilder();
        result.msgList_.Add(values);
        return this;
      }
      public Builder ClearMsgList() {
        PrepareBuilder();
        result.msgList_.Clear();
        return this;
      }
      
      public bool HasRandom {
        get { return result.hasRandom; }
      }
      public long Random {
        get { return result.Random; }
        set { SetRandom(value); }
      }
      public Builder SetRandom(long value) {
        PrepareBuilder();
        result.hasRandom = true;
        result.random_ = value;
        return this;
      }
      public Builder ClearRandom() {
        PrepareBuilder();
        result.hasRandom = false;
        result.random_ = 0L;
        return this;
      }
    }
    static GetChatHistoryMsgRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetRoomHistoryMsgReq : pb::GeneratedMessage<GetRoomHistoryMsgReq, GetRoomHistoryMsgReq.Builder> {
    private GetRoomHistoryMsgReq() { }
    private static readonly GetRoomHistoryMsgReq defaultInstance = new GetRoomHistoryMsgReq().MakeReadOnly();
    private static readonly string[] _getRoomHistoryMsgReqFieldNames = new string[] { "endNum", "limit", "roomCode", "token" };
    private static readonly uint[] _getRoomHistoryMsgReqFieldTags = new uint[] { 24, 32, 18, 10 };
    public static GetRoomHistoryMsgReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetRoomHistoryMsgReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetRoomHistoryMsgReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetRoomHistoryMsgReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetRoomHistoryMsgReq, GetRoomHistoryMsgReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetRoomHistoryMsgReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public const int RoomCodeFieldNumber = 2;
    private bool hasRoomCode;
    private string roomCode_ = "";
    public bool HasRoomCode {
      get { return hasRoomCode; }
    }
    public string RoomCode {
      get { return roomCode_; }
    }
    
    public const int EndNumFieldNumber = 3;
    private bool hasEndNum;
    private long endNum_;
    public bool HasEndNum {
      get { return hasEndNum; }
    }
    public long EndNum {
      get { return endNum_; }
    }
    
    public const int LimitFieldNumber = 4;
    private bool hasLimit;
    private int limit_;
    public bool HasLimit {
      get { return hasLimit; }
    }
    public int Limit {
      get { return limit_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        if (!hasRoomCode) return false;
        if (!hasEndNum) return false;
        if (!hasLimit) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getRoomHistoryMsgReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[3], Token);
      }
      if (hasRoomCode) {
        output.WriteString(2, field_names[2], RoomCode);
      }
      if (hasEndNum) {
        output.WriteInt64(3, field_names[0], EndNum);
      }
      if (hasLimit) {
        output.WriteInt32(4, field_names[1], Limit);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      if (hasRoomCode) {
        size += pb::CodedOutputStream.ComputeStringSize(2, RoomCode);
      }
      if (hasEndNum) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, EndNum);
      }
      if (hasLimit) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, Limit);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetRoomHistoryMsgReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRoomHistoryMsgReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRoomHistoryMsgReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRoomHistoryMsgReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRoomHistoryMsgReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRoomHistoryMsgReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetRoomHistoryMsgReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetRoomHistoryMsgReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetRoomHistoryMsgReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRoomHistoryMsgReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetRoomHistoryMsgReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetRoomHistoryMsgReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetRoomHistoryMsgReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetRoomHistoryMsgReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetRoomHistoryMsgReq result;
      
      private GetRoomHistoryMsgReq PrepareBuilder() {
        if (resultIsReadOnly) {
          GetRoomHistoryMsgReq original = result;
          result = new GetRoomHistoryMsgReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetRoomHistoryMsgReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GetRoomHistoryMsgReq.Descriptor; }
      }
      
      public override GetRoomHistoryMsgReq DefaultInstanceForType {
        get { return global::QQServer.GetRoomHistoryMsgReq.DefaultInstance; }
      }
      
      public override GetRoomHistoryMsgReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetRoomHistoryMsgReq) {
          return MergeFrom((GetRoomHistoryMsgReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetRoomHistoryMsgReq other) {
        if (other == global::QQServer.GetRoomHistoryMsgReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasRoomCode) {
          RoomCode = other.RoomCode;
        }
        if (other.HasEndNum) {
          EndNum = other.EndNum;
        }
        if (other.HasLimit) {
          Limit = other.Limit;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getRoomHistoryMsgReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getRoomHistoryMsgReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
            case 18: {
              result.hasRoomCode = input.ReadString(ref result.roomCode_);
              break;
            }
            case 24: {
              result.hasEndNum = input.ReadInt64(ref result.endNum_);
              break;
            }
            case 32: {
              result.hasLimit = input.ReadInt32(ref result.limit_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
      
      public bool HasRoomCode {
        get { return result.hasRoomCode; }
      }
      public string RoomCode {
        get { return result.RoomCode; }
        set { SetRoomCode(value); }
      }
      public Builder SetRoomCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRoomCode = true;
        result.roomCode_ = value;
        return this;
      }
      public Builder ClearRoomCode() {
        PrepareBuilder();
        result.hasRoomCode = false;
        result.roomCode_ = "";
        return this;
      }
      
      public bool HasEndNum {
        get { return result.hasEndNum; }
      }
      public long EndNum {
        get { return result.EndNum; }
        set { SetEndNum(value); }
      }
      public Builder SetEndNum(long value) {
        PrepareBuilder();
        result.hasEndNum = true;
        result.endNum_ = value;
        return this;
      }
      public Builder ClearEndNum() {
        PrepareBuilder();
        result.hasEndNum = false;
        result.endNum_ = 0L;
        return this;
      }
      
      public bool HasLimit {
        get { return result.hasLimit; }
      }
      public int Limit {
        get { return result.Limit; }
        set { SetLimit(value); }
      }
      public Builder SetLimit(int value) {
        PrepareBuilder();
        result.hasLimit = true;
        result.limit_ = value;
        return this;
      }
      public Builder ClearLimit() {
        PrepareBuilder();
        result.hasLimit = false;
        result.limit_ = 0;
        return this;
      }
    }
    static GetRoomHistoryMsgReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetRoomHistoryMsgRsp : pb::GeneratedMessage<GetRoomHistoryMsgRsp, GetRoomHistoryMsgRsp.Builder> {
    private GetRoomHistoryMsgRsp() { }
    private static readonly GetRoomHistoryMsgRsp defaultInstance = new GetRoomHistoryMsgRsp().MakeReadOnly();
    private static readonly string[] _getRoomHistoryMsgRspFieldNames = new string[] { "endNum", "errorCode", "msgList", "startNum" };
    private static readonly uint[] _getRoomHistoryMsgRspFieldTags = new uint[] { 48, 8, 18, 40 };
    public static GetRoomHistoryMsgRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetRoomHistoryMsgRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetRoomHistoryMsgRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetRoomHistoryMsgRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetRoomHistoryMsgRsp, GetRoomHistoryMsgRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetRoomHistoryMsgRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public const int MsgListFieldNumber = 2;
    private pbc::PopsicleList<global::QQServer.PubReciveMessage> msgList_ = new pbc::PopsicleList<global::QQServer.PubReciveMessage>();
    public scg::IList<global::QQServer.PubReciveMessage> MsgListList {
      get { return msgList_; }
    }
    public int MsgListCount {
      get { return msgList_.Count; }
    }
    public global::QQServer.PubReciveMessage GetMsgList(int index) {
      return msgList_[index];
    }
    
    public const int StartNumFieldNumber = 5;
    private bool hasStartNum;
    private long startNum_;
    public bool HasStartNum {
      get { return hasStartNum; }
    }
    public long StartNum {
      get { return startNum_; }
    }
    
    public const int EndNumFieldNumber = 6;
    private bool hasEndNum;
    private long endNum_;
    public bool HasEndNum {
      get { return hasEndNum; }
    }
    public long EndNum {
      get { return endNum_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        foreach (global::QQServer.PubReciveMessage element in MsgListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getRoomHistoryMsgRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[1], ErrorCode);
      }
      if (msgList_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], msgList_);
      }
      if (hasStartNum) {
        output.WriteInt64(5, field_names[3], StartNum);
      }
      if (hasEndNum) {
        output.WriteInt64(6, field_names[0], EndNum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      foreach (global::QQServer.PubReciveMessage element in MsgListList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      if (hasStartNum) {
        size += pb::CodedOutputStream.ComputeInt64Size(5, StartNum);
      }
      if (hasEndNum) {
        size += pb::CodedOutputStream.ComputeInt64Size(6, EndNum);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetRoomHistoryMsgRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRoomHistoryMsgRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRoomHistoryMsgRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRoomHistoryMsgRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRoomHistoryMsgRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRoomHistoryMsgRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetRoomHistoryMsgRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetRoomHistoryMsgRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetRoomHistoryMsgRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRoomHistoryMsgRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetRoomHistoryMsgRsp MakeReadOnly() {
      msgList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetRoomHistoryMsgRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetRoomHistoryMsgRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetRoomHistoryMsgRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetRoomHistoryMsgRsp result;
      
      private GetRoomHistoryMsgRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          GetRoomHistoryMsgRsp original = result;
          result = new GetRoomHistoryMsgRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetRoomHistoryMsgRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GetRoomHistoryMsgRsp.Descriptor; }
      }
      
      public override GetRoomHistoryMsgRsp DefaultInstanceForType {
        get { return global::QQServer.GetRoomHistoryMsgRsp.DefaultInstance; }
      }
      
      public override GetRoomHistoryMsgRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetRoomHistoryMsgRsp) {
          return MergeFrom((GetRoomHistoryMsgRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetRoomHistoryMsgRsp other) {
        if (other == global::QQServer.GetRoomHistoryMsgRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        if (other.msgList_.Count != 0) {
          result.msgList_.Add(other.msgList_);
        }
        if (other.HasStartNum) {
          StartNum = other.StartNum;
        }
        if (other.HasEndNum) {
          EndNum = other.EndNum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getRoomHistoryMsgRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getRoomHistoryMsgRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.msgList_, global::QQServer.PubReciveMessage.DefaultInstance, extensionRegistry);
              break;
            }
            case 40: {
              result.hasStartNum = input.ReadInt64(ref result.startNum_);
              break;
            }
            case 48: {
              result.hasEndNum = input.ReadInt64(ref result.endNum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::QQServer.PubReciveMessage> MsgListList {
        get { return PrepareBuilder().msgList_; }
      }
      public int MsgListCount {
        get { return result.MsgListCount; }
      }
      public global::QQServer.PubReciveMessage GetMsgList(int index) {
        return result.GetMsgList(index);
      }
      public Builder SetMsgList(int index, global::QQServer.PubReciveMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.msgList_[index] = value;
        return this;
      }
      public Builder SetMsgList(int index, global::QQServer.PubReciveMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.msgList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMsgList(global::QQServer.PubReciveMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.msgList_.Add(value);
        return this;
      }
      public Builder AddMsgList(global::QQServer.PubReciveMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.msgList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMsgList(scg::IEnumerable<global::QQServer.PubReciveMessage> values) {
        PrepareBuilder();
        result.msgList_.Add(values);
        return this;
      }
      public Builder ClearMsgList() {
        PrepareBuilder();
        result.msgList_.Clear();
        return this;
      }
      
      public bool HasStartNum {
        get { return result.hasStartNum; }
      }
      public long StartNum {
        get { return result.StartNum; }
        set { SetStartNum(value); }
      }
      public Builder SetStartNum(long value) {
        PrepareBuilder();
        result.hasStartNum = true;
        result.startNum_ = value;
        return this;
      }
      public Builder ClearStartNum() {
        PrepareBuilder();
        result.hasStartNum = false;
        result.startNum_ = 0L;
        return this;
      }
      
      public bool HasEndNum {
        get { return result.hasEndNum; }
      }
      public long EndNum {
        get { return result.EndNum; }
        set { SetEndNum(value); }
      }
      public Builder SetEndNum(long value) {
        PrepareBuilder();
        result.hasEndNum = true;
        result.endNum_ = value;
        return this;
      }
      public Builder ClearEndNum() {
        PrepareBuilder();
        result.hasEndNum = false;
        result.endNum_ = 0L;
        return this;
      }
    }
    static GetRoomHistoryMsgRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetChatMsgReadReq : pb::GeneratedMessage<SetChatMsgReadReq, SetChatMsgReadReq.Builder> {
    private SetChatMsgReadReq() { }
    private static readonly SetChatMsgReadReq defaultInstance = new SetChatMsgReadReq().MakeReadOnly();
    private static readonly string[] _setChatMsgReadReqFieldNames = new string[] { "lastReadTime", "toUin", "token" };
    private static readonly uint[] _setChatMsgReadReqFieldTags = new uint[] { 24, 18, 10 };
    public static SetChatMsgReadReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetChatMsgReadReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetChatMsgReadReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_SetChatMsgReadReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetChatMsgReadReq, SetChatMsgReadReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_SetChatMsgReadReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public const int ToUinFieldNumber = 2;
    private bool hasToUin;
    private string toUin_ = "";
    public bool HasToUin {
      get { return hasToUin; }
    }
    public string ToUin {
      get { return toUin_; }
    }
    
    public const int LastReadTimeFieldNumber = 3;
    private bool hasLastReadTime;
    private long lastReadTime_;
    public bool HasLastReadTime {
      get { return hasLastReadTime; }
    }
    public long LastReadTime {
      get { return lastReadTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        if (!hasToUin) return false;
        if (!hasLastReadTime) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setChatMsgReadReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[2], Token);
      }
      if (hasToUin) {
        output.WriteString(2, field_names[1], ToUin);
      }
      if (hasLastReadTime) {
        output.WriteInt64(3, field_names[0], LastReadTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      if (hasToUin) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ToUin);
      }
      if (hasLastReadTime) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, LastReadTime);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetChatMsgReadReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetChatMsgReadReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetChatMsgReadReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetChatMsgReadReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetChatMsgReadReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetChatMsgReadReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetChatMsgReadReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetChatMsgReadReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetChatMsgReadReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetChatMsgReadReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetChatMsgReadReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetChatMsgReadReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetChatMsgReadReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetChatMsgReadReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetChatMsgReadReq result;
      
      private SetChatMsgReadReq PrepareBuilder() {
        if (resultIsReadOnly) {
          SetChatMsgReadReq original = result;
          result = new SetChatMsgReadReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetChatMsgReadReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.SetChatMsgReadReq.Descriptor; }
      }
      
      public override SetChatMsgReadReq DefaultInstanceForType {
        get { return global::QQServer.SetChatMsgReadReq.DefaultInstance; }
      }
      
      public override SetChatMsgReadReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetChatMsgReadReq) {
          return MergeFrom((SetChatMsgReadReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetChatMsgReadReq other) {
        if (other == global::QQServer.SetChatMsgReadReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasToUin) {
          ToUin = other.ToUin;
        }
        if (other.HasLastReadTime) {
          LastReadTime = other.LastReadTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setChatMsgReadReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setChatMsgReadReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
            case 18: {
              result.hasToUin = input.ReadString(ref result.toUin_);
              break;
            }
            case 24: {
              result.hasLastReadTime = input.ReadInt64(ref result.lastReadTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
      
      public bool HasToUin {
        get { return result.hasToUin; }
      }
      public string ToUin {
        get { return result.ToUin; }
        set { SetToUin(value); }
      }
      public Builder SetToUin(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToUin = true;
        result.toUin_ = value;
        return this;
      }
      public Builder ClearToUin() {
        PrepareBuilder();
        result.hasToUin = false;
        result.toUin_ = "";
        return this;
      }
      
      public bool HasLastReadTime {
        get { return result.hasLastReadTime; }
      }
      public long LastReadTime {
        get { return result.LastReadTime; }
        set { SetLastReadTime(value); }
      }
      public Builder SetLastReadTime(long value) {
        PrepareBuilder();
        result.hasLastReadTime = true;
        result.lastReadTime_ = value;
        return this;
      }
      public Builder ClearLastReadTime() {
        PrepareBuilder();
        result.hasLastReadTime = false;
        result.lastReadTime_ = 0L;
        return this;
      }
    }
    static SetChatMsgReadReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetChatMsgReadRsp : pb::GeneratedMessage<SetChatMsgReadRsp, SetChatMsgReadRsp.Builder> {
    private SetChatMsgReadRsp() { }
    private static readonly SetChatMsgReadRsp defaultInstance = new SetChatMsgReadRsp().MakeReadOnly();
    private static readonly string[] _setChatMsgReadRspFieldNames = new string[] { "errorCode" };
    private static readonly uint[] _setChatMsgReadRspFieldTags = new uint[] { 8 };
    public static SetChatMsgReadRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetChatMsgReadRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetChatMsgReadRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_SetChatMsgReadRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetChatMsgReadRsp, SetChatMsgReadRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_SetChatMsgReadRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setChatMsgReadRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetChatMsgReadRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetChatMsgReadRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetChatMsgReadRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetChatMsgReadRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetChatMsgReadRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetChatMsgReadRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetChatMsgReadRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetChatMsgReadRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetChatMsgReadRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetChatMsgReadRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetChatMsgReadRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetChatMsgReadRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetChatMsgReadRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetChatMsgReadRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetChatMsgReadRsp result;
      
      private SetChatMsgReadRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          SetChatMsgReadRsp original = result;
          result = new SetChatMsgReadRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetChatMsgReadRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.SetChatMsgReadRsp.Descriptor; }
      }
      
      public override SetChatMsgReadRsp DefaultInstanceForType {
        get { return global::QQServer.SetChatMsgReadRsp.DefaultInstance; }
      }
      
      public override SetChatMsgReadRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetChatMsgReadRsp) {
          return MergeFrom((SetChatMsgReadRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetChatMsgReadRsp other) {
        if (other == global::QQServer.SetChatMsgReadRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setChatMsgReadRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setChatMsgReadRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
    }
    static SetChatMsgReadRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetRoomMsgReadReq : pb::GeneratedMessage<SetRoomMsgReadReq, SetRoomMsgReadReq.Builder> {
    private SetRoomMsgReadReq() { }
    private static readonly SetRoomMsgReadReq defaultInstance = new SetRoomMsgReadReq().MakeReadOnly();
    private static readonly string[] _setRoomMsgReadReqFieldNames = new string[] { "roomCode", "serNum", "token" };
    private static readonly uint[] _setRoomMsgReadReqFieldTags = new uint[] { 18, 24, 10 };
    public static SetRoomMsgReadReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetRoomMsgReadReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetRoomMsgReadReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_SetRoomMsgReadReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetRoomMsgReadReq, SetRoomMsgReadReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_SetRoomMsgReadReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public const int RoomCodeFieldNumber = 2;
    private bool hasRoomCode;
    private string roomCode_ = "";
    public bool HasRoomCode {
      get { return hasRoomCode; }
    }
    public string RoomCode {
      get { return roomCode_; }
    }
    
    public const int SerNumFieldNumber = 3;
    private bool hasSerNum;
    private long serNum_;
    public bool HasSerNum {
      get { return hasSerNum; }
    }
    public long SerNum {
      get { return serNum_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        if (!hasRoomCode) return false;
        if (!hasSerNum) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setRoomMsgReadReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[2], Token);
      }
      if (hasRoomCode) {
        output.WriteString(2, field_names[0], RoomCode);
      }
      if (hasSerNum) {
        output.WriteInt64(3, field_names[1], SerNum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      if (hasRoomCode) {
        size += pb::CodedOutputStream.ComputeStringSize(2, RoomCode);
      }
      if (hasSerNum) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, SerNum);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetRoomMsgReadReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetRoomMsgReadReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetRoomMsgReadReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetRoomMsgReadReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetRoomMsgReadReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetRoomMsgReadReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetRoomMsgReadReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetRoomMsgReadReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetRoomMsgReadReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetRoomMsgReadReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetRoomMsgReadReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetRoomMsgReadReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetRoomMsgReadReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetRoomMsgReadReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetRoomMsgReadReq result;
      
      private SetRoomMsgReadReq PrepareBuilder() {
        if (resultIsReadOnly) {
          SetRoomMsgReadReq original = result;
          result = new SetRoomMsgReadReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetRoomMsgReadReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.SetRoomMsgReadReq.Descriptor; }
      }
      
      public override SetRoomMsgReadReq DefaultInstanceForType {
        get { return global::QQServer.SetRoomMsgReadReq.DefaultInstance; }
      }
      
      public override SetRoomMsgReadReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetRoomMsgReadReq) {
          return MergeFrom((SetRoomMsgReadReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetRoomMsgReadReq other) {
        if (other == global::QQServer.SetRoomMsgReadReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasRoomCode) {
          RoomCode = other.RoomCode;
        }
        if (other.HasSerNum) {
          SerNum = other.SerNum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setRoomMsgReadReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setRoomMsgReadReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
            case 18: {
              result.hasRoomCode = input.ReadString(ref result.roomCode_);
              break;
            }
            case 24: {
              result.hasSerNum = input.ReadInt64(ref result.serNum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
      
      public bool HasRoomCode {
        get { return result.hasRoomCode; }
      }
      public string RoomCode {
        get { return result.RoomCode; }
        set { SetRoomCode(value); }
      }
      public Builder SetRoomCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRoomCode = true;
        result.roomCode_ = value;
        return this;
      }
      public Builder ClearRoomCode() {
        PrepareBuilder();
        result.hasRoomCode = false;
        result.roomCode_ = "";
        return this;
      }
      
      public bool HasSerNum {
        get { return result.hasSerNum; }
      }
      public long SerNum {
        get { return result.SerNum; }
        set { SetSerNum(value); }
      }
      public Builder SetSerNum(long value) {
        PrepareBuilder();
        result.hasSerNum = true;
        result.serNum_ = value;
        return this;
      }
      public Builder ClearSerNum() {
        PrepareBuilder();
        result.hasSerNum = false;
        result.serNum_ = 0L;
        return this;
      }
    }
    static SetRoomMsgReadReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetRoomMsgReadRsp : pb::GeneratedMessage<SetRoomMsgReadRsp, SetRoomMsgReadRsp.Builder> {
    private SetRoomMsgReadRsp() { }
    private static readonly SetRoomMsgReadRsp defaultInstance = new SetRoomMsgReadRsp().MakeReadOnly();
    private static readonly string[] _setRoomMsgReadRspFieldNames = new string[] { "errorCode" };
    private static readonly uint[] _setRoomMsgReadRspFieldTags = new uint[] { 8 };
    public static SetRoomMsgReadRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetRoomMsgReadRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetRoomMsgReadRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_SetRoomMsgReadRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetRoomMsgReadRsp, SetRoomMsgReadRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_SetRoomMsgReadRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setRoomMsgReadRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetRoomMsgReadRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetRoomMsgReadRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetRoomMsgReadRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetRoomMsgReadRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetRoomMsgReadRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetRoomMsgReadRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetRoomMsgReadRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetRoomMsgReadRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetRoomMsgReadRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetRoomMsgReadRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetRoomMsgReadRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetRoomMsgReadRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetRoomMsgReadRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetRoomMsgReadRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetRoomMsgReadRsp result;
      
      private SetRoomMsgReadRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          SetRoomMsgReadRsp original = result;
          result = new SetRoomMsgReadRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetRoomMsgReadRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.SetRoomMsgReadRsp.Descriptor; }
      }
      
      public override SetRoomMsgReadRsp DefaultInstanceForType {
        get { return global::QQServer.SetRoomMsgReadRsp.DefaultInstance; }
      }
      
      public override SetRoomMsgReadRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetRoomMsgReadRsp) {
          return MergeFrom((SetRoomMsgReadRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetRoomMsgReadRsp other) {
        if (other == global::QQServer.SetRoomMsgReadRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setRoomMsgReadRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setRoomMsgReadRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
    }
    static SetRoomMsgReadRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ReSubscribeReq : pb::GeneratedMessage<ReSubscribeReq, ReSubscribeReq.Builder> {
    private ReSubscribeReq() { }
    private static readonly ReSubscribeReq defaultInstance = new ReSubscribeReq().MakeReadOnly();
    private static readonly string[] _reSubscribeReqFieldNames = new string[] { "token" };
    private static readonly uint[] _reSubscribeReqFieldTags = new uint[] { 10 };
    public static ReSubscribeReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReSubscribeReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReSubscribeReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_ReSubscribeReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReSubscribeReq, ReSubscribeReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_ReSubscribeReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _reSubscribeReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[0], Token);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ReSubscribeReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReSubscribeReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReSubscribeReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReSubscribeReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReSubscribeReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReSubscribeReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReSubscribeReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReSubscribeReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReSubscribeReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReSubscribeReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReSubscribeReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReSubscribeReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ReSubscribeReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReSubscribeReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReSubscribeReq result;
      
      private ReSubscribeReq PrepareBuilder() {
        if (resultIsReadOnly) {
          ReSubscribeReq original = result;
          result = new ReSubscribeReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReSubscribeReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.ReSubscribeReq.Descriptor; }
      }
      
      public override ReSubscribeReq DefaultInstanceForType {
        get { return global::QQServer.ReSubscribeReq.DefaultInstance; }
      }
      
      public override ReSubscribeReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReSubscribeReq) {
          return MergeFrom((ReSubscribeReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReSubscribeReq other) {
        if (other == global::QQServer.ReSubscribeReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reSubscribeReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reSubscribeReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
    }
    static ReSubscribeReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ReSubscribeRsp : pb::GeneratedMessage<ReSubscribeRsp, ReSubscribeRsp.Builder> {
    private ReSubscribeRsp() { }
    private static readonly ReSubscribeRsp defaultInstance = new ReSubscribeRsp().MakeReadOnly();
    private static readonly string[] _reSubscribeRspFieldNames = new string[] { "errorCode" };
    private static readonly uint[] _reSubscribeRspFieldTags = new uint[] { 8 };
    public static ReSubscribeRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReSubscribeRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReSubscribeRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_ReSubscribeRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReSubscribeRsp, ReSubscribeRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_ReSubscribeRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _reSubscribeRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ReSubscribeRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReSubscribeRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReSubscribeRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReSubscribeRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReSubscribeRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReSubscribeRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReSubscribeRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReSubscribeRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReSubscribeRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReSubscribeRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReSubscribeRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReSubscribeRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ReSubscribeRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReSubscribeRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReSubscribeRsp result;
      
      private ReSubscribeRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          ReSubscribeRsp original = result;
          result = new ReSubscribeRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReSubscribeRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.ReSubscribeRsp.Descriptor; }
      }
      
      public override ReSubscribeRsp DefaultInstanceForType {
        get { return global::QQServer.ReSubscribeRsp.DefaultInstance; }
      }
      
      public override ReSubscribeRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReSubscribeRsp) {
          return MergeFrom((ReSubscribeRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReSubscribeRsp other) {
        if (other == global::QQServer.ReSubscribeRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reSubscribeRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reSubscribeRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
    }
    static ReSubscribeRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetMyUserInfoReq : pb::GeneratedMessage<GetMyUserInfoReq, GetMyUserInfoReq.Builder> {
    private GetMyUserInfoReq() { }
    private static readonly GetMyUserInfoReq defaultInstance = new GetMyUserInfoReq().MakeReadOnly();
    private static readonly string[] _getMyUserInfoReqFieldNames = new string[] { "token" };
    private static readonly uint[] _getMyUserInfoReqFieldTags = new uint[] { 10 };
    public static GetMyUserInfoReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetMyUserInfoReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetMyUserInfoReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetMyUserInfoReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetMyUserInfoReq, GetMyUserInfoReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetMyUserInfoReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getMyUserInfoReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[0], Token);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetMyUserInfoReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetMyUserInfoReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetMyUserInfoReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetMyUserInfoReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetMyUserInfoReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetMyUserInfoReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetMyUserInfoReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetMyUserInfoReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetMyUserInfoReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetMyUserInfoReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetMyUserInfoReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetMyUserInfoReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetMyUserInfoReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetMyUserInfoReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetMyUserInfoReq result;
      
      private GetMyUserInfoReq PrepareBuilder() {
        if (resultIsReadOnly) {
          GetMyUserInfoReq original = result;
          result = new GetMyUserInfoReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetMyUserInfoReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GetMyUserInfoReq.Descriptor; }
      }
      
      public override GetMyUserInfoReq DefaultInstanceForType {
        get { return global::QQServer.GetMyUserInfoReq.DefaultInstance; }
      }
      
      public override GetMyUserInfoReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetMyUserInfoReq) {
          return MergeFrom((GetMyUserInfoReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetMyUserInfoReq other) {
        if (other == global::QQServer.GetMyUserInfoReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getMyUserInfoReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getMyUserInfoReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
    }
    static GetMyUserInfoReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetMyUserInfoRsp : pb::GeneratedMessage<GetMyUserInfoRsp, GetMyUserInfoRsp.Builder> {
    private GetMyUserInfoRsp() { }
    private static readonly GetMyUserInfoRsp defaultInstance = new GetMyUserInfoRsp().MakeReadOnly();
    private static readonly string[] _getMyUserInfoRspFieldNames = new string[] { "errorCode", "info" };
    private static readonly uint[] _getMyUserInfoRspFieldTags = new uint[] { 8, 18 };
    public static GetMyUserInfoRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetMyUserInfoRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetMyUserInfoRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetMyUserInfoRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetMyUserInfoRsp, GetMyUserInfoRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetMyUserInfoRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public const int InfoFieldNumber = 2;
    private bool hasInfo;
    private global::QQServer.UserInfo info_;
    public bool HasInfo {
      get { return hasInfo; }
    }
    public global::QQServer.UserInfo Info {
      get { return info_ ?? global::QQServer.UserInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        if (HasInfo) {
          if (!Info.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getMyUserInfoRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      if (hasInfo) {
        output.WriteMessage(2, field_names[1], Info);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      if (hasInfo) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Info);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetMyUserInfoRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetMyUserInfoRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetMyUserInfoRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetMyUserInfoRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetMyUserInfoRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetMyUserInfoRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetMyUserInfoRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetMyUserInfoRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetMyUserInfoRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetMyUserInfoRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetMyUserInfoRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetMyUserInfoRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetMyUserInfoRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetMyUserInfoRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetMyUserInfoRsp result;
      
      private GetMyUserInfoRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          GetMyUserInfoRsp original = result;
          result = new GetMyUserInfoRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetMyUserInfoRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GetMyUserInfoRsp.Descriptor; }
      }
      
      public override GetMyUserInfoRsp DefaultInstanceForType {
        get { return global::QQServer.GetMyUserInfoRsp.DefaultInstance; }
      }
      
      public override GetMyUserInfoRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetMyUserInfoRsp) {
          return MergeFrom((GetMyUserInfoRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetMyUserInfoRsp other) {
        if (other == global::QQServer.GetMyUserInfoRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        if (other.HasInfo) {
          MergeInfo(other.Info);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getMyUserInfoRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getMyUserInfoRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
            case 18: {
              global::QQServer.UserInfo.Builder subBuilder = global::QQServer.UserInfo.CreateBuilder();
              if (result.hasInfo) {
                subBuilder.MergeFrom(Info);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Info = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      public bool HasInfo {
       get { return result.hasInfo; }
      }
      public global::QQServer.UserInfo Info {
        get { return result.Info; }
        set { SetInfo(value); }
      }
      public Builder SetInfo(global::QQServer.UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInfo = true;
        result.info_ = value;
        return this;
      }
      public Builder SetInfo(global::QQServer.UserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInfo = true;
        result.info_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInfo(global::QQServer.UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInfo &&
            result.info_ != global::QQServer.UserInfo.DefaultInstance) {
            result.info_ = global::QQServer.UserInfo.CreateBuilder(result.info_).MergeFrom(value).BuildPartial();
        } else {
          result.info_ = value;
        }
        result.hasInfo = true;
        return this;
      }
      public Builder ClearInfo() {
        PrepareBuilder();
        result.hasInfo = false;
        result.info_ = null;
        return this;
      }
    }
    static GetMyUserInfoRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ImageDesc : pb::GeneratedMessage<ImageDesc, ImageDesc.Builder> {
    private ImageDesc() { }
    private static readonly ImageDesc defaultInstance = new ImageDesc().MakeReadOnly();
    private static readonly string[] _imageDescFieldNames = new string[] { "fileId", "file_len", "img_height", "img_md5", "img_width", "orig_url", "resId", "thumb_url", "type", "uuid" };
    private static readonly uint[] _imageDescFieldTags = new uint[] { 72, 48, 32, 58, 24, 18, 66, 10, 80, 42 };
    public static ImageDesc DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ImageDesc DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ImageDesc ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_ImageDesc__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ImageDesc, ImageDesc.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_ImageDesc__FieldAccessorTable; }
    }
    
    public const int ThumbUrlFieldNumber = 1;
    private bool hasThumbUrl;
    private string thumbUrl_ = "";
    public bool HasThumbUrl {
      get { return hasThumbUrl; }
    }
    public string ThumbUrl {
      get { return thumbUrl_; }
    }
    
    public const int OrigUrlFieldNumber = 2;
    private bool hasOrigUrl;
    private string origUrl_ = "";
    public bool HasOrigUrl {
      get { return hasOrigUrl; }
    }
    public string OrigUrl {
      get { return origUrl_; }
    }
    
    public const int ImgWidthFieldNumber = 3;
    private bool hasImgWidth;
    private int imgWidth_;
    public bool HasImgWidth {
      get { return hasImgWidth; }
    }
    public int ImgWidth {
      get { return imgWidth_; }
    }
    
    public const int ImgHeightFieldNumber = 4;
    private bool hasImgHeight;
    private int imgHeight_;
    public bool HasImgHeight {
      get { return hasImgHeight; }
    }
    public int ImgHeight {
      get { return imgHeight_; }
    }
    
    public const int UuidFieldNumber = 5;
    private bool hasUuid;
    private string uuid_ = "";
    public bool HasUuid {
      get { return hasUuid; }
    }
    public string Uuid {
      get { return uuid_; }
    }
    
    public const int FileLenFieldNumber = 6;
    private bool hasFileLen;
    private int fileLen_;
    public bool HasFileLen {
      get { return hasFileLen; }
    }
    public int FileLen {
      get { return fileLen_; }
    }
    
    public const int ImgMd5FieldNumber = 7;
    private bool hasImgMd5;
    private pb::ByteString imgMd5_ = pb::ByteString.Empty;
    public bool HasImgMd5 {
      get { return hasImgMd5; }
    }
    public pb::ByteString ImgMd5 {
      get { return imgMd5_; }
    }
    
    public const int ResIdFieldNumber = 8;
    private bool hasResId;
    private pb::ByteString resId_ = pb::ByteString.Empty;
    public bool HasResId {
      get { return hasResId; }
    }
    public pb::ByteString ResId {
      get { return resId_; }
    }
    
    public const int FileIdFieldNumber = 9;
    private bool hasFileId;
    private long fileId_;
    public bool HasFileId {
      get { return hasFileId; }
    }
    public long FileId {
      get { return fileId_; }
    }
    
    public const int TypeFieldNumber = 10;
    private bool hasType;
    private int type_;
    public bool HasType {
      get { return hasType; }
    }
    public int Type {
      get { return type_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _imageDescFieldNames;
      if (hasThumbUrl) {
        output.WriteString(1, field_names[7], ThumbUrl);
      }
      if (hasOrigUrl) {
        output.WriteString(2, field_names[5], OrigUrl);
      }
      if (hasImgWidth) {
        output.WriteInt32(3, field_names[4], ImgWidth);
      }
      if (hasImgHeight) {
        output.WriteInt32(4, field_names[2], ImgHeight);
      }
      if (hasUuid) {
        output.WriteString(5, field_names[9], Uuid);
      }
      if (hasFileLen) {
        output.WriteInt32(6, field_names[1], FileLen);
      }
      if (hasImgMd5) {
        output.WriteBytes(7, field_names[3], ImgMd5);
      }
      if (hasResId) {
        output.WriteBytes(8, field_names[6], ResId);
      }
      if (hasFileId) {
        output.WriteInt64(9, field_names[0], FileId);
      }
      if (hasType) {
        output.WriteInt32(10, field_names[8], Type);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasThumbUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(1, ThumbUrl);
      }
      if (hasOrigUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(2, OrigUrl);
      }
      if (hasImgWidth) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, ImgWidth);
      }
      if (hasImgHeight) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, ImgHeight);
      }
      if (hasUuid) {
        size += pb::CodedOutputStream.ComputeStringSize(5, Uuid);
      }
      if (hasFileLen) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, FileLen);
      }
      if (hasImgMd5) {
        size += pb::CodedOutputStream.ComputeBytesSize(7, ImgMd5);
      }
      if (hasResId) {
        size += pb::CodedOutputStream.ComputeBytesSize(8, ResId);
      }
      if (hasFileId) {
        size += pb::CodedOutputStream.ComputeInt64Size(9, FileId);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeInt32Size(10, Type);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ImageDesc ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ImageDesc ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ImageDesc ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ImageDesc ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ImageDesc ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ImageDesc ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ImageDesc ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ImageDesc ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ImageDesc ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ImageDesc ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ImageDesc MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ImageDesc prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ImageDesc, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ImageDesc cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ImageDesc result;
      
      private ImageDesc PrepareBuilder() {
        if (resultIsReadOnly) {
          ImageDesc original = result;
          result = new ImageDesc();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ImageDesc MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.ImageDesc.Descriptor; }
      }
      
      public override ImageDesc DefaultInstanceForType {
        get { return global::QQServer.ImageDesc.DefaultInstance; }
      }
      
      public override ImageDesc BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ImageDesc) {
          return MergeFrom((ImageDesc) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ImageDesc other) {
        if (other == global::QQServer.ImageDesc.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasThumbUrl) {
          ThumbUrl = other.ThumbUrl;
        }
        if (other.HasOrigUrl) {
          OrigUrl = other.OrigUrl;
        }
        if (other.HasImgWidth) {
          ImgWidth = other.ImgWidth;
        }
        if (other.HasImgHeight) {
          ImgHeight = other.ImgHeight;
        }
        if (other.HasUuid) {
          Uuid = other.Uuid;
        }
        if (other.HasFileLen) {
          FileLen = other.FileLen;
        }
        if (other.HasImgMd5) {
          ImgMd5 = other.ImgMd5;
        }
        if (other.HasResId) {
          ResId = other.ResId;
        }
        if (other.HasFileId) {
          FileId = other.FileId;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_imageDescFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _imageDescFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasThumbUrl = input.ReadString(ref result.thumbUrl_);
              break;
            }
            case 18: {
              result.hasOrigUrl = input.ReadString(ref result.origUrl_);
              break;
            }
            case 24: {
              result.hasImgWidth = input.ReadInt32(ref result.imgWidth_);
              break;
            }
            case 32: {
              result.hasImgHeight = input.ReadInt32(ref result.imgHeight_);
              break;
            }
            case 42: {
              result.hasUuid = input.ReadString(ref result.uuid_);
              break;
            }
            case 48: {
              result.hasFileLen = input.ReadInt32(ref result.fileLen_);
              break;
            }
            case 58: {
              result.hasImgMd5 = input.ReadBytes(ref result.imgMd5_);
              break;
            }
            case 66: {
              result.hasResId = input.ReadBytes(ref result.resId_);
              break;
            }
            case 72: {
              result.hasFileId = input.ReadInt64(ref result.fileId_);
              break;
            }
            case 80: {
              result.hasType = input.ReadInt32(ref result.type_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasThumbUrl {
        get { return result.hasThumbUrl; }
      }
      public string ThumbUrl {
        get { return result.ThumbUrl; }
        set { SetThumbUrl(value); }
      }
      public Builder SetThumbUrl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasThumbUrl = true;
        result.thumbUrl_ = value;
        return this;
      }
      public Builder ClearThumbUrl() {
        PrepareBuilder();
        result.hasThumbUrl = false;
        result.thumbUrl_ = "";
        return this;
      }
      
      public bool HasOrigUrl {
        get { return result.hasOrigUrl; }
      }
      public string OrigUrl {
        get { return result.OrigUrl; }
        set { SetOrigUrl(value); }
      }
      public Builder SetOrigUrl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrigUrl = true;
        result.origUrl_ = value;
        return this;
      }
      public Builder ClearOrigUrl() {
        PrepareBuilder();
        result.hasOrigUrl = false;
        result.origUrl_ = "";
        return this;
      }
      
      public bool HasImgWidth {
        get { return result.hasImgWidth; }
      }
      public int ImgWidth {
        get { return result.ImgWidth; }
        set { SetImgWidth(value); }
      }
      public Builder SetImgWidth(int value) {
        PrepareBuilder();
        result.hasImgWidth = true;
        result.imgWidth_ = value;
        return this;
      }
      public Builder ClearImgWidth() {
        PrepareBuilder();
        result.hasImgWidth = false;
        result.imgWidth_ = 0;
        return this;
      }
      
      public bool HasImgHeight {
        get { return result.hasImgHeight; }
      }
      public int ImgHeight {
        get { return result.ImgHeight; }
        set { SetImgHeight(value); }
      }
      public Builder SetImgHeight(int value) {
        PrepareBuilder();
        result.hasImgHeight = true;
        result.imgHeight_ = value;
        return this;
      }
      public Builder ClearImgHeight() {
        PrepareBuilder();
        result.hasImgHeight = false;
        result.imgHeight_ = 0;
        return this;
      }
      
      public bool HasUuid {
        get { return result.hasUuid; }
      }
      public string Uuid {
        get { return result.Uuid; }
        set { SetUuid(value); }
      }
      public Builder SetUuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUuid = true;
        result.uuid_ = value;
        return this;
      }
      public Builder ClearUuid() {
        PrepareBuilder();
        result.hasUuid = false;
        result.uuid_ = "";
        return this;
      }
      
      public bool HasFileLen {
        get { return result.hasFileLen; }
      }
      public int FileLen {
        get { return result.FileLen; }
        set { SetFileLen(value); }
      }
      public Builder SetFileLen(int value) {
        PrepareBuilder();
        result.hasFileLen = true;
        result.fileLen_ = value;
        return this;
      }
      public Builder ClearFileLen() {
        PrepareBuilder();
        result.hasFileLen = false;
        result.fileLen_ = 0;
        return this;
      }
      
      public bool HasImgMd5 {
        get { return result.hasImgMd5; }
      }
      public pb::ByteString ImgMd5 {
        get { return result.ImgMd5; }
        set { SetImgMd5(value); }
      }
      public Builder SetImgMd5(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasImgMd5 = true;
        result.imgMd5_ = value;
        return this;
      }
      public Builder ClearImgMd5() {
        PrepareBuilder();
        result.hasImgMd5 = false;
        result.imgMd5_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasResId {
        get { return result.hasResId; }
      }
      public pb::ByteString ResId {
        get { return result.ResId; }
        set { SetResId(value); }
      }
      public Builder SetResId(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResId = true;
        result.resId_ = value;
        return this;
      }
      public Builder ClearResId() {
        PrepareBuilder();
        result.hasResId = false;
        result.resId_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasFileId {
        get { return result.hasFileId; }
      }
      public long FileId {
        get { return result.FileId; }
        set { SetFileId(value); }
      }
      public Builder SetFileId(long value) {
        PrepareBuilder();
        result.hasFileId = true;
        result.fileId_ = value;
        return this;
      }
      public Builder ClearFileId() {
        PrepareBuilder();
        result.hasFileId = false;
        result.fileId_ = 0L;
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      public int Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(int value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
    }
    static ImageDesc() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetChatImagAddrReq : pb::GeneratedMessage<GetChatImagAddrReq, GetChatImagAddrReq.Builder> {
    private GetChatImagAddrReq() { }
    private static readonly GetChatImagAddrReq defaultInstance = new GetChatImagAddrReq().MakeReadOnly();
    private static readonly string[] _getChatImagAddrReqFieldNames = new string[] {  };
    private static readonly uint[] _getChatImagAddrReqFieldTags = new uint[] {  };
    public static GetChatImagAddrReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetChatImagAddrReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetChatImagAddrReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetChatImagAddrReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetChatImagAddrReq, GetChatImagAddrReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetChatImagAddrReq__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getChatImagAddrReqFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetChatImagAddrReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChatImagAddrReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChatImagAddrReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChatImagAddrReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChatImagAddrReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChatImagAddrReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetChatImagAddrReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetChatImagAddrReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetChatImagAddrReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChatImagAddrReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetChatImagAddrReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetChatImagAddrReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetChatImagAddrReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetChatImagAddrReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetChatImagAddrReq result;
      
      private GetChatImagAddrReq PrepareBuilder() {
        if (resultIsReadOnly) {
          GetChatImagAddrReq original = result;
          result = new GetChatImagAddrReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetChatImagAddrReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GetChatImagAddrReq.Descriptor; }
      }
      
      public override GetChatImagAddrReq DefaultInstanceForType {
        get { return global::QQServer.GetChatImagAddrReq.DefaultInstance; }
      }
      
      public override GetChatImagAddrReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetChatImagAddrReq) {
          return MergeFrom((GetChatImagAddrReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetChatImagAddrReq other) {
        if (other == global::QQServer.GetChatImagAddrReq.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getChatImagAddrReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getChatImagAddrReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static GetChatImagAddrReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetChatImagAddrRsp : pb::GeneratedMessage<GetChatImagAddrRsp, GetChatImagAddrRsp.Builder> {
    private GetChatImagAddrRsp() { }
    private static readonly GetChatImagAddrRsp defaultInstance = new GetChatImagAddrRsp().MakeReadOnly();
    private static readonly string[] _getChatImagAddrRspFieldNames = new string[] { "errorCode", "ip", "port" };
    private static readonly uint[] _getChatImagAddrRspFieldTags = new uint[] { 8, 18, 24 };
    public static GetChatImagAddrRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetChatImagAddrRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetChatImagAddrRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetChatImagAddrRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetChatImagAddrRsp, GetChatImagAddrRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetChatImagAddrRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public const int IpFieldNumber = 2;
    private bool hasIp;
    private string ip_ = "";
    public bool HasIp {
      get { return hasIp; }
    }
    public string Ip {
      get { return ip_; }
    }
    
    public const int PortFieldNumber = 3;
    private bool hasPort;
    private int port_;
    public bool HasPort {
      get { return hasPort; }
    }
    public int Port {
      get { return port_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getChatImagAddrRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      if (hasIp) {
        output.WriteString(2, field_names[1], Ip);
      }
      if (hasPort) {
        output.WriteInt32(3, field_names[2], Port);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      if (hasIp) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Ip);
      }
      if (hasPort) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Port);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetChatImagAddrRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChatImagAddrRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChatImagAddrRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChatImagAddrRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChatImagAddrRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChatImagAddrRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetChatImagAddrRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetChatImagAddrRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetChatImagAddrRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChatImagAddrRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetChatImagAddrRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetChatImagAddrRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetChatImagAddrRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetChatImagAddrRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetChatImagAddrRsp result;
      
      private GetChatImagAddrRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          GetChatImagAddrRsp original = result;
          result = new GetChatImagAddrRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetChatImagAddrRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GetChatImagAddrRsp.Descriptor; }
      }
      
      public override GetChatImagAddrRsp DefaultInstanceForType {
        get { return global::QQServer.GetChatImagAddrRsp.DefaultInstance; }
      }
      
      public override GetChatImagAddrRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetChatImagAddrRsp) {
          return MergeFrom((GetChatImagAddrRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetChatImagAddrRsp other) {
        if (other == global::QQServer.GetChatImagAddrRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        if (other.HasIp) {
          Ip = other.Ip;
        }
        if (other.HasPort) {
          Port = other.Port;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getChatImagAddrRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getChatImagAddrRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
            case 18: {
              result.hasIp = input.ReadString(ref result.ip_);
              break;
            }
            case 24: {
              result.hasPort = input.ReadInt32(ref result.port_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      public bool HasIp {
        get { return result.hasIp; }
      }
      public string Ip {
        get { return result.Ip; }
        set { SetIp(value); }
      }
      public Builder SetIp(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIp = true;
        result.ip_ = value;
        return this;
      }
      public Builder ClearIp() {
        PrepareBuilder();
        result.hasIp = false;
        result.ip_ = "";
        return this;
      }
      
      public bool HasPort {
        get { return result.hasPort; }
      }
      public int Port {
        get { return result.Port; }
        set { SetPort(value); }
      }
      public Builder SetPort(int value) {
        PrepareBuilder();
        result.hasPort = true;
        result.port_ = value;
        return this;
      }
      public Builder ClearPort() {
        PrepareBuilder();
        result.hasPort = false;
        result.port_ = 0;
        return this;
      }
    }
    static GetChatImagAddrRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetRoomImagResourcReq : pb::GeneratedMessage<GetRoomImagResourcReq, GetRoomImagResourcReq.Builder> {
    private GetRoomImagResourcReq() { }
    private static readonly GetRoomImagResourcReq defaultInstance = new GetRoomImagResourcReq().MakeReadOnly();
    private static readonly string[] _getRoomImagResourcReqFieldNames = new string[] { "height", "md5", "roomUin", "token", "totalSize", "type", "width" };
    private static readonly uint[] _getRoomImagResourcReqFieldTags = new uint[] { 48, 34, 18, 10, 24, 56, 40 };
    public static GetRoomImagResourcReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetRoomImagResourcReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetRoomImagResourcReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetRoomImagResourcReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetRoomImagResourcReq, GetRoomImagResourcReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetRoomImagResourcReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public const int RoomUinFieldNumber = 2;
    private bool hasRoomUin;
    private string roomUin_ = "";
    public bool HasRoomUin {
      get { return hasRoomUin; }
    }
    public string RoomUin {
      get { return roomUin_; }
    }
    
    public const int TotalSizeFieldNumber = 3;
    private bool hasTotalSize;
    private int totalSize_;
    public bool HasTotalSize {
      get { return hasTotalSize; }
    }
    public int TotalSize {
      get { return totalSize_; }
    }
    
    public const int Md5FieldNumber = 4;
    private bool hasMd5;
    private string md5_ = "";
    public bool HasMd5 {
      get { return hasMd5; }
    }
    public string Md5 {
      get { return md5_; }
    }
    
    public const int WidthFieldNumber = 5;
    private bool hasWidth;
    private int width_;
    public bool HasWidth {
      get { return hasWidth; }
    }
    public int Width {
      get { return width_; }
    }
    
    public const int HeightFieldNumber = 6;
    private bool hasHeight;
    private int height_;
    public bool HasHeight {
      get { return hasHeight; }
    }
    public int Height {
      get { return height_; }
    }
    
    public const int TypeFieldNumber = 7;
    private bool hasType;
    private int type_;
    public bool HasType {
      get { return hasType; }
    }
    public int Type {
      get { return type_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        if (!hasRoomUin) return false;
        if (!hasTotalSize) return false;
        if (!hasMd5) return false;
        if (!hasWidth) return false;
        if (!hasHeight) return false;
        if (!hasType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getRoomImagResourcReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[3], Token);
      }
      if (hasRoomUin) {
        output.WriteString(2, field_names[2], RoomUin);
      }
      if (hasTotalSize) {
        output.WriteInt32(3, field_names[4], TotalSize);
      }
      if (hasMd5) {
        output.WriteString(4, field_names[1], Md5);
      }
      if (hasWidth) {
        output.WriteInt32(5, field_names[6], Width);
      }
      if (hasHeight) {
        output.WriteInt32(6, field_names[0], Height);
      }
      if (hasType) {
        output.WriteInt32(7, field_names[5], Type);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      if (hasRoomUin) {
        size += pb::CodedOutputStream.ComputeStringSize(2, RoomUin);
      }
      if (hasTotalSize) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, TotalSize);
      }
      if (hasMd5) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Md5);
      }
      if (hasWidth) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, Width);
      }
      if (hasHeight) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, Height);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, Type);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetRoomImagResourcReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRoomImagResourcReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRoomImagResourcReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRoomImagResourcReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRoomImagResourcReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRoomImagResourcReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetRoomImagResourcReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetRoomImagResourcReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetRoomImagResourcReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRoomImagResourcReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetRoomImagResourcReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetRoomImagResourcReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetRoomImagResourcReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetRoomImagResourcReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetRoomImagResourcReq result;
      
      private GetRoomImagResourcReq PrepareBuilder() {
        if (resultIsReadOnly) {
          GetRoomImagResourcReq original = result;
          result = new GetRoomImagResourcReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetRoomImagResourcReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GetRoomImagResourcReq.Descriptor; }
      }
      
      public override GetRoomImagResourcReq DefaultInstanceForType {
        get { return global::QQServer.GetRoomImagResourcReq.DefaultInstance; }
      }
      
      public override GetRoomImagResourcReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetRoomImagResourcReq) {
          return MergeFrom((GetRoomImagResourcReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetRoomImagResourcReq other) {
        if (other == global::QQServer.GetRoomImagResourcReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasRoomUin) {
          RoomUin = other.RoomUin;
        }
        if (other.HasTotalSize) {
          TotalSize = other.TotalSize;
        }
        if (other.HasMd5) {
          Md5 = other.Md5;
        }
        if (other.HasWidth) {
          Width = other.Width;
        }
        if (other.HasHeight) {
          Height = other.Height;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getRoomImagResourcReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getRoomImagResourcReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
            case 18: {
              result.hasRoomUin = input.ReadString(ref result.roomUin_);
              break;
            }
            case 24: {
              result.hasTotalSize = input.ReadInt32(ref result.totalSize_);
              break;
            }
            case 34: {
              result.hasMd5 = input.ReadString(ref result.md5_);
              break;
            }
            case 40: {
              result.hasWidth = input.ReadInt32(ref result.width_);
              break;
            }
            case 48: {
              result.hasHeight = input.ReadInt32(ref result.height_);
              break;
            }
            case 56: {
              result.hasType = input.ReadInt32(ref result.type_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
      
      public bool HasRoomUin {
        get { return result.hasRoomUin; }
      }
      public string RoomUin {
        get { return result.RoomUin; }
        set { SetRoomUin(value); }
      }
      public Builder SetRoomUin(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRoomUin = true;
        result.roomUin_ = value;
        return this;
      }
      public Builder ClearRoomUin() {
        PrepareBuilder();
        result.hasRoomUin = false;
        result.roomUin_ = "";
        return this;
      }
      
      public bool HasTotalSize {
        get { return result.hasTotalSize; }
      }
      public int TotalSize {
        get { return result.TotalSize; }
        set { SetTotalSize(value); }
      }
      public Builder SetTotalSize(int value) {
        PrepareBuilder();
        result.hasTotalSize = true;
        result.totalSize_ = value;
        return this;
      }
      public Builder ClearTotalSize() {
        PrepareBuilder();
        result.hasTotalSize = false;
        result.totalSize_ = 0;
        return this;
      }
      
      public bool HasMd5 {
        get { return result.hasMd5; }
      }
      public string Md5 {
        get { return result.Md5; }
        set { SetMd5(value); }
      }
      public Builder SetMd5(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMd5 = true;
        result.md5_ = value;
        return this;
      }
      public Builder ClearMd5() {
        PrepareBuilder();
        result.hasMd5 = false;
        result.md5_ = "";
        return this;
      }
      
      public bool HasWidth {
        get { return result.hasWidth; }
      }
      public int Width {
        get { return result.Width; }
        set { SetWidth(value); }
      }
      public Builder SetWidth(int value) {
        PrepareBuilder();
        result.hasWidth = true;
        result.width_ = value;
        return this;
      }
      public Builder ClearWidth() {
        PrepareBuilder();
        result.hasWidth = false;
        result.width_ = 0;
        return this;
      }
      
      public bool HasHeight {
        get { return result.hasHeight; }
      }
      public int Height {
        get { return result.Height; }
        set { SetHeight(value); }
      }
      public Builder SetHeight(int value) {
        PrepareBuilder();
        result.hasHeight = true;
        result.height_ = value;
        return this;
      }
      public Builder ClearHeight() {
        PrepareBuilder();
        result.hasHeight = false;
        result.height_ = 0;
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      public int Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(int value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
    }
    static GetRoomImagResourcReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetRoomImagResourcRsp : pb::GeneratedMessage<GetRoomImagResourcRsp, GetRoomImagResourcRsp.Builder> {
    private GetRoomImagResourcRsp() { }
    private static readonly GetRoomImagResourcRsp defaultInstance = new GetRoomImagResourcRsp().MakeReadOnly();
    private static readonly string[] _getRoomImagResourcRspFieldNames = new string[] { "errorCode", "fileId", "httpUrl", "resId", "uuid" };
    private static readonly uint[] _getRoomImagResourcRspFieldTags = new uint[] { 8, 40, 18, 34, 26 };
    public static GetRoomImagResourcRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetRoomImagResourcRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetRoomImagResourcRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetRoomImagResourcRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetRoomImagResourcRsp, GetRoomImagResourcRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetRoomImagResourcRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public const int HttpUrlFieldNumber = 2;
    private bool hasHttpUrl;
    private string httpUrl_ = "";
    public bool HasHttpUrl {
      get { return hasHttpUrl; }
    }
    public string HttpUrl {
      get { return httpUrl_; }
    }
    
    public const int UuidFieldNumber = 3;
    private bool hasUuid;
    private string uuid_ = "";
    public bool HasUuid {
      get { return hasUuid; }
    }
    public string Uuid {
      get { return uuid_; }
    }
    
    public const int ResIdFieldNumber = 4;
    private bool hasResId;
    private pb::ByteString resId_ = pb::ByteString.Empty;
    public bool HasResId {
      get { return hasResId; }
    }
    public pb::ByteString ResId {
      get { return resId_; }
    }
    
    public const int FileIdFieldNumber = 5;
    private bool hasFileId;
    private long fileId_;
    public bool HasFileId {
      get { return hasFileId; }
    }
    public long FileId {
      get { return fileId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getRoomImagResourcRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      if (hasHttpUrl) {
        output.WriteString(2, field_names[2], HttpUrl);
      }
      if (hasUuid) {
        output.WriteString(3, field_names[4], Uuid);
      }
      if (hasResId) {
        output.WriteBytes(4, field_names[3], ResId);
      }
      if (hasFileId) {
        output.WriteInt64(5, field_names[1], FileId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      if (hasHttpUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(2, HttpUrl);
      }
      if (hasUuid) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Uuid);
      }
      if (hasResId) {
        size += pb::CodedOutputStream.ComputeBytesSize(4, ResId);
      }
      if (hasFileId) {
        size += pb::CodedOutputStream.ComputeInt64Size(5, FileId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetRoomImagResourcRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRoomImagResourcRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRoomImagResourcRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRoomImagResourcRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRoomImagResourcRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRoomImagResourcRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetRoomImagResourcRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetRoomImagResourcRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetRoomImagResourcRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRoomImagResourcRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetRoomImagResourcRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetRoomImagResourcRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetRoomImagResourcRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetRoomImagResourcRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetRoomImagResourcRsp result;
      
      private GetRoomImagResourcRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          GetRoomImagResourcRsp original = result;
          result = new GetRoomImagResourcRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetRoomImagResourcRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GetRoomImagResourcRsp.Descriptor; }
      }
      
      public override GetRoomImagResourcRsp DefaultInstanceForType {
        get { return global::QQServer.GetRoomImagResourcRsp.DefaultInstance; }
      }
      
      public override GetRoomImagResourcRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetRoomImagResourcRsp) {
          return MergeFrom((GetRoomImagResourcRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetRoomImagResourcRsp other) {
        if (other == global::QQServer.GetRoomImagResourcRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        if (other.HasHttpUrl) {
          HttpUrl = other.HttpUrl;
        }
        if (other.HasUuid) {
          Uuid = other.Uuid;
        }
        if (other.HasResId) {
          ResId = other.ResId;
        }
        if (other.HasFileId) {
          FileId = other.FileId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getRoomImagResourcRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getRoomImagResourcRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
            case 18: {
              result.hasHttpUrl = input.ReadString(ref result.httpUrl_);
              break;
            }
            case 26: {
              result.hasUuid = input.ReadString(ref result.uuid_);
              break;
            }
            case 34: {
              result.hasResId = input.ReadBytes(ref result.resId_);
              break;
            }
            case 40: {
              result.hasFileId = input.ReadInt64(ref result.fileId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      public bool HasHttpUrl {
        get { return result.hasHttpUrl; }
      }
      public string HttpUrl {
        get { return result.HttpUrl; }
        set { SetHttpUrl(value); }
      }
      public Builder SetHttpUrl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHttpUrl = true;
        result.httpUrl_ = value;
        return this;
      }
      public Builder ClearHttpUrl() {
        PrepareBuilder();
        result.hasHttpUrl = false;
        result.httpUrl_ = "";
        return this;
      }
      
      public bool HasUuid {
        get { return result.hasUuid; }
      }
      public string Uuid {
        get { return result.Uuid; }
        set { SetUuid(value); }
      }
      public Builder SetUuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUuid = true;
        result.uuid_ = value;
        return this;
      }
      public Builder ClearUuid() {
        PrepareBuilder();
        result.hasUuid = false;
        result.uuid_ = "";
        return this;
      }
      
      public bool HasResId {
        get { return result.hasResId; }
      }
      public pb::ByteString ResId {
        get { return result.ResId; }
        set { SetResId(value); }
      }
      public Builder SetResId(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResId = true;
        result.resId_ = value;
        return this;
      }
      public Builder ClearResId() {
        PrepareBuilder();
        result.hasResId = false;
        result.resId_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasFileId {
        get { return result.hasFileId; }
      }
      public long FileId {
        get { return result.FileId; }
        set { SetFileId(value); }
      }
      public Builder SetFileId(long value) {
        PrepareBuilder();
        result.hasFileId = true;
        result.fileId_ = value;
        return this;
      }
      public Builder ClearFileId() {
        PrepareBuilder();
        result.hasFileId = false;
        result.fileId_ = 0L;
        return this;
      }
    }
    static GetRoomImagResourcRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetChatImagResourcReq : pb::GeneratedMessage<GetChatImagResourcReq, GetChatImagResourcReq.Builder> {
    private GetChatImagResourcReq() { }
    private static readonly GetChatImagResourcReq defaultInstance = new GetChatImagResourcReq().MakeReadOnly();
    private static readonly string[] _getChatImagResourcReqFieldNames = new string[] { "height", "md5", "toUin", "token", "totalSize", "type", "width" };
    private static readonly uint[] _getChatImagResourcReqFieldTags = new uint[] { 48, 34, 18, 10, 24, 56, 40 };
    public static GetChatImagResourcReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetChatImagResourcReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetChatImagResourcReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetChatImagResourcReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetChatImagResourcReq, GetChatImagResourcReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetChatImagResourcReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public const int ToUinFieldNumber = 2;
    private bool hasToUin;
    private string toUin_ = "";
    public bool HasToUin {
      get { return hasToUin; }
    }
    public string ToUin {
      get { return toUin_; }
    }
    
    public const int TotalSizeFieldNumber = 3;
    private bool hasTotalSize;
    private int totalSize_;
    public bool HasTotalSize {
      get { return hasTotalSize; }
    }
    public int TotalSize {
      get { return totalSize_; }
    }
    
    public const int Md5FieldNumber = 4;
    private bool hasMd5;
    private string md5_ = "";
    public bool HasMd5 {
      get { return hasMd5; }
    }
    public string Md5 {
      get { return md5_; }
    }
    
    public const int WidthFieldNumber = 5;
    private bool hasWidth;
    private int width_;
    public bool HasWidth {
      get { return hasWidth; }
    }
    public int Width {
      get { return width_; }
    }
    
    public const int HeightFieldNumber = 6;
    private bool hasHeight;
    private int height_;
    public bool HasHeight {
      get { return hasHeight; }
    }
    public int Height {
      get { return height_; }
    }
    
    public const int TypeFieldNumber = 7;
    private bool hasType;
    private int type_;
    public bool HasType {
      get { return hasType; }
    }
    public int Type {
      get { return type_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        if (!hasToUin) return false;
        if (!hasTotalSize) return false;
        if (!hasMd5) return false;
        if (!hasWidth) return false;
        if (!hasHeight) return false;
        if (!hasType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getChatImagResourcReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[3], Token);
      }
      if (hasToUin) {
        output.WriteString(2, field_names[2], ToUin);
      }
      if (hasTotalSize) {
        output.WriteInt32(3, field_names[4], TotalSize);
      }
      if (hasMd5) {
        output.WriteString(4, field_names[1], Md5);
      }
      if (hasWidth) {
        output.WriteInt32(5, field_names[6], Width);
      }
      if (hasHeight) {
        output.WriteInt32(6, field_names[0], Height);
      }
      if (hasType) {
        output.WriteInt32(7, field_names[5], Type);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      if (hasToUin) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ToUin);
      }
      if (hasTotalSize) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, TotalSize);
      }
      if (hasMd5) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Md5);
      }
      if (hasWidth) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, Width);
      }
      if (hasHeight) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, Height);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, Type);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetChatImagResourcReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChatImagResourcReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChatImagResourcReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChatImagResourcReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChatImagResourcReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChatImagResourcReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetChatImagResourcReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetChatImagResourcReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetChatImagResourcReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChatImagResourcReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetChatImagResourcReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetChatImagResourcReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetChatImagResourcReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetChatImagResourcReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetChatImagResourcReq result;
      
      private GetChatImagResourcReq PrepareBuilder() {
        if (resultIsReadOnly) {
          GetChatImagResourcReq original = result;
          result = new GetChatImagResourcReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetChatImagResourcReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GetChatImagResourcReq.Descriptor; }
      }
      
      public override GetChatImagResourcReq DefaultInstanceForType {
        get { return global::QQServer.GetChatImagResourcReq.DefaultInstance; }
      }
      
      public override GetChatImagResourcReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetChatImagResourcReq) {
          return MergeFrom((GetChatImagResourcReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetChatImagResourcReq other) {
        if (other == global::QQServer.GetChatImagResourcReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasToUin) {
          ToUin = other.ToUin;
        }
        if (other.HasTotalSize) {
          TotalSize = other.TotalSize;
        }
        if (other.HasMd5) {
          Md5 = other.Md5;
        }
        if (other.HasWidth) {
          Width = other.Width;
        }
        if (other.HasHeight) {
          Height = other.Height;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getChatImagResourcReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getChatImagResourcReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
            case 18: {
              result.hasToUin = input.ReadString(ref result.toUin_);
              break;
            }
            case 24: {
              result.hasTotalSize = input.ReadInt32(ref result.totalSize_);
              break;
            }
            case 34: {
              result.hasMd5 = input.ReadString(ref result.md5_);
              break;
            }
            case 40: {
              result.hasWidth = input.ReadInt32(ref result.width_);
              break;
            }
            case 48: {
              result.hasHeight = input.ReadInt32(ref result.height_);
              break;
            }
            case 56: {
              result.hasType = input.ReadInt32(ref result.type_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
      
      public bool HasToUin {
        get { return result.hasToUin; }
      }
      public string ToUin {
        get { return result.ToUin; }
        set { SetToUin(value); }
      }
      public Builder SetToUin(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToUin = true;
        result.toUin_ = value;
        return this;
      }
      public Builder ClearToUin() {
        PrepareBuilder();
        result.hasToUin = false;
        result.toUin_ = "";
        return this;
      }
      
      public bool HasTotalSize {
        get { return result.hasTotalSize; }
      }
      public int TotalSize {
        get { return result.TotalSize; }
        set { SetTotalSize(value); }
      }
      public Builder SetTotalSize(int value) {
        PrepareBuilder();
        result.hasTotalSize = true;
        result.totalSize_ = value;
        return this;
      }
      public Builder ClearTotalSize() {
        PrepareBuilder();
        result.hasTotalSize = false;
        result.totalSize_ = 0;
        return this;
      }
      
      public bool HasMd5 {
        get { return result.hasMd5; }
      }
      public string Md5 {
        get { return result.Md5; }
        set { SetMd5(value); }
      }
      public Builder SetMd5(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMd5 = true;
        result.md5_ = value;
        return this;
      }
      public Builder ClearMd5() {
        PrepareBuilder();
        result.hasMd5 = false;
        result.md5_ = "";
        return this;
      }
      
      public bool HasWidth {
        get { return result.hasWidth; }
      }
      public int Width {
        get { return result.Width; }
        set { SetWidth(value); }
      }
      public Builder SetWidth(int value) {
        PrepareBuilder();
        result.hasWidth = true;
        result.width_ = value;
        return this;
      }
      public Builder ClearWidth() {
        PrepareBuilder();
        result.hasWidth = false;
        result.width_ = 0;
        return this;
      }
      
      public bool HasHeight {
        get { return result.hasHeight; }
      }
      public int Height {
        get { return result.Height; }
        set { SetHeight(value); }
      }
      public Builder SetHeight(int value) {
        PrepareBuilder();
        result.hasHeight = true;
        result.height_ = value;
        return this;
      }
      public Builder ClearHeight() {
        PrepareBuilder();
        result.hasHeight = false;
        result.height_ = 0;
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      public int Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(int value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
    }
    static GetChatImagResourcReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetChatImagResourcRsp : pb::GeneratedMessage<GetChatImagResourcRsp, GetChatImagResourcRsp.Builder> {
    private GetChatImagResourcRsp() { }
    private static readonly GetChatImagResourcRsp defaultInstance = new GetChatImagResourcRsp().MakeReadOnly();
    private static readonly string[] _getChatImagResourcRspFieldNames = new string[] { "blockSize", "errorCode", "fileId", "resId", "tickets", "uuid" };
    private static readonly uint[] _getChatImagResourcRspFieldTags = new uint[] { 40, 8, 32, 26, 50, 18 };
    public static GetChatImagResourcRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetChatImagResourcRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetChatImagResourcRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetChatImagResourcRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetChatImagResourcRsp, GetChatImagResourcRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_GetChatImagResourcRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public const int UuidFieldNumber = 2;
    private bool hasUuid;
    private string uuid_ = "";
    public bool HasUuid {
      get { return hasUuid; }
    }
    public string Uuid {
      get { return uuid_; }
    }
    
    public const int ResIdFieldNumber = 3;
    private bool hasResId;
    private pb::ByteString resId_ = pb::ByteString.Empty;
    public bool HasResId {
      get { return hasResId; }
    }
    public pb::ByteString ResId {
      get { return resId_; }
    }
    
    public const int FileIdFieldNumber = 4;
    private bool hasFileId;
    private long fileId_;
    public bool HasFileId {
      get { return hasFileId; }
    }
    public long FileId {
      get { return fileId_; }
    }
    
    public const int BlockSizeFieldNumber = 5;
    private bool hasBlockSize;
    private int blockSize_;
    public bool HasBlockSize {
      get { return hasBlockSize; }
    }
    public int BlockSize {
      get { return blockSize_; }
    }
    
    public const int TicketsFieldNumber = 6;
    private bool hasTickets;
    private pb::ByteString tickets_ = pb::ByteString.Empty;
    public bool HasTickets {
      get { return hasTickets; }
    }
    public pb::ByteString Tickets {
      get { return tickets_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getChatImagResourcRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[1], ErrorCode);
      }
      if (hasUuid) {
        output.WriteString(2, field_names[5], Uuid);
      }
      if (hasResId) {
        output.WriteBytes(3, field_names[3], ResId);
      }
      if (hasFileId) {
        output.WriteInt64(4, field_names[2], FileId);
      }
      if (hasBlockSize) {
        output.WriteInt32(5, field_names[0], BlockSize);
      }
      if (hasTickets) {
        output.WriteBytes(6, field_names[4], Tickets);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      if (hasUuid) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Uuid);
      }
      if (hasResId) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, ResId);
      }
      if (hasFileId) {
        size += pb::CodedOutputStream.ComputeInt64Size(4, FileId);
      }
      if (hasBlockSize) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, BlockSize);
      }
      if (hasTickets) {
        size += pb::CodedOutputStream.ComputeBytesSize(6, Tickets);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetChatImagResourcRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChatImagResourcRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChatImagResourcRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetChatImagResourcRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetChatImagResourcRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChatImagResourcRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetChatImagResourcRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetChatImagResourcRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetChatImagResourcRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetChatImagResourcRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetChatImagResourcRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetChatImagResourcRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetChatImagResourcRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetChatImagResourcRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetChatImagResourcRsp result;
      
      private GetChatImagResourcRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          GetChatImagResourcRsp original = result;
          result = new GetChatImagResourcRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetChatImagResourcRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.GetChatImagResourcRsp.Descriptor; }
      }
      
      public override GetChatImagResourcRsp DefaultInstanceForType {
        get { return global::QQServer.GetChatImagResourcRsp.DefaultInstance; }
      }
      
      public override GetChatImagResourcRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetChatImagResourcRsp) {
          return MergeFrom((GetChatImagResourcRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetChatImagResourcRsp other) {
        if (other == global::QQServer.GetChatImagResourcRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        if (other.HasUuid) {
          Uuid = other.Uuid;
        }
        if (other.HasResId) {
          ResId = other.ResId;
        }
        if (other.HasFileId) {
          FileId = other.FileId;
        }
        if (other.HasBlockSize) {
          BlockSize = other.BlockSize;
        }
        if (other.HasTickets) {
          Tickets = other.Tickets;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getChatImagResourcRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getChatImagResourcRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
            case 18: {
              result.hasUuid = input.ReadString(ref result.uuid_);
              break;
            }
            case 26: {
              result.hasResId = input.ReadBytes(ref result.resId_);
              break;
            }
            case 32: {
              result.hasFileId = input.ReadInt64(ref result.fileId_);
              break;
            }
            case 40: {
              result.hasBlockSize = input.ReadInt32(ref result.blockSize_);
              break;
            }
            case 50: {
              result.hasTickets = input.ReadBytes(ref result.tickets_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      public bool HasUuid {
        get { return result.hasUuid; }
      }
      public string Uuid {
        get { return result.Uuid; }
        set { SetUuid(value); }
      }
      public Builder SetUuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUuid = true;
        result.uuid_ = value;
        return this;
      }
      public Builder ClearUuid() {
        PrepareBuilder();
        result.hasUuid = false;
        result.uuid_ = "";
        return this;
      }
      
      public bool HasResId {
        get { return result.hasResId; }
      }
      public pb::ByteString ResId {
        get { return result.ResId; }
        set { SetResId(value); }
      }
      public Builder SetResId(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResId = true;
        result.resId_ = value;
        return this;
      }
      public Builder ClearResId() {
        PrepareBuilder();
        result.hasResId = false;
        result.resId_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasFileId {
        get { return result.hasFileId; }
      }
      public long FileId {
        get { return result.FileId; }
        set { SetFileId(value); }
      }
      public Builder SetFileId(long value) {
        PrepareBuilder();
        result.hasFileId = true;
        result.fileId_ = value;
        return this;
      }
      public Builder ClearFileId() {
        PrepareBuilder();
        result.hasFileId = false;
        result.fileId_ = 0L;
        return this;
      }
      
      public bool HasBlockSize {
        get { return result.hasBlockSize; }
      }
      public int BlockSize {
        get { return result.BlockSize; }
        set { SetBlockSize(value); }
      }
      public Builder SetBlockSize(int value) {
        PrepareBuilder();
        result.hasBlockSize = true;
        result.blockSize_ = value;
        return this;
      }
      public Builder ClearBlockSize() {
        PrepareBuilder();
        result.hasBlockSize = false;
        result.blockSize_ = 0;
        return this;
      }
      
      public bool HasTickets {
        get { return result.hasTickets; }
      }
      public pb::ByteString Tickets {
        get { return result.Tickets; }
        set { SetTickets(value); }
      }
      public Builder SetTickets(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTickets = true;
        result.tickets_ = value;
        return this;
      }
      public Builder ClearTickets() {
        PrepareBuilder();
        result.hasTickets = false;
        result.tickets_ = pb::ByteString.Empty;
        return this;
      }
    }
    static GetChatImagResourcRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UploadChatImagReq : pb::GeneratedMessage<UploadChatImagReq, UploadChatImagReq.Builder> {
    private UploadChatImagReq() { }
    private static readonly UploadChatImagReq defaultInstance = new UploadChatImagReq().MakeReadOnly();
    private static readonly string[] _uploadChatImagReqFieldNames = new string[] { "content", "fileId", "fileSize", "resId", "startOff", "tickets", "token", "uuid" };
    private static readonly uint[] _uploadChatImagReqFieldTags = new uint[] { 50, 32, 64, 26, 40, 58, 10, 18 };
    public static UploadChatImagReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UploadChatImagReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UploadChatImagReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_UploadChatImagReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UploadChatImagReq, UploadChatImagReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_UploadChatImagReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public const int UuidFieldNumber = 2;
    private bool hasUuid;
    private string uuid_ = "";
    public bool HasUuid {
      get { return hasUuid; }
    }
    public string Uuid {
      get { return uuid_; }
    }
    
    public const int ResIdFieldNumber = 3;
    private bool hasResId;
    private pb::ByteString resId_ = pb::ByteString.Empty;
    public bool HasResId {
      get { return hasResId; }
    }
    public pb::ByteString ResId {
      get { return resId_; }
    }
    
    public const int FileIdFieldNumber = 4;
    private bool hasFileId;
    private long fileId_;
    public bool HasFileId {
      get { return hasFileId; }
    }
    public long FileId {
      get { return fileId_; }
    }
    
    public const int StartOffFieldNumber = 5;
    private bool hasStartOff;
    private int startOff_;
    public bool HasStartOff {
      get { return hasStartOff; }
    }
    public int StartOff {
      get { return startOff_; }
    }
    
    public const int ContentFieldNumber = 6;
    private bool hasContent;
    private pb::ByteString content_ = pb::ByteString.Empty;
    public bool HasContent {
      get { return hasContent; }
    }
    public pb::ByteString Content {
      get { return content_; }
    }
    
    public const int TicketsFieldNumber = 7;
    private bool hasTickets;
    private pb::ByteString tickets_ = pb::ByteString.Empty;
    public bool HasTickets {
      get { return hasTickets; }
    }
    public pb::ByteString Tickets {
      get { return tickets_; }
    }
    
    public const int FileSizeFieldNumber = 8;
    private bool hasFileSize;
    private long fileSize_;
    public bool HasFileSize {
      get { return hasFileSize; }
    }
    public long FileSize {
      get { return fileSize_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _uploadChatImagReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[6], Token);
      }
      if (hasUuid) {
        output.WriteString(2, field_names[7], Uuid);
      }
      if (hasResId) {
        output.WriteBytes(3, field_names[3], ResId);
      }
      if (hasFileId) {
        output.WriteInt64(4, field_names[1], FileId);
      }
      if (hasStartOff) {
        output.WriteInt32(5, field_names[4], StartOff);
      }
      if (hasContent) {
        output.WriteBytes(6, field_names[0], Content);
      }
      if (hasTickets) {
        output.WriteBytes(7, field_names[5], Tickets);
      }
      if (hasFileSize) {
        output.WriteInt64(8, field_names[2], FileSize);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      if (hasUuid) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Uuid);
      }
      if (hasResId) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, ResId);
      }
      if (hasFileId) {
        size += pb::CodedOutputStream.ComputeInt64Size(4, FileId);
      }
      if (hasStartOff) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, StartOff);
      }
      if (hasContent) {
        size += pb::CodedOutputStream.ComputeBytesSize(6, Content);
      }
      if (hasTickets) {
        size += pb::CodedOutputStream.ComputeBytesSize(7, Tickets);
      }
      if (hasFileSize) {
        size += pb::CodedOutputStream.ComputeInt64Size(8, FileSize);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UploadChatImagReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UploadChatImagReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UploadChatImagReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UploadChatImagReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UploadChatImagReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UploadChatImagReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UploadChatImagReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UploadChatImagReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UploadChatImagReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UploadChatImagReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UploadChatImagReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UploadChatImagReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UploadChatImagReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UploadChatImagReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UploadChatImagReq result;
      
      private UploadChatImagReq PrepareBuilder() {
        if (resultIsReadOnly) {
          UploadChatImagReq original = result;
          result = new UploadChatImagReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UploadChatImagReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.UploadChatImagReq.Descriptor; }
      }
      
      public override UploadChatImagReq DefaultInstanceForType {
        get { return global::QQServer.UploadChatImagReq.DefaultInstance; }
      }
      
      public override UploadChatImagReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UploadChatImagReq) {
          return MergeFrom((UploadChatImagReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UploadChatImagReq other) {
        if (other == global::QQServer.UploadChatImagReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasUuid) {
          Uuid = other.Uuid;
        }
        if (other.HasResId) {
          ResId = other.ResId;
        }
        if (other.HasFileId) {
          FileId = other.FileId;
        }
        if (other.HasStartOff) {
          StartOff = other.StartOff;
        }
        if (other.HasContent) {
          Content = other.Content;
        }
        if (other.HasTickets) {
          Tickets = other.Tickets;
        }
        if (other.HasFileSize) {
          FileSize = other.FileSize;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_uploadChatImagReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _uploadChatImagReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
            case 18: {
              result.hasUuid = input.ReadString(ref result.uuid_);
              break;
            }
            case 26: {
              result.hasResId = input.ReadBytes(ref result.resId_);
              break;
            }
            case 32: {
              result.hasFileId = input.ReadInt64(ref result.fileId_);
              break;
            }
            case 40: {
              result.hasStartOff = input.ReadInt32(ref result.startOff_);
              break;
            }
            case 50: {
              result.hasContent = input.ReadBytes(ref result.content_);
              break;
            }
            case 58: {
              result.hasTickets = input.ReadBytes(ref result.tickets_);
              break;
            }
            case 64: {
              result.hasFileSize = input.ReadInt64(ref result.fileSize_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
      
      public bool HasUuid {
        get { return result.hasUuid; }
      }
      public string Uuid {
        get { return result.Uuid; }
        set { SetUuid(value); }
      }
      public Builder SetUuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUuid = true;
        result.uuid_ = value;
        return this;
      }
      public Builder ClearUuid() {
        PrepareBuilder();
        result.hasUuid = false;
        result.uuid_ = "";
        return this;
      }
      
      public bool HasResId {
        get { return result.hasResId; }
      }
      public pb::ByteString ResId {
        get { return result.ResId; }
        set { SetResId(value); }
      }
      public Builder SetResId(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResId = true;
        result.resId_ = value;
        return this;
      }
      public Builder ClearResId() {
        PrepareBuilder();
        result.hasResId = false;
        result.resId_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasFileId {
        get { return result.hasFileId; }
      }
      public long FileId {
        get { return result.FileId; }
        set { SetFileId(value); }
      }
      public Builder SetFileId(long value) {
        PrepareBuilder();
        result.hasFileId = true;
        result.fileId_ = value;
        return this;
      }
      public Builder ClearFileId() {
        PrepareBuilder();
        result.hasFileId = false;
        result.fileId_ = 0L;
        return this;
      }
      
      public bool HasStartOff {
        get { return result.hasStartOff; }
      }
      public int StartOff {
        get { return result.StartOff; }
        set { SetStartOff(value); }
      }
      public Builder SetStartOff(int value) {
        PrepareBuilder();
        result.hasStartOff = true;
        result.startOff_ = value;
        return this;
      }
      public Builder ClearStartOff() {
        PrepareBuilder();
        result.hasStartOff = false;
        result.startOff_ = 0;
        return this;
      }
      
      public bool HasContent {
        get { return result.hasContent; }
      }
      public pb::ByteString Content {
        get { return result.Content; }
        set { SetContent(value); }
      }
      public Builder SetContent(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContent = true;
        result.content_ = value;
        return this;
      }
      public Builder ClearContent() {
        PrepareBuilder();
        result.hasContent = false;
        result.content_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasTickets {
        get { return result.hasTickets; }
      }
      public pb::ByteString Tickets {
        get { return result.Tickets; }
        set { SetTickets(value); }
      }
      public Builder SetTickets(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTickets = true;
        result.tickets_ = value;
        return this;
      }
      public Builder ClearTickets() {
        PrepareBuilder();
        result.hasTickets = false;
        result.tickets_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasFileSize {
        get { return result.hasFileSize; }
      }
      public long FileSize {
        get { return result.FileSize; }
        set { SetFileSize(value); }
      }
      public Builder SetFileSize(long value) {
        PrepareBuilder();
        result.hasFileSize = true;
        result.fileSize_ = value;
        return this;
      }
      public Builder ClearFileSize() {
        PrepareBuilder();
        result.hasFileSize = false;
        result.fileSize_ = 0L;
        return this;
      }
    }
    static UploadChatImagReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UploadChatImagRsp : pb::GeneratedMessage<UploadChatImagRsp, UploadChatImagRsp.Builder> {
    private UploadChatImagRsp() { }
    private static readonly UploadChatImagRsp defaultInstance = new UploadChatImagRsp().MakeReadOnly();
    private static readonly string[] _uploadChatImagRspFieldNames = new string[] { "errorCode" };
    private static readonly uint[] _uploadChatImagRspFieldTags = new uint[] { 8 };
    public static UploadChatImagRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UploadChatImagRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UploadChatImagRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_UploadChatImagRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UploadChatImagRsp, UploadChatImagRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_UploadChatImagRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _uploadChatImagRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UploadChatImagRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UploadChatImagRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UploadChatImagRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UploadChatImagRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UploadChatImagRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UploadChatImagRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UploadChatImagRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UploadChatImagRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UploadChatImagRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UploadChatImagRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UploadChatImagRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UploadChatImagRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UploadChatImagRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UploadChatImagRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UploadChatImagRsp result;
      
      private UploadChatImagRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          UploadChatImagRsp original = result;
          result = new UploadChatImagRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UploadChatImagRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.UploadChatImagRsp.Descriptor; }
      }
      
      public override UploadChatImagRsp DefaultInstanceForType {
        get { return global::QQServer.UploadChatImagRsp.DefaultInstance; }
      }
      
      public override UploadChatImagRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UploadChatImagRsp) {
          return MergeFrom((UploadChatImagRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UploadChatImagRsp other) {
        if (other == global::QQServer.UploadChatImagRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_uploadChatImagRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _uploadChatImagRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
    }
    static UploadChatImagRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OnlineFriendReq : pb::GeneratedMessage<OnlineFriendReq, OnlineFriendReq.Builder> {
    private OnlineFriendReq() { }
    private static readonly OnlineFriendReq defaultInstance = new OnlineFriendReq().MakeReadOnly();
    private static readonly string[] _onlineFriendReqFieldNames = new string[] { "token" };
    private static readonly uint[] _onlineFriendReqFieldTags = new uint[] { 10 };
    public static OnlineFriendReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OnlineFriendReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OnlineFriendReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_OnlineFriendReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OnlineFriendReq, OnlineFriendReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_OnlineFriendReq__FieldAccessorTable; }
    }
    
    public const int TokenFieldNumber = 1;
    private bool hasToken;
    private string token_ = "";
    public bool HasToken {
      get { return hasToken; }
    }
    public string Token {
      get { return token_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasToken) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _onlineFriendReqFieldNames;
      if (hasToken) {
        output.WriteString(1, field_names[0], Token);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Token);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OnlineFriendReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OnlineFriendReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OnlineFriendReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OnlineFriendReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OnlineFriendReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OnlineFriendReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OnlineFriendReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OnlineFriendReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OnlineFriendReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OnlineFriendReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OnlineFriendReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OnlineFriendReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OnlineFriendReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OnlineFriendReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OnlineFriendReq result;
      
      private OnlineFriendReq PrepareBuilder() {
        if (resultIsReadOnly) {
          OnlineFriendReq original = result;
          result = new OnlineFriendReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OnlineFriendReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.OnlineFriendReq.Descriptor; }
      }
      
      public override OnlineFriendReq DefaultInstanceForType {
        get { return global::QQServer.OnlineFriendReq.DefaultInstance; }
      }
      
      public override OnlineFriendReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OnlineFriendReq) {
          return MergeFrom((OnlineFriendReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OnlineFriendReq other) {
        if (other == global::QQServer.OnlineFriendReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasToken) {
          Token = other.Token;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_onlineFriendReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _onlineFriendReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasToken = input.ReadString(ref result.token_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public string Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = "";
        return this;
      }
    }
    static OnlineFriendReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OnlineFriendRsp : pb::GeneratedMessage<OnlineFriendRsp, OnlineFriendRsp.Builder> {
    private OnlineFriendRsp() { }
    private static readonly OnlineFriendRsp defaultInstance = new OnlineFriendRsp().MakeReadOnly();
    private static readonly string[] _onlineFriendRspFieldNames = new string[] { "states" };
    private static readonly uint[] _onlineFriendRspFieldTags = new uint[] { 10 };
    public static OnlineFriendRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OnlineFriendRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OnlineFriendRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_OnlineFriendRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OnlineFriendRsp, OnlineFriendRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_OnlineFriendRsp__FieldAccessorTable; }
    }
    
    public const int StatesFieldNumber = 1;
    private pbc::PopsicleList<global::QQServer.OnlineState> states_ = new pbc::PopsicleList<global::QQServer.OnlineState>();
    public scg::IList<global::QQServer.OnlineState> StatesList {
      get { return states_; }
    }
    public int StatesCount {
      get { return states_.Count; }
    }
    public global::QQServer.OnlineState GetStates(int index) {
      return states_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _onlineFriendRspFieldNames;
      if (states_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], states_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::QQServer.OnlineState element in StatesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OnlineFriendRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OnlineFriendRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OnlineFriendRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OnlineFriendRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OnlineFriendRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OnlineFriendRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OnlineFriendRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OnlineFriendRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OnlineFriendRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OnlineFriendRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OnlineFriendRsp MakeReadOnly() {
      states_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OnlineFriendRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OnlineFriendRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OnlineFriendRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OnlineFriendRsp result;
      
      private OnlineFriendRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          OnlineFriendRsp original = result;
          result = new OnlineFriendRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OnlineFriendRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.OnlineFriendRsp.Descriptor; }
      }
      
      public override OnlineFriendRsp DefaultInstanceForType {
        get { return global::QQServer.OnlineFriendRsp.DefaultInstance; }
      }
      
      public override OnlineFriendRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OnlineFriendRsp) {
          return MergeFrom((OnlineFriendRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OnlineFriendRsp other) {
        if (other == global::QQServer.OnlineFriendRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.states_.Count != 0) {
          result.states_.Add(other.states_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_onlineFriendRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _onlineFriendRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.states_, global::QQServer.OnlineState.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::QQServer.OnlineState> StatesList {
        get { return PrepareBuilder().states_; }
      }
      public int StatesCount {
        get { return result.StatesCount; }
      }
      public global::QQServer.OnlineState GetStates(int index) {
        return result.GetStates(index);
      }
      public Builder SetStates(int index, global::QQServer.OnlineState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.states_[index] = value;
        return this;
      }
      public Builder SetStates(int index, global::QQServer.OnlineState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.states_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStates(global::QQServer.OnlineState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.states_.Add(value);
        return this;
      }
      public Builder AddStates(global::QQServer.OnlineState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.states_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStates(scg::IEnumerable<global::QQServer.OnlineState> values) {
        PrepareBuilder();
        result.states_.Add(values);
        return this;
      }
      public Builder ClearStates() {
        PrepareBuilder();
        result.states_.Clear();
        return this;
      }
    }
    static OnlineFriendRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OnlineState : pb::GeneratedMessage<OnlineState, OnlineState.Builder> {
    private OnlineState() { }
    private static readonly OnlineState defaultInstance = new OnlineState().MakeReadOnly();
    private static readonly string[] _onlineStateFieldNames = new string[] { "state", "uin" };
    private static readonly uint[] _onlineStateFieldTags = new uint[] { 16, 10 };
    public static OnlineState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OnlineState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OnlineState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_OnlineState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OnlineState, OnlineState.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_OnlineState__FieldAccessorTable; }
    }
    
    public const int UinFieldNumber = 1;
    private bool hasUin;
    private string uin_ = "";
    public bool HasUin {
      get { return hasUin; }
    }
    public string Uin {
      get { return uin_; }
    }
    
    public const int StateFieldNumber = 2;
    private bool hasState;
    private int state_;
    public bool HasState {
      get { return hasState; }
    }
    public int State {
      get { return state_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _onlineStateFieldNames;
      if (hasUin) {
        output.WriteString(1, field_names[1], Uin);
      }
      if (hasState) {
        output.WriteInt32(2, field_names[0], State);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUin) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Uin);
      }
      if (hasState) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, State);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OnlineState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OnlineState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OnlineState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OnlineState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OnlineState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OnlineState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OnlineState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OnlineState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OnlineState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OnlineState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OnlineState MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OnlineState prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OnlineState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OnlineState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OnlineState result;
      
      private OnlineState PrepareBuilder() {
        if (resultIsReadOnly) {
          OnlineState original = result;
          result = new OnlineState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OnlineState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.OnlineState.Descriptor; }
      }
      
      public override OnlineState DefaultInstanceForType {
        get { return global::QQServer.OnlineState.DefaultInstance; }
      }
      
      public override OnlineState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OnlineState) {
          return MergeFrom((OnlineState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OnlineState other) {
        if (other == global::QQServer.OnlineState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUin) {
          Uin = other.Uin;
        }
        if (other.HasState) {
          State = other.State;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_onlineStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _onlineStateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUin = input.ReadString(ref result.uin_);
              break;
            }
            case 16: {
              result.hasState = input.ReadInt32(ref result.state_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUin {
        get { return result.hasUin; }
      }
      public string Uin {
        get { return result.Uin; }
        set { SetUin(value); }
      }
      public Builder SetUin(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUin = true;
        result.uin_ = value;
        return this;
      }
      public Builder ClearUin() {
        PrepareBuilder();
        result.hasUin = false;
        result.uin_ = "";
        return this;
      }
      
      public bool HasState {
        get { return result.hasState; }
      }
      public int State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(int value) {
        PrepareBuilder();
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder ClearState() {
        PrepareBuilder();
        result.hasState = false;
        result.state_ = 0;
        return this;
      }
    }
    static OnlineState() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FriendInfoChangeNotify : pb::GeneratedMessage<FriendInfoChangeNotify, FriendInfoChangeNotify.Builder> {
    private FriendInfoChangeNotify() { }
    private static readonly FriendInfoChangeNotify defaultInstance = new FriendInfoChangeNotify().MakeReadOnly();
    private static readonly string[] _friendInfoChangeNotifyFieldNames = new string[] { "brokerQQ", "friendQQ", "isAdd", "remarkInfo", "time" };
    private static readonly uint[] _friendInfoChangeNotifyFieldTags = new uint[] { 10, 18, 32, 42, 26 };
    public static FriendInfoChangeNotify DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FriendInfoChangeNotify DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FriendInfoChangeNotify ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_FriendInfoChangeNotify__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FriendInfoChangeNotify, FriendInfoChangeNotify.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_FriendInfoChangeNotify__FieldAccessorTable; }
    }
    
    public const int BrokerQQFieldNumber = 1;
    private bool hasBrokerQQ;
    private string brokerQQ_ = "";
    public bool HasBrokerQQ {
      get { return hasBrokerQQ; }
    }
    public string BrokerQQ {
      get { return brokerQQ_; }
    }
    
    public const int FriendQQFieldNumber = 2;
    private bool hasFriendQQ;
    private string friendQQ_ = "";
    public bool HasFriendQQ {
      get { return hasFriendQQ; }
    }
    public string FriendQQ {
      get { return friendQQ_; }
    }
    
    public const int TimeFieldNumber = 3;
    private bool hasTime;
    private string time_ = "";
    public bool HasTime {
      get { return hasTime; }
    }
    public string Time {
      get { return time_; }
    }
    
    public const int IsAddFieldNumber = 4;
    private bool hasIsAdd;
    private bool isAdd_;
    public bool HasIsAdd {
      get { return hasIsAdd; }
    }
    public bool IsAdd {
      get { return isAdd_; }
    }
    
    public const int RemarkInfoFieldNumber = 5;
    private bool hasRemarkInfo;
    private string remarkInfo_ = "";
    public bool HasRemarkInfo {
      get { return hasRemarkInfo; }
    }
    public string RemarkInfo {
      get { return remarkInfo_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBrokerQQ) return false;
        if (!hasFriendQQ) return false;
        if (!hasTime) return false;
        if (!hasIsAdd) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _friendInfoChangeNotifyFieldNames;
      if (hasBrokerQQ) {
        output.WriteString(1, field_names[0], BrokerQQ);
      }
      if (hasFriendQQ) {
        output.WriteString(2, field_names[1], FriendQQ);
      }
      if (hasTime) {
        output.WriteString(3, field_names[4], Time);
      }
      if (hasIsAdd) {
        output.WriteBool(4, field_names[2], IsAdd);
      }
      if (hasRemarkInfo) {
        output.WriteString(5, field_names[3], RemarkInfo);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasBrokerQQ) {
        size += pb::CodedOutputStream.ComputeStringSize(1, BrokerQQ);
      }
      if (hasFriendQQ) {
        size += pb::CodedOutputStream.ComputeStringSize(2, FriendQQ);
      }
      if (hasTime) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Time);
      }
      if (hasIsAdd) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, IsAdd);
      }
      if (hasRemarkInfo) {
        size += pb::CodedOutputStream.ComputeStringSize(5, RemarkInfo);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FriendInfoChangeNotify ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FriendInfoChangeNotify ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FriendInfoChangeNotify ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FriendInfoChangeNotify ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FriendInfoChangeNotify ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FriendInfoChangeNotify ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FriendInfoChangeNotify ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FriendInfoChangeNotify ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FriendInfoChangeNotify ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FriendInfoChangeNotify ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FriendInfoChangeNotify MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FriendInfoChangeNotify prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FriendInfoChangeNotify, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FriendInfoChangeNotify cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FriendInfoChangeNotify result;
      
      private FriendInfoChangeNotify PrepareBuilder() {
        if (resultIsReadOnly) {
          FriendInfoChangeNotify original = result;
          result = new FriendInfoChangeNotify();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FriendInfoChangeNotify MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.FriendInfoChangeNotify.Descriptor; }
      }
      
      public override FriendInfoChangeNotify DefaultInstanceForType {
        get { return global::QQServer.FriendInfoChangeNotify.DefaultInstance; }
      }
      
      public override FriendInfoChangeNotify BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FriendInfoChangeNotify) {
          return MergeFrom((FriendInfoChangeNotify) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FriendInfoChangeNotify other) {
        if (other == global::QQServer.FriendInfoChangeNotify.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBrokerQQ) {
          BrokerQQ = other.BrokerQQ;
        }
        if (other.HasFriendQQ) {
          FriendQQ = other.FriendQQ;
        }
        if (other.HasTime) {
          Time = other.Time;
        }
        if (other.HasIsAdd) {
          IsAdd = other.IsAdd;
        }
        if (other.HasRemarkInfo) {
          RemarkInfo = other.RemarkInfo;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_friendInfoChangeNotifyFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _friendInfoChangeNotifyFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasBrokerQQ = input.ReadString(ref result.brokerQQ_);
              break;
            }
            case 18: {
              result.hasFriendQQ = input.ReadString(ref result.friendQQ_);
              break;
            }
            case 26: {
              result.hasTime = input.ReadString(ref result.time_);
              break;
            }
            case 32: {
              result.hasIsAdd = input.ReadBool(ref result.isAdd_);
              break;
            }
            case 42: {
              result.hasRemarkInfo = input.ReadString(ref result.remarkInfo_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBrokerQQ {
        get { return result.hasBrokerQQ; }
      }
      public string BrokerQQ {
        get { return result.BrokerQQ; }
        set { SetBrokerQQ(value); }
      }
      public Builder SetBrokerQQ(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerQQ = true;
        result.brokerQQ_ = value;
        return this;
      }
      public Builder ClearBrokerQQ() {
        PrepareBuilder();
        result.hasBrokerQQ = false;
        result.brokerQQ_ = "";
        return this;
      }
      
      public bool HasFriendQQ {
        get { return result.hasFriendQQ; }
      }
      public string FriendQQ {
        get { return result.FriendQQ; }
        set { SetFriendQQ(value); }
      }
      public Builder SetFriendQQ(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFriendQQ = true;
        result.friendQQ_ = value;
        return this;
      }
      public Builder ClearFriendQQ() {
        PrepareBuilder();
        result.hasFriendQQ = false;
        result.friendQQ_ = "";
        return this;
      }
      
      public bool HasTime {
        get { return result.hasTime; }
      }
      public string Time {
        get { return result.Time; }
        set { SetTime(value); }
      }
      public Builder SetTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder ClearTime() {
        PrepareBuilder();
        result.hasTime = false;
        result.time_ = "";
        return this;
      }
      
      public bool HasIsAdd {
        get { return result.hasIsAdd; }
      }
      public bool IsAdd {
        get { return result.IsAdd; }
        set { SetIsAdd(value); }
      }
      public Builder SetIsAdd(bool value) {
        PrepareBuilder();
        result.hasIsAdd = true;
        result.isAdd_ = value;
        return this;
      }
      public Builder ClearIsAdd() {
        PrepareBuilder();
        result.hasIsAdd = false;
        result.isAdd_ = false;
        return this;
      }
      
      public bool HasRemarkInfo {
        get { return result.hasRemarkInfo; }
      }
      public string RemarkInfo {
        get { return result.RemarkInfo; }
        set { SetRemarkInfo(value); }
      }
      public Builder SetRemarkInfo(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRemarkInfo = true;
        result.remarkInfo_ = value;
        return this;
      }
      public Builder ClearRemarkInfo() {
        PrepareBuilder();
        result.hasRemarkInfo = false;
        result.remarkInfo_ = "";
        return this;
      }
    }
    static FriendInfoChangeNotify() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CompareFriendChangeReq : pb::GeneratedMessage<CompareFriendChangeReq, CompareFriendChangeReq.Builder> {
    private CompareFriendChangeReq() { }
    private static readonly CompareFriendChangeReq defaultInstance = new CompareFriendChangeReq().MakeReadOnly();
    private static readonly string[] _compareFriendChangeReqFieldNames = new string[] { "newUsers", "oldUsers", "uin" };
    private static readonly uint[] _compareFriendChangeReqFieldTags = new uint[] { 26, 18, 10 };
    public static CompareFriendChangeReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CompareFriendChangeReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CompareFriendChangeReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_CompareFriendChangeReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CompareFriendChangeReq, CompareFriendChangeReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_CompareFriendChangeReq__FieldAccessorTable; }
    }
    
    public const int UinFieldNumber = 1;
    private bool hasUin;
    private string uin_ = "";
    public bool HasUin {
      get { return hasUin; }
    }
    public string Uin {
      get { return uin_; }
    }
    
    public const int OldUsersFieldNumber = 2;
    private pbc::PopsicleList<global::QQServer.UserInfo> oldUsers_ = new pbc::PopsicleList<global::QQServer.UserInfo>();
    public scg::IList<global::QQServer.UserInfo> OldUsersList {
      get { return oldUsers_; }
    }
    public int OldUsersCount {
      get { return oldUsers_.Count; }
    }
    public global::QQServer.UserInfo GetOldUsers(int index) {
      return oldUsers_[index];
    }
    
    public const int NewUsersFieldNumber = 3;
    private pbc::PopsicleList<global::QQServer.UserInfo> newUsers_ = new pbc::PopsicleList<global::QQServer.UserInfo>();
    public scg::IList<global::QQServer.UserInfo> NewUsersList {
      get { return newUsers_; }
    }
    public int NewUsersCount {
      get { return newUsers_.Count; }
    }
    public global::QQServer.UserInfo GetNewUsers(int index) {
      return newUsers_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUin) return false;
        foreach (global::QQServer.UserInfo element in OldUsersList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::QQServer.UserInfo element in NewUsersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _compareFriendChangeReqFieldNames;
      if (hasUin) {
        output.WriteString(1, field_names[2], Uin);
      }
      if (oldUsers_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], oldUsers_);
      }
      if (newUsers_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], newUsers_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUin) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Uin);
      }
      foreach (global::QQServer.UserInfo element in OldUsersList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::QQServer.UserInfo element in NewUsersList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CompareFriendChangeReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CompareFriendChangeReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CompareFriendChangeReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CompareFriendChangeReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CompareFriendChangeReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CompareFriendChangeReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CompareFriendChangeReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CompareFriendChangeReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CompareFriendChangeReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CompareFriendChangeReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CompareFriendChangeReq MakeReadOnly() {
      oldUsers_.MakeReadOnly();
      newUsers_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CompareFriendChangeReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CompareFriendChangeReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CompareFriendChangeReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CompareFriendChangeReq result;
      
      private CompareFriendChangeReq PrepareBuilder() {
        if (resultIsReadOnly) {
          CompareFriendChangeReq original = result;
          result = new CompareFriendChangeReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CompareFriendChangeReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.CompareFriendChangeReq.Descriptor; }
      }
      
      public override CompareFriendChangeReq DefaultInstanceForType {
        get { return global::QQServer.CompareFriendChangeReq.DefaultInstance; }
      }
      
      public override CompareFriendChangeReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CompareFriendChangeReq) {
          return MergeFrom((CompareFriendChangeReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CompareFriendChangeReq other) {
        if (other == global::QQServer.CompareFriendChangeReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUin) {
          Uin = other.Uin;
        }
        if (other.oldUsers_.Count != 0) {
          result.oldUsers_.Add(other.oldUsers_);
        }
        if (other.newUsers_.Count != 0) {
          result.newUsers_.Add(other.newUsers_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_compareFriendChangeReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _compareFriendChangeReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUin = input.ReadString(ref result.uin_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.oldUsers_, global::QQServer.UserInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.newUsers_, global::QQServer.UserInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUin {
        get { return result.hasUin; }
      }
      public string Uin {
        get { return result.Uin; }
        set { SetUin(value); }
      }
      public Builder SetUin(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUin = true;
        result.uin_ = value;
        return this;
      }
      public Builder ClearUin() {
        PrepareBuilder();
        result.hasUin = false;
        result.uin_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::QQServer.UserInfo> OldUsersList {
        get { return PrepareBuilder().oldUsers_; }
      }
      public int OldUsersCount {
        get { return result.OldUsersCount; }
      }
      public global::QQServer.UserInfo GetOldUsers(int index) {
        return result.GetOldUsers(index);
      }
      public Builder SetOldUsers(int index, global::QQServer.UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.oldUsers_[index] = value;
        return this;
      }
      public Builder SetOldUsers(int index, global::QQServer.UserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.oldUsers_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOldUsers(global::QQServer.UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.oldUsers_.Add(value);
        return this;
      }
      public Builder AddOldUsers(global::QQServer.UserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.oldUsers_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOldUsers(scg::IEnumerable<global::QQServer.UserInfo> values) {
        PrepareBuilder();
        result.oldUsers_.Add(values);
        return this;
      }
      public Builder ClearOldUsers() {
        PrepareBuilder();
        result.oldUsers_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::QQServer.UserInfo> NewUsersList {
        get { return PrepareBuilder().newUsers_; }
      }
      public int NewUsersCount {
        get { return result.NewUsersCount; }
      }
      public global::QQServer.UserInfo GetNewUsers(int index) {
        return result.GetNewUsers(index);
      }
      public Builder SetNewUsers(int index, global::QQServer.UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.newUsers_[index] = value;
        return this;
      }
      public Builder SetNewUsers(int index, global::QQServer.UserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.newUsers_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddNewUsers(global::QQServer.UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.newUsers_.Add(value);
        return this;
      }
      public Builder AddNewUsers(global::QQServer.UserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.newUsers_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeNewUsers(scg::IEnumerable<global::QQServer.UserInfo> values) {
        PrepareBuilder();
        result.newUsers_.Add(values);
        return this;
      }
      public Builder ClearNewUsers() {
        PrepareBuilder();
        result.newUsers_.Clear();
        return this;
      }
    }
    static CompareFriendChangeReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CompareFriendChangeRsp : pb::GeneratedMessage<CompareFriendChangeRsp, CompareFriendChangeRsp.Builder> {
    private CompareFriendChangeRsp() { }
    private static readonly CompareFriendChangeRsp defaultInstance = new CompareFriendChangeRsp().MakeReadOnly();
    private static readonly string[] _compareFriendChangeRspFieldNames = new string[] { "errorCode" };
    private static readonly uint[] _compareFriendChangeRspFieldTags = new uint[] { 8 };
    public static CompareFriendChangeRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CompareFriendChangeRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CompareFriendChangeRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_CompareFriendChangeRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CompareFriendChangeRsp, CompareFriendChangeRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_CompareFriendChangeRsp__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _compareFriendChangeRspFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CompareFriendChangeRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CompareFriendChangeRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CompareFriendChangeRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CompareFriendChangeRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CompareFriendChangeRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CompareFriendChangeRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CompareFriendChangeRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CompareFriendChangeRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CompareFriendChangeRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CompareFriendChangeRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CompareFriendChangeRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CompareFriendChangeRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CompareFriendChangeRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CompareFriendChangeRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CompareFriendChangeRsp result;
      
      private CompareFriendChangeRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          CompareFriendChangeRsp original = result;
          result = new CompareFriendChangeRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CompareFriendChangeRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.CompareFriendChangeRsp.Descriptor; }
      }
      
      public override CompareFriendChangeRsp DefaultInstanceForType {
        get { return global::QQServer.CompareFriendChangeRsp.DefaultInstance; }
      }
      
      public override CompareFriendChangeRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CompareFriendChangeRsp) {
          return MergeFrom((CompareFriendChangeRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CompareFriendChangeRsp other) {
        if (other == global::QQServer.CompareFriendChangeRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_compareFriendChangeRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _compareFriendChangeRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
    }
    static CompareFriendChangeRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FriendListInfo : pb::GeneratedMessage<FriendListInfo, FriendListInfo.Builder> {
    private FriendListInfo() { }
    private static readonly FriendListInfo defaultInstance = new FriendListInfo().MakeReadOnly();
    private static readonly string[] _friendListInfoFieldNames = new string[] { "users" };
    private static readonly uint[] _friendListInfoFieldTags = new uint[] { 10 };
    public static FriendListInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FriendListInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FriendListInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_FriendListInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FriendListInfo, FriendListInfo.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_FriendListInfo__FieldAccessorTable; }
    }
    
    public const int UsersFieldNumber = 1;
    private pbc::PopsicleList<global::QQServer.UserInfo> users_ = new pbc::PopsicleList<global::QQServer.UserInfo>();
    public scg::IList<global::QQServer.UserInfo> UsersList {
      get { return users_; }
    }
    public int UsersCount {
      get { return users_.Count; }
    }
    public global::QQServer.UserInfo GetUsers(int index) {
      return users_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::QQServer.UserInfo element in UsersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _friendListInfoFieldNames;
      if (users_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], users_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::QQServer.UserInfo element in UsersList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FriendListInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FriendListInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FriendListInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FriendListInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FriendListInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FriendListInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FriendListInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FriendListInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FriendListInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FriendListInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FriendListInfo MakeReadOnly() {
      users_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FriendListInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FriendListInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FriendListInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FriendListInfo result;
      
      private FriendListInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          FriendListInfo original = result;
          result = new FriendListInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FriendListInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.FriendListInfo.Descriptor; }
      }
      
      public override FriendListInfo DefaultInstanceForType {
        get { return global::QQServer.FriendListInfo.DefaultInstance; }
      }
      
      public override FriendListInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FriendListInfo) {
          return MergeFrom((FriendListInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FriendListInfo other) {
        if (other == global::QQServer.FriendListInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.users_.Count != 0) {
          result.users_.Add(other.users_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_friendListInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _friendListInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.users_, global::QQServer.UserInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::QQServer.UserInfo> UsersList {
        get { return PrepareBuilder().users_; }
      }
      public int UsersCount {
        get { return result.UsersCount; }
      }
      public global::QQServer.UserInfo GetUsers(int index) {
        return result.GetUsers(index);
      }
      public Builder SetUsers(int index, global::QQServer.UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.users_[index] = value;
        return this;
      }
      public Builder SetUsers(int index, global::QQServer.UserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.users_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUsers(global::QQServer.UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.users_.Add(value);
        return this;
      }
      public Builder AddUsers(global::QQServer.UserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.users_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUsers(scg::IEnumerable<global::QQServer.UserInfo> values) {
        PrepareBuilder();
        result.users_.Add(values);
        return this;
      }
      public Builder ClearUsers() {
        PrepareBuilder();
        result.users_.Clear();
        return this;
      }
    }
    static FriendListInfo() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PubFriendListInfoChange : pb::GeneratedMessage<PubFriendListInfoChange, PubFriendListInfoChange.Builder> {
    private PubFriendListInfoChange() { }
    private static readonly PubFriendListInfoChange defaultInstance = new PubFriendListInfoChange().MakeReadOnly();
    private static readonly string[] _pubFriendListInfoChangeFieldNames = new string[] { "notifys" };
    private static readonly uint[] _pubFriendListInfoChangeFieldTags = new uint[] { 10 };
    public static PubFriendListInfoChange DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PubFriendListInfoChange DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PubFriendListInfoChange ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_PubFriendListInfoChange__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PubFriendListInfoChange, PubFriendListInfoChange.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_PubFriendListInfoChange__FieldAccessorTable; }
    }
    
    public const int NotifysFieldNumber = 1;
    private pbc::PopsicleList<global::QQServer.FriendInfoChangeNotify> notifys_ = new pbc::PopsicleList<global::QQServer.FriendInfoChangeNotify>();
    public scg::IList<global::QQServer.FriendInfoChangeNotify> NotifysList {
      get { return notifys_; }
    }
    public int NotifysCount {
      get { return notifys_.Count; }
    }
    public global::QQServer.FriendInfoChangeNotify GetNotifys(int index) {
      return notifys_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::QQServer.FriendInfoChangeNotify element in NotifysList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _pubFriendListInfoChangeFieldNames;
      if (notifys_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], notifys_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::QQServer.FriendInfoChangeNotify element in NotifysList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PubFriendListInfoChange ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PubFriendListInfoChange ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PubFriendListInfoChange ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PubFriendListInfoChange ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PubFriendListInfoChange ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PubFriendListInfoChange ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PubFriendListInfoChange ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PubFriendListInfoChange ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PubFriendListInfoChange ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PubFriendListInfoChange ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PubFriendListInfoChange MakeReadOnly() {
      notifys_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PubFriendListInfoChange prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PubFriendListInfoChange, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PubFriendListInfoChange cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PubFriendListInfoChange result;
      
      private PubFriendListInfoChange PrepareBuilder() {
        if (resultIsReadOnly) {
          PubFriendListInfoChange original = result;
          result = new PubFriendListInfoChange();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PubFriendListInfoChange MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.PubFriendListInfoChange.Descriptor; }
      }
      
      public override PubFriendListInfoChange DefaultInstanceForType {
        get { return global::QQServer.PubFriendListInfoChange.DefaultInstance; }
      }
      
      public override PubFriendListInfoChange BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PubFriendListInfoChange) {
          return MergeFrom((PubFriendListInfoChange) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PubFriendListInfoChange other) {
        if (other == global::QQServer.PubFriendListInfoChange.DefaultInstance) return this;
        PrepareBuilder();
        if (other.notifys_.Count != 0) {
          result.notifys_.Add(other.notifys_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pubFriendListInfoChangeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pubFriendListInfoChangeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.notifys_, global::QQServer.FriendInfoChangeNotify.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::QQServer.FriendInfoChangeNotify> NotifysList {
        get { return PrepareBuilder().notifys_; }
      }
      public int NotifysCount {
        get { return result.NotifysCount; }
      }
      public global::QQServer.FriendInfoChangeNotify GetNotifys(int index) {
        return result.GetNotifys(index);
      }
      public Builder SetNotifys(int index, global::QQServer.FriendInfoChangeNotify value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.notifys_[index] = value;
        return this;
      }
      public Builder SetNotifys(int index, global::QQServer.FriendInfoChangeNotify.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.notifys_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddNotifys(global::QQServer.FriendInfoChangeNotify value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.notifys_.Add(value);
        return this;
      }
      public Builder AddNotifys(global::QQServer.FriendInfoChangeNotify.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.notifys_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeNotifys(scg::IEnumerable<global::QQServer.FriendInfoChangeNotify> values) {
        PrepareBuilder();
        result.notifys_.Add(values);
        return this;
      }
      public Builder ClearNotifys() {
        PrepareBuilder();
        result.notifys_.Clear();
        return this;
      }
    }
    static PubFriendListInfoChange() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class QueryMessageContextReq : pb::GeneratedMessage<QueryMessageContextReq, QueryMessageContextReq.Builder> {
    private QueryMessageContextReq() { }
    private static readonly QueryMessageContextReq defaultInstance = new QueryMessageContextReq().MakeReadOnly();
    private static readonly string[] _queryMessageContextReqFieldNames = new string[] { "direction", "msgId", "number" };
    private static readonly uint[] _queryMessageContextReqFieldTags = new uint[] { 8, 26, 16 };
    public static QueryMessageContextReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryMessageContextReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryMessageContextReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_QueryMessageContextReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryMessageContextReq, QueryMessageContextReq.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_QueryMessageContextReq__FieldAccessorTable; }
    }
    
    public const int DirectionFieldNumber = 1;
    private bool hasDirection;
    private int direction_;
    public bool HasDirection {
      get { return hasDirection; }
    }
    public int Direction {
      get { return direction_; }
    }
    
    public const int NumberFieldNumber = 2;
    private bool hasNumber;
    private int number_;
    public bool HasNumber {
      get { return hasNumber; }
    }
    public int Number {
      get { return number_; }
    }
    
    public const int MsgIdFieldNumber = 3;
    private bool hasMsgId;
    private string msgId_ = "";
    public bool HasMsgId {
      get { return hasMsgId; }
    }
    public string MsgId {
      get { return msgId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasDirection) return false;
        if (!hasNumber) return false;
        if (!hasMsgId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _queryMessageContextReqFieldNames;
      if (hasDirection) {
        output.WriteInt32(1, field_names[0], Direction);
      }
      if (hasNumber) {
        output.WriteInt32(2, field_names[2], Number);
      }
      if (hasMsgId) {
        output.WriteString(3, field_names[1], MsgId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDirection) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Direction);
      }
      if (hasNumber) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Number);
      }
      if (hasMsgId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, MsgId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static QueryMessageContextReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryMessageContextReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryMessageContextReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryMessageContextReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryMessageContextReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryMessageContextReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryMessageContextReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryMessageContextReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryMessageContextReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryMessageContextReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryMessageContextReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryMessageContextReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryMessageContextReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryMessageContextReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryMessageContextReq result;
      
      private QueryMessageContextReq PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryMessageContextReq original = result;
          result = new QueryMessageContextReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryMessageContextReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.QueryMessageContextReq.Descriptor; }
      }
      
      public override QueryMessageContextReq DefaultInstanceForType {
        get { return global::QQServer.QueryMessageContextReq.DefaultInstance; }
      }
      
      public override QueryMessageContextReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryMessageContextReq) {
          return MergeFrom((QueryMessageContextReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryMessageContextReq other) {
        if (other == global::QQServer.QueryMessageContextReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDirection) {
          Direction = other.Direction;
        }
        if (other.HasNumber) {
          Number = other.Number;
        }
        if (other.HasMsgId) {
          MsgId = other.MsgId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryMessageContextReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryMessageContextReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasDirection = input.ReadInt32(ref result.direction_);
              break;
            }
            case 16: {
              result.hasNumber = input.ReadInt32(ref result.number_);
              break;
            }
            case 26: {
              result.hasMsgId = input.ReadString(ref result.msgId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDirection {
        get { return result.hasDirection; }
      }
      public int Direction {
        get { return result.Direction; }
        set { SetDirection(value); }
      }
      public Builder SetDirection(int value) {
        PrepareBuilder();
        result.hasDirection = true;
        result.direction_ = value;
        return this;
      }
      public Builder ClearDirection() {
        PrepareBuilder();
        result.hasDirection = false;
        result.direction_ = 0;
        return this;
      }
      
      public bool HasNumber {
        get { return result.hasNumber; }
      }
      public int Number {
        get { return result.Number; }
        set { SetNumber(value); }
      }
      public Builder SetNumber(int value) {
        PrepareBuilder();
        result.hasNumber = true;
        result.number_ = value;
        return this;
      }
      public Builder ClearNumber() {
        PrepareBuilder();
        result.hasNumber = false;
        result.number_ = 0;
        return this;
      }
      
      public bool HasMsgId {
        get { return result.hasMsgId; }
      }
      public string MsgId {
        get { return result.MsgId; }
        set { SetMsgId(value); }
      }
      public Builder SetMsgId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMsgId = true;
        result.msgId_ = value;
        return this;
      }
      public Builder ClearMsgId() {
        PrepareBuilder();
        result.hasMsgId = false;
        result.msgId_ = "";
        return this;
      }
    }
    static QueryMessageContextReq() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class QueryMessageContextRsp : pb::GeneratedMessage<QueryMessageContextRsp, QueryMessageContextRsp.Builder> {
    private QueryMessageContextRsp() { }
    private static readonly QueryMessageContextRsp defaultInstance = new QueryMessageContextRsp().MakeReadOnly();
    private static readonly string[] _queryMessageContextRspFieldNames = new string[] { "msgs" };
    private static readonly uint[] _queryMessageContextRspFieldTags = new uint[] { 10 };
    public static QueryMessageContextRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryMessageContextRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryMessageContextRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::QQServer.Qqserver.internal__static_QQServer_QueryMessageContextRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryMessageContextRsp, QueryMessageContextRsp.Builder> InternalFieldAccessors {
      get { return global::QQServer.Qqserver.internal__static_QQServer_QueryMessageContextRsp__FieldAccessorTable; }
    }
    
    public const int MsgsFieldNumber = 1;
    private pbc::PopsicleList<global::QQServer.PubReciveMessage> msgs_ = new pbc::PopsicleList<global::QQServer.PubReciveMessage>();
    public scg::IList<global::QQServer.PubReciveMessage> MsgsList {
      get { return msgs_; }
    }
    public int MsgsCount {
      get { return msgs_.Count; }
    }
    public global::QQServer.PubReciveMessage GetMsgs(int index) {
      return msgs_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::QQServer.PubReciveMessage element in MsgsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _queryMessageContextRspFieldNames;
      if (msgs_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], msgs_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::QQServer.PubReciveMessage element in MsgsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static QueryMessageContextRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryMessageContextRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryMessageContextRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryMessageContextRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryMessageContextRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryMessageContextRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryMessageContextRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryMessageContextRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryMessageContextRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryMessageContextRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryMessageContextRsp MakeReadOnly() {
      msgs_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryMessageContextRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryMessageContextRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryMessageContextRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryMessageContextRsp result;
      
      private QueryMessageContextRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryMessageContextRsp original = result;
          result = new QueryMessageContextRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryMessageContextRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::QQServer.QueryMessageContextRsp.Descriptor; }
      }
      
      public override QueryMessageContextRsp DefaultInstanceForType {
        get { return global::QQServer.QueryMessageContextRsp.DefaultInstance; }
      }
      
      public override QueryMessageContextRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryMessageContextRsp) {
          return MergeFrom((QueryMessageContextRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryMessageContextRsp other) {
        if (other == global::QQServer.QueryMessageContextRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.msgs_.Count != 0) {
          result.msgs_.Add(other.msgs_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryMessageContextRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryMessageContextRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.msgs_, global::QQServer.PubReciveMessage.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::QQServer.PubReciveMessage> MsgsList {
        get { return PrepareBuilder().msgs_; }
      }
      public int MsgsCount {
        get { return result.MsgsCount; }
      }
      public global::QQServer.PubReciveMessage GetMsgs(int index) {
        return result.GetMsgs(index);
      }
      public Builder SetMsgs(int index, global::QQServer.PubReciveMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.msgs_[index] = value;
        return this;
      }
      public Builder SetMsgs(int index, global::QQServer.PubReciveMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.msgs_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMsgs(global::QQServer.PubReciveMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.msgs_.Add(value);
        return this;
      }
      public Builder AddMsgs(global::QQServer.PubReciveMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.msgs_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMsgs(scg::IEnumerable<global::QQServer.PubReciveMessage> values) {
        PrepareBuilder();
        result.msgs_.Add(values);
        return this;
      }
      public Builder ClearMsgs() {
        PrepareBuilder();
        result.msgs_.Clear();
        return this;
      }
    }
    static QueryMessageContextRsp() {
      object.ReferenceEquals(global::QQServer.Qqserver.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
